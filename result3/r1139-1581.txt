{"ls":[{"s":"class Solution {\n    public int largest1BorderedSquare(int[][] grid) {\n \n    }\n}","lang":"Java"},{"s":"class Solution(object):\n    def largest1BorderedSquare(self, grid):\n        \"\"\"\n        :type grid: List[List[int]]\n        :rtype: int\n        \"\"\"","lang":"Python"},{"s":"class Solution:\n    def largest1BorderedSquare(self, grid: List[List\n[int]]) -> int:","lang":"Python3"},{"s":"int largest1BorderedSquare(int** grid, int gridSize, \nint* gridColSize){\n \n}","lang":"C"},{"s":"public class Solution {\n    public int Largest1BorderedSquare(int[][] grid) {\n \n    }\n}","lang":"C#"},{"s":"/**\n * @param {number[][]} grid\n * @return {number}\n */\nvar largest1BorderedSquare = function(grid) {\n \n};","lang":"JavaScript"},{"s":"class Solution {\n    public int largest1BorderedSquare(int[][] grid) {\n \n    }\n}","lang":"Java"},{"s":"class Solution(object):\n    def largest1BorderedSquare(self, grid):\n        \"\"\"\n        :type grid: List[List[int]]\n        :rtype: int\n        \"\"\"","lang":"Python"},{"s":"class Solution:\n    def largest1BorderedSquare(self, grid: List[List\n[int]]) -> int:","lang":"Python3"},{"s":"int largest1BorderedSquare(int** grid, int gridSize, \nint* gridColSize){\n \n}","lang":"C"},{"s":"public class Solution {\n    public int Largest1BorderedSquare(int[][] grid) {\n \n    }\n}","lang":"C#"},{"s":"/**\n * @param {number[][]} grid\n * @return {number}\n */\nvar largest1BorderedSquare = function(grid) {\n \n};","lang":"JavaScript"}],"page":"1139/1581","h":"1139. 最大的以 1 为边界的正方形","d":"<div class=\"notranslate\"><p>给你一个由若干 <code>0</code> 和 <code>1</code> 组成的二维网格&nbsp;<code>grid</code>，请你找出边界全部由 <code>1</code> 组成的最大 <strong>正方形</strong> 子网格，并返回该子网格中的元素数量。如果不存在，则返回 <code>0</code>。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre><strong>输入：</strong>grid = [[1,1,1],[1,0,1],[1,1,1]]\n<strong>输出：</strong>9\n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre><strong>输入：</strong>grid = [[1,1,0,0]]\n<strong>输出：</strong>1\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= grid.length &lt;= 100</code></li>\n\t<li><code>1 &lt;= grid[0].length &lt;= 100</code></li>\n\t<li><code>grid[i][j]</code> 为&nbsp;<code>0</code>&nbsp;或&nbsp;<code>1</code></li>\n</ul>\n</div>","l":"中等","s":"/**\n * @param {number[][]} grid\n * @return {number}\n */\nvar largest1BorderedSquare = function(grid) {\n \n};","lang":"JavaScript","href":"https://leetcode-cn.com/problems/largest-1-bordered-square/","bb":{"x":490,"y":50,"w":116,"h":28}}

