{"ls":[{"s":"# @param {Integer[]} bits\n# @return {Boolean}\ndef is_one_bit_character(bits)\n \nend","lang":"Ruby"},{"s":"class Solution {\n    func isOneBitCharacter(_ bits: [Int]) -> Bool {\n        \n    }\n}","lang":"Swift"},{"s":"func isOneBitCharacter(bits []int) bool {\n \n}","lang":"Go"},{"s":"object Solution {\n    def isOneBitCharacter(bits: Array[Int]): \nBoolean = {\n \n    }\n}","lang":"Scala"},{"s":"class Solution {\n    fun isOneBitCharacter(bits: IntArray): Boolean {\n \n    }\n}","lang":"Kotlin"},{"s":"impl Solution {\n    pub fn is_one_bit_character(bits: Vec<i32>) -> \nbool {\n        \n    }\n}","lang":"Rust"},{"s":"class Solution {\n    public boolean isOneBitCharacter(int[] bits) {\n \n    }\n}","lang":"Java"},{"s":"class Solution(object):\n    def isOneBitCharacter(self, bits):\n        \"\"\"\n        :type bits: List[int]\n        :rtype: bool\n        \"\"\"","lang":"Python"},{"s":"class Solution:\n    def isOneBitCharacter(self, bits: List[int]) -> \nbool:","lang":"Python3"},{"s":"bool isOneBitCharacter(int* bits, int bitsSize){\n \n}","lang":"C"},{"s":"public class Solution {\n    public bool IsOneBitCharacter(int[] bits) {\n \n    }\n}","lang":"C#"},{"s":"/**\n * @param {number[]} bits\n * @return {boolean}\n */\nvar isOneBitCharacter = function(bits) {\n \n};","lang":"JavaScript"},{"s":"# @param {Integer[]} bits\n# @return {Boolean}\ndef is_one_bit_character(bits)\n \nend","lang":"Ruby"},{"s":"# @param {Integer[]} bits\n# @return {Boolean}\ndef is_one_bit_character(bits)\n \nend","lang":"Ruby"}],"page":"717/1581","h":"717. 1比特与2比特字符","d":"<div class=\"notranslate\"><p>有两种特殊字符。第一种字符可以用一比特<code>0</code>来表示。第二种字符可以用两比特(<code>10</code>&nbsp;或&nbsp;<code>11</code>)来表示。</p>\n\n<p>现给一个由若干比特组成的字符串。问最后一个字符是否必定为一个一比特字符。给定的字符串总是由0结束。</p>\n\n<p><strong>示例&nbsp;1:</strong></p>\n\n<pre><strong>输入:</strong> \nbits = [1, 0, 0]\n<strong>输出:</strong> True\n<strong>解释:</strong> \n唯一的编码方式是一个两比特字符和一个一比特字符。所以最后一个字符是一比特字符。\n</pre>\n\n<p><strong>示例&nbsp;2:</strong></p>\n\n<pre><strong>输入:</strong> \nbits = [1, 1, 1, 0]\n<strong>输出:</strong> False\n<strong>解释:</strong> \n唯一的编码方式是两比特字符和两比特字符。所以最后一个字符不是一比特字符。\n</pre>\n\n<p><strong>注意:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= len(bits) &lt;= 1000</code>.</li>\n\t<li><code>bits[i]</code> 总是<code>0</code> 或&nbsp;<code>1</code>.</li>\n</ul>\n</div>","l":"简单","s":"class Solution {","lang":"PHP","href":"https://leetcode-cn.com/problems/1-bit-and-2-bit-characters/","bb":{"x":445,"y":40,"w":116,"h":28}}

