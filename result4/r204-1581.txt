{"ls":[{"s":"class Solution {\n    public int countPrimes(int n) {\n \n    }\n}","lang":"Java"},{"s":"class Solution(object):\n    def countPrimes(self, n):\n        \"\"\"\n        :type n: int\n        :rtype: int\n        \"\"\"","lang":"Python"},{"s":"class Solution:\n    def countPrimes(self, n: int) -> int:","lang":"Python3"},{"s":"int countPrimes(int n){\n \n}","lang":"C"},{"s":"public class Solution {\n    public int CountPrimes(int n) {\n \n    }\n}","lang":"C#"},{"s":"/**\n * @param {number} n\n * @return {number}\n */\nvar countPrimes = function(n) {\n \n};","lang":"JavaScript"},{"s":"# @param {Integer} n\n# @return {Integer}\ndef count_primes(n)\n \nend","lang":"Ruby"},{"s":"class Solution {\n    func countPrimes(_ n: Int) -> Int {\n \n    }\n}","lang":"Swift"},{"s":"func countPrimes(n int) int {\n \n}","lang":"Go"},{"s":"object Solution {\n    def countPrimes(n: Int): Int = {\n \n    }\n}","lang":"Scala"},{"s":"class Solution {\n    fun countPrimes(n: Int): Int {\n \n    }\n}","lang":"Kotlin"},{"s":"impl Solution {\n    pub fn count_primes(n: i32) -> i32 {\n \n    }\n}","lang":"Rust"},{"s":"class Solution {\n \n    /**\n     * @param Integer $n\n     * @return Integer\n     */\n    function countPrimes($n) {\n \n    }\n}","lang":"PHP"},{"s":"class Solution {\n \n    /**\n     * @param Integer $n\n     * @return Integer\n     */\n    function countPrimes($n) {\n \n    }\n}","lang":"PHP"}],"page":"204/1581","h":"204. 计数质数","d":"<div class=\"notranslate\"><p>统计所有小于非负整数&nbsp;<em>n&nbsp;</em>的质数的数量。</p>\n\n<p><strong>示例:</strong></p>\n\n<pre><strong>输入:</strong> 10\n<strong>输出:</strong> 4\n<strong>解释:</strong> 小于 10 的质数一共有 4 个, 它们是 2, 3, 5, 7 。\n</pre>\n</div>","l":"简单","s":"# @param {Integer} n\n# @return {Integer}\ndef count_primes(n)\n \nend","lang":"Ruby","href":"https://leetcode-cn.com/problems/count-primes/","bb":{"x":445,"y":40,"w":116,"h":28}}

