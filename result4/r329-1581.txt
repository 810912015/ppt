{"ls":[{"s":"# @param {Integer[][]} matrix\n# @return {Integer}\ndef longest_increasing_path(matrix)\n \nend","lang":"Ruby"},{"s":"class Solution {\n    func longestIncreasingPath(_ matrix: [[Int]]) \n-> Int {\n        \n    }\n}","lang":"Swift"},{"s":"func longestIncreasingPath(matrix [][]int) int {\n \n}","lang":"Go"},{"s":"object Solution {\n    def longestIncreasingPath(matrix: Array[Array\n[Int]]): Int = {\n \n    }\n}","lang":"Scala"},{"s":"class Solution {\n    fun longestIncreasingPath(matrix: \nArray<IntArray>): Int {\n \n    }\n}","lang":"Kotlin"},{"s":"impl Solution {\n    pub fn longest_increasing_path(matrix: \nVec<Vec<i32>>) -> i32 {\n        \n    }\n}","lang":"Rust"},{"s":"class Solution {\n    public int longestIncreasingPath(int[][] matrix)\n {\n \n    }\n}","lang":"Java"},{"s":"class Solution(object):\n    def longestIncreasingPath(self, matrix):\n        \"\"\"\n        :type matrix: List[List[int]]\n        :rtype: int\n        \"\"\"","lang":"Python"},{"s":"class Solution:\n    def longestIncreasingPath(self, matrix: List\n[List[int]]) -> int:","lang":"Python3"},{"s":"int longestIncreasingPath(int** matrix, int \nmatrixSize, int* matrixColSize){\n \n}","lang":"C"},{"s":"public class Solution {\n    public int LongestIncreasingPath(int[][] matrix)\n {\n \n    }\n}","lang":"C#"},{"s":"/**\n * @param {number[][]} matrix\n * @return {number}\n */\nvar longestIncreasingPath = function(matrix) {\n \n};","lang":"JavaScript"},{"s":"# @param {Integer[][]} matrix\n# @return {Integer}\ndef longest_increasing_path(matrix)\n \nend","lang":"Ruby"},{"s":"# @param {Integer[][]} matrix\n# @return {Integer}\ndef longest_increasing_path(matrix)\n \nend","lang":"Ruby"}],"page":"329/1581","h":"329. 矩阵中的最长递增路径","d":"<div class=\"notranslate\"><p>给定一个整数矩阵，找出最长递增路径的长度。</p>\n\n<p>对于每个单元格，你可以往上，下，左，右四个方向移动。 你不能在对角线方向上移动或移动到边界外（即不允许环绕）。</p>\n\n<p><strong>示例 1:</strong></p>\n\n<pre><strong>输入: </strong>nums = \n[\n  [<strong>9</strong>,9,4],\n  [<strong>6</strong>,6,8],\n  [<strong>2</strong>,<strong>1</strong>,1]\n] \n<strong>输出:</strong> 4 \n<strong>解释:</strong> 最长递增路径为&nbsp;<code>[1, 2, 6, 9]</code>。</pre>\n\n<p><strong>示例 2:</strong></p>\n\n<pre><strong>输入:</strong> nums = \n[\n  [<strong>3</strong>,<strong>4</strong>,<strong>5</strong>],\n  [3,2,<strong>6</strong>],\n  [2,2,1]\n] \n<strong>输出: </strong>4 \n<strong>解释: </strong>最长递增路径是&nbsp;<code>[3, 4, 5, 6]</code>。注意不允许在对角线方向上移动。\n</pre>\n</div>","l":"困难","s":"class Solution {\n \n    /**\n     * @param Integer[][] $matrix\n     * @return Integer\n     */\n    function longestIncreasingPath($matrix) {\n        \n    }\n}","lang":"PHP","href":"https://leetcode-cn.com/problems/longest-increasing-path-in-a-matrix/","bb":{"x":445,"y":40,"w":116,"h":28}}

