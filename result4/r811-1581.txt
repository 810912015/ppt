{"ls":[{"s":"class Solution {\n    public List<String> subdomainVisits(String[] \ncpdomains) {\n \n    }\n}","lang":"Java"},{"s":"class Solution(object):\n    def subdomainVisits(self, cpdomains):\n        \"\"\"\n        :type cpdomains: List[str]\n        :rtype: List[str]\n        \"\"\"","lang":"Python"},{"s":"class Solution:\n    def subdomainVisits(self, cpdomains: List[str]) \n-> List[str]:","lang":"Python3"},{"s":"/**\n * Note: The returned array must be malloced, \nassume caller calls free().\n */\nchar ** subdomainVisits(char ** cpdomains, int \ncpdomainsSize, int* returnSize){\n \n}","lang":"C"},{"s":"public class Solution {\n    public IList<string> SubdomainVisits(string[] \ncpdomains) {\n \n    }\n}","lang":"C#"},{"s":"/**\n * @param {string[]} cpdomains\n * @return {string[]}\n */\nvar subdomainVisits = function(cpdomains) {\n \n};","lang":"JavaScript"},{"s":"# @param {String[]} cpdomains\n# @return {String[]}\ndef subdomain_visits(cpdomains)\n \nend","lang":"Ruby"},{"s":"class Solution {\n    func subdomainVisits(_ cpdomains: [String]) -> \n[String] {\n        \n    }\n}","lang":"Swift"},{"s":"func subdomainVisits(cpdomains []string) []string {\n \n}","lang":"Go"},{"s":"object Solution {\n    def subdomainVisits(cpdomains: Array[String]): \nList[String] = {\n \n    }\n}","lang":"Scala"},{"s":"class Solution {\n    fun subdomainVisits(cpdomains: Array<String>): \nList<String> {\n \n    }\n}","lang":"Kotlin"},{"s":"impl Solution {\n    pub fn subdomain_visits(cpdomains: Vec<String>) \n-> Vec<String> {\n        \n    }\n}","lang":"Rust"},{"s":"class Solution {\n \n    /**\n     * @param String[] $cpdomains\n     * @return String[]\n     */\n    function subdomainVisits($cpdomains) {\n        \n    }\n}","lang":"PHP"},{"s":"class Solution {\n \n    /**\n     * @param String[] $cpdomains\n     * @return String[]\n     */\n    function subdomainVisits($cpdomains) {\n        \n    }\n}","lang":"PHP"}],"page":"811/1581","h":"811. 子域名访问计数","d":"<div class=\"notranslate\"><p>一个网站域名，如\"discuss.leetcode.com\"，包含了多个子域名。作为顶级域名，常用的有\"com\"，下一级则有\"leetcode.com\"，最低的一级为\"discuss.leetcode.com\"。当我们访问域名\"discuss.leetcode.com\"时，也同时访问了其父域名\"leetcode.com\"以及顶级域名&nbsp;\"com\"。</p>\n\n<p>给定一个带访问次数和域名的组合，要求分别计算每个域名被访问的次数。其格式为访问次数+空格+地址，例如：\"9001 discuss.leetcode.com\"。</p>\n\n<p>接下来会给出一组访问次数和域名组合的列表<code>cpdomains</code>&nbsp;。要求解析出所有域名的访问次数，输出格式和输入格式相同，不限定先后顺序。</p>\n\n<pre><strong>示例 1:</strong>\n<strong>输入:</strong> \n[\"9001 discuss.leetcode.com\"]\n<strong>输出:</strong> \n[\"9001 discuss.leetcode.com\", \"9001 leetcode.com\", \"9001 com\"]\n<strong>说明:</strong> \n例子中仅包含一个网站域名：\"discuss.leetcode.com\"。按照前文假设，子域名\"leetcode.com\"和\"com\"都会被访问，所以它们都被访问了9001次。\n</pre>\n\n<pre><strong>示例 2\n输入:</strong> \n[\"900 google.mail.com\", \"50 yahoo.com\", \"1 intel.mail.com\", \"5 wiki.org\"]\n<strong>输出:</strong> \n[\"901 mail.com\",\"50 yahoo.com\",\"900 google.mail.com\",\"5 wiki.org\",\"5 org\",\"1 intel.mail.com\",\"951 com\"]\n<strong>说明:</strong> \n按照假设，会访问\"google.mail.com\" 900次，\"yahoo.com\" 50次，\"intel.mail.com\" 1次，\"wiki.org\" 5次。\n而对于父域名，会访问\"mail.com\" 900+1 = 901次，\"com\" 900 + 50 + 1 = 951次，和 \"org\" 5 次。\n</pre>\n\n<p><strong>注意事项：</strong></p>\n\n<ul>\n\t<li>&nbsp;<code>cpdomains</code>&nbsp;的长度小于&nbsp;<code>100</code>。</li>\n\t<li>每个域名的长度小于<code>100</code>。</li>\n\t<li>每个域名地址包含一个或两个\".\"符号。</li>\n\t<li>输入中任意一个域名的访问次数都小于<code>10000</code>。</li>\n</ul>\n</div>","l":"简单","s":"# @param {String[]} cpdomains\n# @return {String[]}\ndef subdomain_visits(cpdomains)\n \nend","lang":"Ruby","href":"https://leetcode-cn.com/problems/subdomain-visit-count/","bb":{"x":445,"y":40,"w":116,"h":28}}

