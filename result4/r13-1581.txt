{"ls":[{"s":"# @param {String} s\n# @return {Integer}\ndef roman_to_int(s)\n \nend","lang":"Ruby"},{"s":"class Solution {\n    func romanToInt(_ s: String) -> Int {\n        \n    }\n}","lang":"Swift"},{"s":"func romanToInt(s string) int {\n \n}","lang":"Go"},{"s":"object Solution {\n    def romanToInt(s: String): Int = {\n \n    }\n}","lang":"Scala"},{"s":"class Solution {\n    fun romanToInt(s: String): Int {\n \n    }\n}","lang":"Kotlin"},{"s":"impl Solution {\n    pub fn roman_to_int(s: String) -> i32 {\n        \n    }\n}","lang":"Rust"},{"s":"class Solution {\n    public int romanToInt(String s) {\n \n    }\n}","lang":"Java"},{"s":"class Solution(object):\n    def romanToInt(self, s):\n        \"\"\"\n        :type s: str\n        :rtype: int\n        \"\"\"","lang":"Python"},{"s":"class Solution:\n    def romanToInt(self, s: str) -> int:","lang":"Python3"},{"s":"int romanToInt(char * s){\n \n}","lang":"C"},{"s":"public class Solution {\n    public int RomanToInt(string s) {\n \n    }\n}","lang":"C#"},{"s":"/**\n * @param {string} s\n * @return {number}\n */\nvar romanToInt = function(s) {\n \n};","lang":"JavaScript"},{"s":"# @param {String} s\n# @return {Integer}\ndef roman_to_int(s)\n \nend","lang":"Ruby"},{"s":"# @param {String} s\n# @return {Integer}\ndef roman_to_int(s)\n \nend","lang":"Ruby"}],"page":"13/1581","h":"13. 罗马数字转整数","d":"<div class=\"notranslate\"><p>罗马数字包含以下七种字符:&nbsp;<code>I</code>，&nbsp;<code>V</code>，&nbsp;<code>X</code>，&nbsp;<code>L</code>，<code>C</code>，<code>D</code>&nbsp;和&nbsp;<code>M</code>。</p>\n\n<pre><strong>字符</strong>          <strong>数值</strong>\nI             1\nV             5\nX             10\nL             50\nC             100\nD             500\nM             1000</pre>\n\n<p>例如， 罗马数字 2 写做&nbsp;<code>II</code>&nbsp;，即为两个并列的 1。12 写做&nbsp;<code>XII</code>&nbsp;，即为&nbsp;<code>X</code>&nbsp;+&nbsp;<code>II</code>&nbsp;。 27 写做&nbsp;&nbsp;<code>XXVII</code>, 即为&nbsp;<code>XX</code>&nbsp;+&nbsp;<code>V</code>&nbsp;+&nbsp;<code>II</code>&nbsp;。</p>\n\n<p>通常情况下，罗马数字中小的数字在大的数字的右边。但也存在特例，例如 4 不写做&nbsp;<code>IIII</code>，而是&nbsp;<code>IV</code>。数字 1 在数字 5 的左边，所表示的数等于大数 5 减小数 1 得到的数值 4 。同样地，数字 9 表示为&nbsp;<code>IX</code>。这个特殊的规则只适用于以下六种情况：</p>\n\n<ul>\n\t<li><code>I</code>&nbsp;可以放在&nbsp;<code>V</code>&nbsp;(5) 和&nbsp;<code>X</code>&nbsp;(10) 的左边，来表示 4 和 9。</li>\n\t<li><code>X</code>&nbsp;可以放在&nbsp;<code>L</code>&nbsp;(50) 和&nbsp;<code>C</code>&nbsp;(100) 的左边，来表示 40 和&nbsp;90。&nbsp;</li>\n\t<li><code>C</code>&nbsp;可以放在&nbsp;<code>D</code>&nbsp;(500) 和&nbsp;<code>M</code>&nbsp;(1000) 的左边，来表示&nbsp;400 和&nbsp;900。</li>\n</ul>\n\n<p>给定一个罗马数字，将其转换成整数。输入确保在 1&nbsp;到 3999 的范围内。</p>\n\n<p><strong>示例&nbsp;1:</strong></p>\n\n<pre><strong>输入:</strong>&nbsp;\"III\"\n<strong>输出:</strong> 3</pre>\n\n<p><strong>示例&nbsp;2:</strong></p>\n\n<pre><strong>输入:</strong>&nbsp;\"IV\"\n<strong>输出:</strong> 4</pre>\n\n<p><strong>示例&nbsp;3:</strong></p>\n\n<pre><strong>输入:</strong>&nbsp;\"IX\"\n<strong>输出:</strong> 9</pre>\n\n<p><strong>示例&nbsp;4:</strong></p>\n\n<pre><strong>输入:</strong>&nbsp;\"LVIII\"\n<strong>输出:</strong> 58\n<strong>解释:</strong> L = 50, V= 5, III = 3.\n</pre>\n\n<p><strong>示例&nbsp;5:</strong></p>\n\n<pre><strong>输入:</strong>&nbsp;\"MCMXCIV\"\n<strong>输出:</strong> 1994\n<strong>解释:</strong> M = 1000, CM = 900, XC = 90, IV = 4.</pre>\n</div>","l":"简单","s":"class Solution {","lang":"PHP","href":"https://leetcode-cn.com/problems/roman-to-integer/","bb":{"x":445,"y":40,"w":116,"h":28}}

