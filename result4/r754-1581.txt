{"ls":[{"s":"/**\n * @param {number} target\n * @return {number}\n */\nvar reachNumber = function(target) {\n \n};","lang":"JavaScript"},{"s":"# @param {Integer} target\n# @return {Integer}\ndef reach_number(target)\n \nend","lang":"Ruby"},{"s":"class Solution {\n    func reachNumber(_ target: Int) -> Int {\n        \n    }\n}","lang":"Swift"},{"s":"func reachNumber(target int) int {\n \n}","lang":"Go"},{"s":"object Solution {\n    def reachNumber(target: Int): Int = {\n \n    }\n}","lang":"Scala"},{"s":"class Solution {\n    fun reachNumber(target: Int): Int {\n \n    }\n}","lang":"Kotlin"},{"s":"class Solution {\n    public int reachNumber(int target) {\n \n    }\n}","lang":"Java"},{"s":"class Solution(object):\n    def reachNumber(self, target):\n        \"\"\"\n        :type target: int\n        :rtype: int\n        \"\"\"","lang":"Python"},{"s":"class Solution:\n    def reachNumber(self, target: int) -> int:","lang":"Python3"},{"s":"int reachNumber(int target){\n \n}","lang":"C"},{"s":"public class Solution {\n    public int ReachNumber(int target) {\n \n    }\n}","lang":"C#"},{"s":"/**\n * @param {number} target\n * @return {number}\n */\nvar reachNumber = function(target) {\n \n};","lang":"JavaScript"},{"s":"# @param {Integer} target\n# @return {Integer}\ndef reach_number(target)\n \nend","lang":"Ruby"},{"s":"# @param {Integer} target\n# @return {Integer}\ndef reach_number(target)\n \nend","lang":"Ruby"}],"page":"754/1581","h":"754. 到达终点数字","d":"<div class=\"notranslate\"><p>在一根无限长的数轴上，你站在<code>0</code>的位置。终点在<code>target</code>的位置。</p>\n\n<p>每次你可以选择向左或向右移动。第 n 次移动（从 1 开始），可以走 n 步。</p>\n\n<p>返回到达终点需要的最小移动次数。</p>\n\n<p><strong>示例 1:</strong></p>\n\n<pre><strong>输入:</strong> target = 3\n<strong>输出:</strong> 2\n<strong>解释:</strong>\n第一次移动，从 0 到 1 。\n第二次移动，从 1 到 3 。\n</pre>\n\n<p><strong>示例 2:</strong></p>\n\n<pre><strong>输入:</strong> target = 2\n<strong>输出:</strong> 3\n<strong>解释:</strong>\n第一次移动，从 0 到 1 。\n第二次移动，从 1 到 -1 。\n第三次移动，从 -1 到 2 。\n</pre>\n\n<p><strong>注意:</strong></p>\n\n<ul>\n\t<li><code>target</code>是在<code>[-10^9, 10^9]</code>范围中的非零整数。</li>\n</ul>\n</div>","l":"中等","s":"impl Solution {\n    pub fn reach_number(target: i32) -> i32 {\n        \n    }\n}","lang":"Rust","href":"https://leetcode-cn.com/problems/reach-a-number/","bb":{"x":445,"y":40,"w":116,"h":28}}

