{"ls":[{"s":"public class Solution {\n    public string ComplexNumberMultiply(string a, \nstring b) {\n \n    }\n}","lang":"C#"},{"s":"/**\n * @param {string} a\n * @param {string} b\n * @return {string}\n */\nvar complexNumberMultiply = function(a, b) {\n \n};","lang":"JavaScript"},{"s":"# @param {String} a\n# @param {String} b\n# @return {String}\ndef complex_number_multiply(a, b)\n \nend","lang":"Ruby"},{"s":"class Solution {\n    func complexNumberMultiply(_ a: String, _ b: \nString) -> String {\n        \n    }\n}","lang":"Swift"},{"s":"func complexNumberMultiply(a string, b string) \nstring {\n \n}","lang":"Go"},{"s":"object Solution {\n    def complexNumberMultiply(a: String, b: String)\n: String = {\n \n    }\n}","lang":"Scala"},{"s":"class Solution {\n    public String complexNumberMultiply(String a, \nString b) {\n \n    }\n}","lang":"Java"},{"s":"class Solution(object):\n    def complexNumberMultiply(self, a, b):\n        \"\"\"\n        :type a: str\n        :type b: str\n        :rtype: str\n        \"\"\"","lang":"Python"},{"s":"class Solution:\n    def complexNumberMultiply(self, a: str, b: str) \n-> str:","lang":"Python3"},{"s":"char * complexNumberMultiply(char * a, char * b){\n \n}","lang":"C"},{"s":"public class Solution {\n    public string ComplexNumberMultiply(string a, \nstring b) {\n \n    }\n}","lang":"C#"},{"s":"/**\n * @param {string} a\n * @param {string} b\n * @return {string}\n */\nvar complexNumberMultiply = function(a, b) {\n \n};","lang":"JavaScript"},{"s":"# @param {String} a\n# @param {String} b\n# @return {String}\ndef complex_number_multiply(a, b)\n \nend","lang":"Ruby"},{"s":"# @param {String} a\n# @param {String} b\n# @return {String}\ndef complex_number_multiply(a, b)\n \nend","lang":"Ruby"}],"page":"537/1581","h":"537. 复数乘法","d":"<div class=\"notranslate\"><p>给定两个表示<a href=\"https://baike.baidu.com/item/%E5%A4%8D%E6%95%B0/254365?fr=aladdin\">复数</a>的字符串。</p>\n\n<p>返回表示它们乘积的字符串。注意，根据定义 i<sup>2</sup> = -1 。</p>\n\n<p><strong>示例 1:</strong></p>\n\n<pre><strong>输入:</strong> \"1+1i\", \"1+1i\"\n<strong>输出:</strong> \"0+2i\"\n<strong>解释:</strong> (1 + i) * (1 + i) = 1 + i<sup>2</sup> + 2 * i = 2i ，你需要将它转换为 0+2i 的形式。\n</pre>\n\n<p><strong>示例 2:</strong></p>\n\n<pre><strong>输入:</strong> \"1+-1i\", \"1+-1i\"\n<strong>输出:</strong> \"0+-2i\"\n<strong>解释:</strong> (1 - i) * (1 - i) = 1 + i<sup>2</sup> - 2 * i = -2i ，你需要将它转换为 0+-2i 的形式。 \n</pre>\n\n<p><strong>注意:</strong></p>\n\n<ol>\n\t<li>输入字符串不包含额外的空格。</li>\n\t<li>输入字符串将以&nbsp;<strong>a+bi</strong> 的形式给出，其中整数 <strong>a</strong> 和 <strong>b</strong> 的范围均在 [-100, 100] 之间。<strong>输出也应当符合这种形式</strong>。</li>\n</ol>\n</div>","l":"中等","s":"class Solution {\n    fun complexNumberMultiply(a: String, b: String)\n: String {\n \n    }\n}","lang":"Kotlin","href":"https://leetcode-cn.com/problems/complex-number-multiplication/","bb":{"x":445,"y":40,"w":116,"h":28}}

