{"ls":[{"s":"# @param {Integer} k\n# @param {Integer} n\n# @return {Integer[][]}\ndef combination_sum3(k, n)\n \nend","lang":"Ruby"},{"s":"class Solution {\n    func combinationSum3(_ k: Int, _ n: Int) -> [\n[Int]] {\n \n    }\n}","lang":"Swift"},{"s":"func combinationSum3(k int, n int) [][]int {\n \n}","lang":"Go"},{"s":"object Solution {\n    def combinationSum3(k: Int, n: Int): List[List\n[Int]] = {\n \n    }\n}","lang":"Scala"},{"s":"class Solution {\n    fun combinationSum3(k: Int, n: Int): \nList<List<Int>> {\n \n    }\n}","lang":"Kotlin"},{"s":"impl Solution {\n    pub fn combination_sum3(k: i32, n: i32) -> \nVec<Vec<i32>> {\n \n    }\n}","lang":"Rust"},{"s":"class Solution {\n    public List<List<Integer>> combinationSum3(int \nk, int n) {\n \n    }\n}","lang":"Java"},{"s":"class Solution(object):\n    def combinationSum3(self, k, n):\n        \"\"\"\n        :type k: int\n        :type n: int\n        :rtype: List[List[int]]\n        \"\"\"","lang":"Python"},{"s":"class Solution:\n    def combinationSum3(self, k: int, n: int) -> \nList[List[int]]:","lang":"Python3"},{"s":"/**\n * Return an array of arrays of size *returnSize.\n * The sizes of the arrays are returned as \n*returnColumnSizes array.\n * Note: Both returned array and *columnSizes array \nmust be malloced, assume caller calls free().\n */\nint** combinationSum3(int k, int n, int* returnSize,\n int** returnColumnSizes){\n \n}","lang":"C"},{"s":"public class Solution {\n    public IList<IList<int>> CombinationSum3(int k, \nint n) {\n \n    }\n}","lang":"C#"},{"s":"/**\n * @param {number} k\n * @param {number} n\n * @return {number[][]}\n */\nvar combinationSum3 = function(k, n) {\n \n};","lang":"JavaScript"},{"s":"# @param {Integer} k\n# @param {Integer} n\n# @return {Integer[][]}\ndef combination_sum3(k, n)\n \nend","lang":"Ruby"},{"s":"# @param {Integer} k\n# @param {Integer} n\n# @return {Integer[][]}\ndef combination_sum3(k, n)\n \nend","lang":"Ruby"}],"page":"216/1581","h":"216. 组合总和 III","d":"<div class=\"notranslate\"><p>找出所有相加之和为&nbsp;<em><strong>n</strong> </em>的&nbsp;<strong><em>k&nbsp;</em></strong>个数的组合<strong><em>。</em></strong>组合中只允许含有 1 -&nbsp;9 的正整数，并且每种组合中不存在重复的数字。</p>\n\n<p><strong>说明：</strong></p>\n\n<ul>\n\t<li>所有数字都是正整数。</li>\n\t<li>解集不能包含重复的组合。&nbsp;</li>\n</ul>\n\n<p><strong>示例 1:</strong></p>\n\n<pre><strong>输入:</strong> <em><strong>k</strong></em> = 3, <em><strong>n</strong></em> = 7\n<strong>输出:</strong> [[1,2,4]]\n</pre>\n\n<p><strong>示例 2:</strong></p>\n\n<pre><strong>输入:</strong> <em><strong>k</strong></em> = 3, <em><strong>n</strong></em> = 9\n<strong>输出:</strong> [[1,2,6], [1,3,5], [2,3,4]]\n</pre>\n</div>","l":"中等","s":"class Solution {","lang":"PHP","href":"https://leetcode-cn.com/problems/combination-sum-iii/","bb":{"x":445,"y":40,"w":116,"h":28}}

