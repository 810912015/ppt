{"ls":[{"s":"# @param {Integer[][]} ghosts\n# @param {Integer[]} target\n# @return {Boolean}\ndef escape_ghosts(ghosts, target)\n \nend","lang":"Ruby"},{"s":"class Solution {\n    func escapeGhosts(_ ghosts: [[Int]], _ target: \n[Int]) -> Bool {\n        \n    }\n}","lang":"Swift"},{"s":"func escapeGhosts(ghosts [][]int, target []int) \nbool {\n \n}","lang":"Go"},{"s":"object Solution {\n    def escapeGhosts(ghosts: Array[Array[Int]], \ntarget: Array[Int]): Boolean = {\n \n    }\n}","lang":"Scala"},{"s":"class Solution {\n    fun escapeGhosts(ghosts: Array<IntArray>, \ntarget: IntArray): Boolean {\n \n    }\n}","lang":"Kotlin"},{"s":"impl Solution {\n    pub fn escape_ghosts(ghosts: Vec<Vec<i32>>, \ntarget: Vec<i32>) -> bool {\n        \n    }\n}","lang":"Rust"},{"s":"class Solution {\n    public boolean escapeGhosts(int[][] ghosts, int\n[] target) {\n \n    }\n}","lang":"Java"},{"s":"class Solution(object):\n    def escapeGhosts(self, ghosts, target):\n        \"\"\"\n        :type ghosts: List[List[int]]\n        :type target: List[int]\n        :rtype: bool\n        \"\"\"","lang":"Python"},{"s":"class Solution:\n    def escapeGhosts(self, ghosts: List[List[int]], \ntarget: List[int]) -> bool:","lang":"Python3"},{"s":"bool escapeGhosts(int** ghosts, int ghostsSize, \nint* ghostsColSize, int* target, int targetSize){\n \n}","lang":"C"},{"s":"public class Solution {\n    public bool EscapeGhosts(int[][] ghosts, int[] \ntarget) {\n \n    }\n}","lang":"C#"},{"s":"/**\n * @param {number[][]} ghosts\n * @param {number[]} target\n * @return {boolean}\n */\nvar escapeGhosts = function(ghosts, target) {\n \n};","lang":"JavaScript"},{"s":"# @param {Integer[][]} ghosts\n# @param {Integer[]} target\n# @return {Boolean}\ndef escape_ghosts(ghosts, target)\n \nend","lang":"Ruby"},{"s":"# @param {Integer[][]} ghosts\n# @param {Integer[]} target\n# @return {Boolean}\ndef escape_ghosts(ghosts, target)\n \nend","lang":"Ruby"}],"page":"789/1581","h":"789. 逃脱阻碍者","d":"<div class=\"notranslate\"><p>你在进行一个简化版的吃豆人游戏。你从&nbsp;<code>(0, 0)</code>&nbsp;点开始出发，你的目的地是&nbsp;<code>(target[0], target[1])</code>&nbsp;。地图上有一些阻碍者，第 i 个阻碍者从&nbsp;<code>(ghosts[i][0], ghosts[i][1])</code>&nbsp;出发。</p>\n\n<p>每一回合，你和阻碍者们*可以*同时向东，西，南，北四个方向移动，每次可以移动到距离原位置1个单位的新位置。</p>\n\n<p>如果你可以在任何阻碍者抓住你之前到达目的地（阻碍者可以采取任意行动方式），则被视为逃脱成功。如果你和阻碍者同时到达了一个位置（包括目的地）都不算是逃脱成功。</p>\n\n<p>当且仅当你有可能成功逃脱时，输出 True。</p>\n\n<pre><strong>示例 1:</strong>\n<strong>输入：</strong> \nghosts = [[1, 0], [0, 3]]\ntarget = [0, 1]\n<strong>输出：</strong>true\n<strong>解释：\n</strong>你可以直接一步到达目的地(0,1)，在(1, 0)或者(0, 3)位置的阻碍者都不可能抓住你。 \n</pre>\n\n<pre><strong>示例 2:</strong>\n<strong>输入：</strong> \nghosts = [[1, 0]]\ntarget = [2, 0]\n<strong>输出：</strong>false\n<strong>解释：</strong>\n你需要走到位于(2, 0)的目的地，但是在(1, 0)的阻碍者位于你和目的地之间。 \n</pre>\n\n<pre><strong>示例 3:</strong>\n<strong>输入：</strong> \nghosts = [[2, 0]]\ntarget = [1, 0]\n<strong>输出：</strong>false\n<strong>解释：\n</strong>阻碍者可以和你同时达到目的地。 \n</pre>\n\n<p><strong>说明：</strong></p>\n\n<ul>\n\t<li>所有的点的坐标值的绝对值 &lt;=&nbsp;<code>10000</code>。</li>\n\t<li>阻碍者的数量不会超过&nbsp;<code>100</code>。</li>\n</ul>\n</div>","l":"中等","s":"class Solution {\n \n    /**\n     * @param Integer[][] $ghosts\n     * @param Integer[] $target\n     * @return Boolean\n     */\n    function escapeGhosts($ghosts, $target) {\n        \n    }\n}","lang":"PHP","href":"https://leetcode-cn.com/problems/escape-the-ghosts/","bb":{"x":445,"y":40,"w":116,"h":28}}

