{"ls":[{"s":"# @param {Integer[][]} points\n# @return {Float}\ndef largest_triangle_area(points)\n \nend","lang":"Ruby"},{"s":"class Solution {\n    func largestTriangleArea(_ points: [[Int]]) -> \nDouble {\n        \n    }\n}","lang":"Swift"},{"s":"func largestTriangleArea(points [][]int) float64 {\n \n}","lang":"Go"},{"s":"object Solution {\n    def largestTriangleArea(points: Array[Array[Int]\n]): Double = {\n \n    }\n}","lang":"Scala"},{"s":"class Solution {\n    fun largestTriangleArea(points: Array<IntArray>)\n: Double {\n \n    }\n}","lang":"Kotlin"},{"s":"impl Solution {\n    pub fn largest_triangle_area(points: \nVec<Vec<i32>>) -> f64 {\n        \n    }\n}","lang":"Rust"},{"s":"class Solution {\n    public double largestTriangleArea(int[][] \npoints) {\n \n    }\n}","lang":"Java"},{"s":"class Solution(object):\n    def largestTriangleArea(self, points):\n        \"\"\"\n        :type points: List[List[int]]\n        :rtype: float\n        \"\"\"","lang":"Python"},{"s":"class Solution:\n    def largestTriangleArea(self, points: List[List\n[int]]) -> float:","lang":"Python3"},{"s":"double largestTriangleArea(int** points, int \npointsSize, int* pointsColSize){\n \n}","lang":"C"},{"s":"public class Solution {\n    public double LargestTriangleArea(int[][] \npoints) {\n \n    }\n}","lang":"C#"},{"s":"/**\n * @param {number[][]} points\n * @return {number}\n */\nvar largestTriangleArea = function(points) {\n \n};","lang":"JavaScript"},{"s":"# @param {Integer[][]} points\n# @return {Float}\ndef largest_triangle_area(points)\n \nend","lang":"Ruby"},{"s":"# @param {Integer[][]} points\n# @return {Float}\ndef largest_triangle_area(points)\n \nend","lang":"Ruby"}],"page":"812/1581","h":"812. 最大三角形面积","d":"<div class=\"notranslate\"><p>给定包含多个点的集合，从其中取三个点组成三角形，返回能组成的最大三角形的面积。</p>\n\n<pre><strong>示例:</strong>\n<strong>输入:</strong> points = [[0,0],[0,1],[1,0],[0,2],[2,0]]\n<strong>输出:</strong> 2\n<strong>解释:</strong> \n这五个点如下图所示。组成的橙色三角形是最大的，面积为2。\n</pre>\n\n<p><img style=\"height:328px; width:400px\" src=\"https://s3-lc-upload.s3.amazonaws.com/uploads/2018/04/04/1027.png\" alt=\"\"></p>\n\n<p><strong>注意: </strong></p>\n\n<ul>\n\t<li><code>3 &lt;= points.length &lt;= 50</code>.</li>\n\t<li>不存在重复的点。</li>\n\t<li>&nbsp;<code>-50 &lt;= points[i][j] &lt;= 50</code>.</li>\n\t<li>结果误差值在&nbsp;<code>10^-6</code>&nbsp;以内都认为是正确答案。</li>\n</ul>\n</div>","l":"简单","s":"class Solution {\n \n    /**\n     * @param Integer[][] $points\n     * @return Float\n     */\n    function largestTriangleArea($points) {\n        \n    }\n}","lang":"PHP","href":"https://leetcode-cn.com/problems/largest-triangle-area/","bb":{"x":445,"y":40,"w":116,"h":28}}

