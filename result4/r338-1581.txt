{"ls":[{"s":"# @param {Integer} num\n# @return {Integer[]}\ndef count_bits(num)\n \nend","lang":"Ruby"},{"s":"class Solution {\n    func countBits(_ num: Int) -> [Int] {\n        \n    }\n}","lang":"Swift"},{"s":"func countBits(num int) []int {\n \n}","lang":"Go"},{"s":"object Solution {\n    def countBits(num: Int): Array[Int] = {\n \n    }\n}","lang":"Scala"},{"s":"class Solution {\n    fun countBits(num: Int): IntArray {\n \n    }\n}","lang":"Kotlin"},{"s":"impl Solution {\n    pub fn count_bits(num: i32) -> Vec<i32> {\n        \n    }\n}","lang":"Rust"},{"s":"class Solution {\n    public int[] countBits(int num) {\n \n    }\n}","lang":"Java"},{"s":"class Solution(object):\n    def countBits(self, num):\n        \"\"\"\n        :type num: int\n        :rtype: List[int]\n        \"\"\"","lang":"Python"},{"s":"class Solution:\n    def countBits(self, num: int) -> List[int]:","lang":"Python3"},{"s":"/**\n * Note: The returned array must be malloced, \nassume caller calls free().\n */\nint* countBits(int num, int* returnSize){\n \n}","lang":"C"},{"s":"public class Solution {\n    public int[] CountBits(int num) {\n \n    }\n}","lang":"C#"},{"s":"/**\n * @param {number} num\n * @return {number[]}\n */\nvar countBits = function(num) {\n \n};","lang":"JavaScript"},{"s":"# @param {Integer} num\n# @return {Integer[]}\ndef count_bits(num)\n \nend","lang":"Ruby"},{"s":"# @param {Integer} num\n# @return {Integer[]}\ndef count_bits(num)\n \nend","lang":"Ruby"}],"page":"338/1581","h":"338. 比特位计数","d":"<div class=\"notranslate\"><p>给定一个非负整数&nbsp;<strong>num</strong>。对于&nbsp;<strong>0 ≤ i ≤ num </strong>范围中的每个数字&nbsp;<strong>i&nbsp;</strong>，计算其二进制数中的 1 的数目并将它们作为数组返回。</p>\n\n<p><strong>示例 1:</strong></p>\n\n<pre><strong>输入: </strong>2\n<strong>输出: </strong>[0,1,1]</pre>\n\n<p><strong>示例&nbsp;2:</strong></p>\n\n<pre><strong>输入: </strong>5\n<strong>输出: </strong><code>[0,1,1,2,1,2]</code></pre>\n\n<p><strong>进阶:</strong></p>\n\n<ul>\n\t<li>给出时间复杂度为<strong>O(n*sizeof(integer))</strong>的解答非常容易。但你可以在线性时间<strong>O(n)</strong>内用一趟扫描做到吗？</li>\n\t<li>要求算法的空间复杂度为<strong>O(n)</strong>。</li>\n\t<li>你能进一步完善解法吗？要求在C++或任何其他语言中不使用任何内置函数（如 C++ 中的&nbsp;<strong>__builtin_popcount</strong>）来执行此操作。</li>\n</ul>\n</div>","l":"中等","s":"class Solution {\n \n    /**\n     * @param Integer $num\n     * @return Integer[]\n     */\n    function countBits($num) {\n        \n    }\n}","lang":"PHP","href":"https://leetcode-cn.com/problems/counting-bits/","bb":{"x":445,"y":40,"w":116,"h":28}}

