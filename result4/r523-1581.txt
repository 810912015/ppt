{"ls":[{"s":"# @param {Integer[]} nums\n# @param {Integer} k\n# @return {Boolean}\ndef check_subarray_sum(nums, k)\n \nend","lang":"Ruby"},{"s":"class Solution {\n    func checkSubarraySum(_ nums: [Int], _ k: Int) \n-> Bool {\n        \n    }\n}","lang":"Swift"},{"s":"func checkSubarraySum(nums []int, k int) bool {\n \n}","lang":"Go"},{"s":"object Solution {\n    def checkSubarraySum(nums: Array[Int], k: Int): \nBoolean = {\n \n    }\n}","lang":"Scala"},{"s":"class Solution {\n    fun checkSubarraySum(nums: IntArray, k: Int): \nBoolean {\n \n    }\n}","lang":"Kotlin"},{"s":"impl Solution {\n    pub fn check_subarray_sum(nums: Vec<i32>, k: \ni32) -> bool {\n        \n    }\n}","lang":"Rust"},{"s":"class Solution {\n    public boolean checkSubarraySum(int[] nums, int \nk) {\n \n    }\n}","lang":"Java"},{"s":"class Solution(object):\n    def checkSubarraySum(self, nums, k):\n        \"\"\"\n        :type nums: List[int]\n        :type k: int\n        :rtype: bool\n        \"\"\"","lang":"Python"},{"s":"class Solution:\n    def checkSubarraySum(self, nums: List[int], k: \nint) -> bool:","lang":"Python3"},{"s":"bool checkSubarraySum(int* nums, int numsSize, int \nk){\n \n}","lang":"C"},{"s":"public class Solution {\n    public bool CheckSubarraySum(int[] nums, int k) \n{\n \n    }\n}","lang":"C#"},{"s":"/**\n * @param {number[]} nums\n * @param {number} k\n * @return {boolean}\n */\nvar checkSubarraySum = function(nums, k) {\n \n};","lang":"JavaScript"},{"s":"# @param {Integer[]} nums\n# @param {Integer} k\n# @return {Boolean}\ndef check_subarray_sum(nums, k)\n \nend","lang":"Ruby"},{"s":"# @param {Integer[]} nums\n# @param {Integer} k\n# @return {Boolean}\ndef check_subarray_sum(nums, k)\n \nend","lang":"Ruby"}],"page":"523/1581","h":"523. 连续的子数组和","d":"<div class=\"notranslate\"><p>给定一个包含<strong>非负数</strong>的数组和一个目标<strong>整数</strong>&nbsp;k，编写一个函数来判断该数组是否含有连续的子数组，其大小至少为 2，总和为 <strong>k</strong> 的倍数，即总和为 n*k，其中 n 也是一个<strong>整数</strong>。</p>\n\n<p><strong>示例 1:</strong></p>\n\n<pre><strong>输入:</strong> [23,2,4,6,7], k = 6\n<strong>输出:</strong> True\n<strong>解释:</strong> [2,4] 是一个大小为 2 的子数组，并且和为 6。\n</pre>\n\n<p><strong>示例 2:</strong></p>\n\n<pre><strong>输入:</strong> [23,2,6,4,7], k = 6\n<strong>输出:</strong> True\n<strong>解释:</strong> [23,2,6,4,7]是大小为 5 的子数组，并且和为 42。\n</pre>\n\n<p><strong>说明:</strong></p>\n\n<ol>\n\t<li>数组的长度不会超过10,000。</li>\n\t<li>你可以认为所有数字总和在 32 位有符号整数范围内。</li>\n</ol>\n</div>","l":"中等","s":"class Solution {\n \n    /**\n     * @param Integer[] $nums\n     * @param Integer $k\n     * @return Boolean\n     */\n    function checkSubarraySum($nums, $k) {\n        \n    }\n}","lang":"PHP","href":"https://leetcode-cn.com/problems/continuous-subarray-sum/","bb":{"x":445,"y":40,"w":116,"h":28}}

