{"ls":[{"s":"class Solution {\n    public int maxProfit(int[] prices) {\n \n    }\n}","lang":"Java"},{"s":"class Solution(object):\n    def maxProfit(self, prices):\n        \"\"\"\n        :type prices: List[int]\n        :rtype: int\n        \"\"\"","lang":"Python"},{"s":"class Solution:\n    def maxProfit(self, prices: List[int]) -> int:","lang":"Python3"},{"s":"int maxProfit(int* prices, int pricesSize){\n \n}","lang":"C"},{"s":"public class Solution {\n    public int MaxProfit(int[] prices) {\n \n    }\n}","lang":"C#"},{"s":"/**\n * @param {number[]} prices\n * @return {number}\n */\nvar maxProfit = function(prices) {\n \n};","lang":"JavaScript"},{"s":"# @param {Integer[]} prices\n# @return {Integer}\ndef max_profit(prices)\n \nend","lang":"Ruby"},{"s":"class Solution {\n    func maxProfit(_ prices: [Int]) -> Int {\n \n    }\n}","lang":"Swift"},{"s":"func maxProfit(prices []int) int {\n \n}","lang":"Go"},{"s":"object Solution {\n    def maxProfit(prices: Array[Int]): Int = {\n \n    }\n}","lang":"Scala"},{"s":"class Solution {\n    fun maxProfit(prices: IntArray): Int {\n \n    }\n}","lang":"Kotlin"},{"s":"impl Solution {\n    pub fn max_profit(prices: Vec<i32>) -> i32 {\n \n    }\n}","lang":"Rust"},{"s":"class Solution {\n \n    /**\n     * @param Integer[] $prices\n     * @return Integer\n     */\n    function maxProfit($prices) {\n \n    }\n}","lang":"PHP"},{"s":"class Solution {\n \n    /**\n     * @param Integer[] $prices\n     * @return Integer\n     */\n    function maxProfit($prices) {\n \n    }\n}","lang":"PHP"}],"page":"121/1581","h":"121. 买卖股票的最佳时机","d":"<div class=\"notranslate\"><p>给定一个数组，它的第&nbsp;<em>i</em> 个元素是一支给定股票第 <em>i</em> 天的价格。</p>\n\n<p>如果你最多只允许完成一笔交易（即买入和卖出一支股票一次），设计一个算法来计算你所能获取的最大利润。</p>\n\n<p>注意：你不能在买入股票前卖出股票。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1:</strong></p>\n\n<pre><strong>输入:</strong> [7,1,5,3,6,4]\n<strong>输出:</strong> 5\n<strong>解释: </strong>在第 2 天（股票价格 = 1）的时候买入，在第 5 天（股票价格 = 6）的时候卖出，最大利润 = 6-1 = 5 。\n     注意利润不能是 7-1 = 6, 因为卖出价格需要大于买入价格。\n</pre>\n\n<p><strong>示例 2:</strong></p>\n\n<pre><strong>输入:</strong> [7,6,4,3,1]\n<strong>输出:</strong> 0\n<strong>解释: </strong>在这种情况下, 没有交易完成, 所以最大利润为 0。\n</pre>\n</div>","l":"简单","s":"# @param {Integer[]} prices","lang":"Ruby","href":"https://leetcode-cn.com/problems/best-time-to-buy-and-sell-stock/","bb":{"x":445,"y":40,"w":116,"h":28}}

