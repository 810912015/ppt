{"ls":[{"s":"class Solution {\n    public int[] asteroidCollision(int[] asteroids) \n{\n \n    }\n}","lang":"Java"},{"s":"class Solution(object):\n    def asteroidCollision(self, asteroids):\n        \"\"\"\n        :type asteroids: List[int]\n        :rtype: List[int]\n        \"\"\"","lang":"Python"},{"s":"class Solution:\n    def asteroidCollision(self, asteroids: List[int]\n) -> List[int]:","lang":"Python3"},{"s":"/**\n * Note: The returned array must be malloced, \nassume caller calls free().\n */\nint* asteroidCollision(int* asteroids, int \nasteroidsSize, int* returnSize){\n \n}","lang":"C"},{"s":"public class Solution {\n    public int[] AsteroidCollision(int[] asteroids) \n{\n \n    }\n}","lang":"C#"},{"s":"/**\n * @param {number[]} asteroids\n * @return {number[]}\n */\nvar asteroidCollision = function(asteroids) {\n \n};","lang":"JavaScript"},{"s":"# @param {Integer[]} asteroids\n# @return {Integer[]}\ndef asteroid_collision(asteroids)\n \nend","lang":"Ruby"},{"s":"class Solution {\n    func asteroidCollision(_ asteroids: [Int]) -> \n[Int] {\n        \n    }\n}","lang":"Swift"},{"s":"func asteroidCollision(asteroids []int) []int {\n \n}","lang":"Go"},{"s":"object Solution {\n    def asteroidCollision(asteroids: Array[Int]): \nArray[Int] = {\n \n    }\n}","lang":"Scala"},{"s":"class Solution {\n    fun asteroidCollision(asteroids: IntArray): \nIntArray {\n \n    }\n}","lang":"Kotlin"},{"s":"impl Solution {\n    pub fn asteroid_collision(asteroids: Vec<i32>) \n-> Vec<i32> {\n        \n    }\n}","lang":"Rust"},{"s":"class Solution {\n \n    /**\n     * @param Integer[] $asteroids\n     * @return Integer[]\n     */\n    function asteroidCollision($asteroids) {\n        \n    }\n}","lang":"PHP"},{"s":"class Solution {\n \n    /**\n     * @param Integer[] $asteroids\n     * @return Integer[]\n     */\n    function asteroidCollision($asteroids) {\n        \n    }\n}","lang":"PHP"}],"page":"735/1581","h":"735. 行星碰撞","d":"<div class=\"notranslate\"><p>给定一个整数数组 <code>asteroids</code>，表示在同一行的行星。</p>\n\n<p>对于数组中的每一个元素，其绝对值表示行星的大小，正负表示行星的移动方向（正表示向右移动，负表示向左移动）。每一颗行星以相同的速度移动。</p>\n\n<p>找出碰撞后剩下的所有行星。碰撞规则：两个行星相互碰撞，较小的行星会爆炸。如果两颗行星大小相同，则两颗行星都会爆炸。两颗移动方向相同的行星，永远不会发生碰撞。</p>\n\n<p><strong>示例 1:</strong></p>\n\n<pre><strong>输入:</strong> \nasteroids = [5, 10, -5]\n<strong>输出:</strong> [5, 10]\n<strong>解释:</strong> \n10 和 -5 碰撞后只剩下 10。 5 和 10 永远不会发生碰撞。\n</pre>\n\n<p><strong>示例 2:</strong></p>\n\n<pre><strong>输入:</strong> \nasteroids = [8, -8]\n<strong>输出:</strong> []\n<strong>解释:</strong> \n8 和 -8 碰撞后，两者都发生爆炸。\n</pre>\n\n<p><strong>示例 3:</strong></p>\n\n<pre><strong>输入:</strong> \nasteroids = [10, 2, -5]\n<strong>输出:</strong> [10]\n<strong>解释:</strong> \n2 和 -5 发生碰撞后剩下 -5。10 和 -5 发生碰撞后剩下 10。\n</pre>\n\n<p><strong>示例 4:</strong></p>\n\n<pre><strong>输入:</strong> \nasteroids = [-2, -1, 1, 2]\n<strong>输出:</strong> [-2, -1, 1, 2]\n<strong>解释:</strong> \n-2 和 -1 向左移动，而 1 和 2 向右移动。\n由于移动方向相同的行星不会发生碰撞，所以最终没有行星发生碰撞。\n</pre>\n\n<p><strong>说明:</strong></p>\n\n<ul>\n\t<li>数组&nbsp;<code>asteroids</code> 的长度不超过&nbsp;<code>10000</code>。</li>\n\t<li>每一颗行星的大小都是非零整数，范围是&nbsp;<code>[-1000, 1000]</code>&nbsp;。</li>\n</ul>\n</div>","l":"中等","s":"# @param {Integer[]} asteroids","lang":"Ruby","href":"https://leetcode-cn.com/problems/asteroid-collision/","bb":{"x":445,"y":40,"w":116,"h":28}}

