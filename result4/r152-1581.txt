{"ls":[{"s":"# @param {Integer[]} nums\n# @return {Integer}\ndef max_product(nums)\n \nend","lang":"Ruby"},{"s":"class Solution {\n    func maxProduct(_ nums: [Int]) -> Int {\n \n    }\n}","lang":"Swift"},{"s":"func maxProduct(nums []int) int {\n \n}","lang":"Go"},{"s":"object Solution {\n    def maxProduct(nums: Array[Int]): Int = {\n \n    }\n}","lang":"Scala"},{"s":"class Solution {\n    fun maxProduct(nums: IntArray): Int {\n \n    }\n}","lang":"Kotlin"},{"s":"impl Solution {\n    pub fn max_product(nums: Vec<i32>) -> i32 {\n \n    }\n}","lang":"Rust"},{"s":"class Solution {\n    public int maxProduct(int[] nums) {\n \n    }\n}","lang":"Java"},{"s":"class Solution(object):\n    def maxProduct(self, nums):\n        \"\"\"\n        :type nums: List[int]\n        :rtype: int\n        \"\"\"","lang":"Python"},{"s":"class Solution:\n    def maxProduct(self, nums: List[int]) -> int:","lang":"Python3"},{"s":"int maxProduct(int* nums, int numsSize){\n \n}","lang":"C"},{"s":"public class Solution {\n    public int MaxProduct(int[] nums) {\n \n    }\n}","lang":"C#"},{"s":"/**\n * @param {number[]} nums\n * @return {number}\n */\nvar maxProduct = function(nums) {\n \n};","lang":"JavaScript"},{"s":"# @param {Integer[]} nums\n# @return {Integer}\ndef max_product(nums)\n \nend","lang":"Ruby"},{"s":"# @param {Integer[]} nums\n# @return {Integer}\ndef max_product(nums)\n \nend","lang":"Ruby"}],"page":"152/1581","h":"152. 乘积最大子序列","d":"<div class=\"notranslate\"><p>给定一个整数数组 <code>nums</code>&nbsp;，找出一个序列中乘积最大的连续子序列（该序列至少包含一个数）。</p>\n\n<p><strong>示例 1:</strong></p>\n\n<pre><strong>输入:</strong> [2,3,-2,4]\n<strong>输出:</strong> <code>6</code>\n<strong>解释:</strong>&nbsp;子数组 [2,3] 有最大乘积 6。\n</pre>\n\n<p><strong>示例 2:</strong></p>\n\n<pre><strong>输入:</strong> [-2,0,-1]\n<strong>输出:</strong> 0\n<strong>解释:</strong>&nbsp;结果不能为 2, 因为 [-2,-1] 不是子数组。</pre>\n</div>","l":"中等","s":"class Solution {","lang":"PHP","href":"https://leetcode-cn.com/problems/maximum-product-subarray/","bb":{"x":445,"y":40,"w":116,"h":28}}

