{"ls":[{"s":"class Solution {\n    public int countSubstrings(String s) {\n \n    }\n}","lang":"Java"},{"s":"class Solution(object):\n    def countSubstrings(self, s):\n        \"\"\"\n        :type s: str\n        :rtype: int\n        \"\"\"","lang":"Python"},{"s":"class Solution(object):\n    def countSubstrings(self, s):\n        \"\"\"\n        :type s: str\n        :rtype: int\n        \"\"\"","lang":"Python"},{"s":"int countSubstrings(char * s){\n \n}","lang":"C"},{"s":"public class Solution {\n    public int CountSubstrings(string s) {\n \n    }\n}","lang":"C#"},{"s":"/**\n * @param {string} s\n * @return {number}\n */\nvar countSubstrings = function(s) {\n \n};","lang":"JavaScript"},{"s":"# @param {String} s\n# @return {Integer}\ndef count_substrings(s)\n \nend","lang":"Ruby"},{"s":"class Solution {\n    func countSubstrings(_ s: String) -> Int {\n        \n    }\n}","lang":"Swift"},{"s":"func countSubstrings(s string) int {\n \n}","lang":"Go"},{"s":"object Solution {\n    def countSubstrings(s: String): Int = {\n \n    }\n}","lang":"Scala"},{"s":"class Solution {\n    fun countSubstrings(s: String): Int {\n \n    }\n}","lang":"Kotlin"},{"s":"impl Solution {\n    pub fn count_substrings(s: String) -> i32 {\n        \n    }\n}","lang":"Rust"},{"s":"class Solution {\n \n    /**\n     * @param String $s\n     * @return Integer\n     */\n    function countSubstrings($s) {\n        \n    }\n}","lang":"PHP"},{"s":"class Solution {\n \n    /**\n     * @param String $s\n     * @return Integer\n     */\n    function countSubstrings($s) {\n        \n    }\n}","lang":"PHP"}],"page":"647/1581","h":"647. 回文子串","d":"<div class=\"notranslate\"><p>给定一个字符串，你的任务是计算这个字符串中有多少个回文子串。</p>\n\n<p>具有不同开始位置或结束位置的子串，即使是由相同的字符组成，也会被计为是不同的子串。</p>\n\n<p><strong>示例 1:</strong></p>\n\n<pre><strong>输入:</strong> \"abc\"\n<strong>输出:</strong> 3\n<strong>解释:</strong> 三个回文子串: \"a\", \"b\", \"c\".\n</pre>\n\n<p><strong>示例 2:</strong></p>\n\n<pre><strong>输入:</strong> \"aaa\"\n<strong>输出:</strong> 6\n<strong>说明:</strong> 6个回文子串: \"a\", \"a\", \"a\", \"aa\", \"aa\", \"aaa\".\n</pre>\n\n<p><strong>注意:</strong></p>\n\n<ol>\n\t<li>输入的字符串长度不会超过1000。</li>\n</ol>\n</div>","l":"中等","s":"# @param {String} s","lang":"Ruby","href":"https://leetcode-cn.com/problems/palindromic-substrings/","bb":{"x":445,"y":40,"w":116,"h":28}}

