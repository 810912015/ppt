{"ls":[{"s":"# @param {Integer} n\n# @return {String[]}\ndef generate_parenthesis(n)\n \nend","lang":"Ruby"},{"s":"class Solution {\n    func generateParenthesis(_ n: Int) -> [String] {\n        \n    }\n}","lang":"Swift"},{"s":"func generateParenthesis(n int) []string {\n \n}","lang":"Go"},{"s":"object Solution {\n    def generateParenthesis(n: Int): List[String] = \n{\n \n    }\n}","lang":"Scala"},{"s":"class Solution {\n    fun generateParenthesis(n: Int): List<String> {\n \n    }\n}","lang":"Kotlin"},{"s":"impl Solution {\n    pub fn generate_parenthesis(n: i32) -> \nVec<String> {\n        \n    }\n}","lang":"Rust"},{"s":"class Solution {\n    public List<String> generateParenthesis(int n) {\n \n    }\n}","lang":"Java"},{"s":"class Solution(object):\n    def generateParenthesis(self, n):\n        \"\"\"\n        :type n: int\n        :rtype: List[str]\n        \"\"\"","lang":"Python"},{"s":"class Solution:\n    def generateParenthesis(self, n: int) -> List\n[str]:","lang":"Python3"},{"s":"/**\n * Note: The returned array must be malloced, \nassume caller calls free().\n */\nchar ** generateParenthesis(int n, int* returnSize){\n \n}","lang":"C"},{"s":"public class Solution {\n    public IList<string> GenerateParenthesis(int n) \n{\n \n    }\n}","lang":"C#"},{"s":"/**\n * @param {number} n\n * @return {string[]}\n */\nvar generateParenthesis = function(n) {\n \n};","lang":"JavaScript"},{"s":"# @param {Integer} n\n# @return {String[]}\ndef generate_parenthesis(n)\n \nend","lang":"Ruby"},{"s":"# @param {Integer} n\n# @return {String[]}\ndef generate_parenthesis(n)\n \nend","lang":"Ruby"}],"page":"22/1581","h":"22. 括号生成","d":"<div class=\"notranslate\"><p>给出&nbsp;<em>n</em>&nbsp;代表生成括号的对数，请你写出一个函数，使其能够生成所有可能的并且<strong>有效的</strong>括号组合。</p>\n\n<p>例如，给出&nbsp;<em>n </em>=<em> </em>3，生成结果为：</p>\n\n<pre>[\n  \"((()))\",\n  \"(()())\",\n  \"(())()\",\n  \"()(())\",\n  \"()()()\"\n]\n</pre>\n</div>","l":"中等","s":"class Solution {","lang":"PHP","href":"https://leetcode-cn.com/problems/generate-parentheses/","bb":{"x":445,"y":40,"w":116,"h":28}}

