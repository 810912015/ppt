{"ls":[{"s":"class Solution {\n    public int[] findErrorNums(int[] nums) {\n \n    }\n}","lang":"Java"},{"s":"class Solution(object):\n    def findErrorNums(self, nums):\n        \"\"\"\n        :type nums: List[int]\n        :rtype: List[int]\n        \"\"\"","lang":"Python"},{"s":"class Solution:\n    def findErrorNums(self, nums: List[int]) -> List\n[int]:","lang":"Python3"},{"s":"/**\n * Note: The returned array must be malloced, \nassume caller calls free().\n */\nint* findErrorNums(int* nums, int numsSize, int* \nreturnSize){\n \n}","lang":"C"},{"s":"public class Solution {\n    public int[] FindErrorNums(int[] nums) {\n \n    }\n}","lang":"C#"},{"s":"/**\n * @param {number[]} nums\n * @return {number[]}\n */\nvar findErrorNums = function(nums) {\n \n};","lang":"JavaScript"},{"s":"# @param {Integer[]} nums\n# @return {Integer[]}\ndef find_error_nums(nums)\n \nend","lang":"Ruby"},{"s":"class Solution {\n    func findErrorNums(_ nums: [Int]) -> [Int] {\n        \n    }\n}","lang":"Swift"},{"s":"func findErrorNums(nums []int) []int {\n \n}","lang":"Go"},{"s":"object Solution {\n    def findErrorNums(nums: Array[Int]): Array[Int] \n= {\n \n    }\n}","lang":"Scala"},{"s":"class Solution {\n    fun findErrorNums(nums: IntArray): IntArray {\n \n    }\n}","lang":"Kotlin"},{"s":"impl Solution {\n    pub fn find_error_nums(nums: Vec<i32>) -> \nVec<i32> {\n        \n    }\n}","lang":"Rust"},{"s":"class Solution {\n \n    /**\n     * @param Integer[] $nums\n     * @return Integer[]\n     */\n    function findErrorNums($nums) {\n        \n    }\n}","lang":"PHP"},{"s":"class Solution {\n \n    /**\n     * @param Integer[] $nums\n     * @return Integer[]\n     */\n    function findErrorNums($nums) {\n        \n    }\n}","lang":"PHP"}],"page":"645/1581","h":"645. 错误的集合","d":"<div class=\"notranslate\"><p>集合 <code>S</code> 包含从1到&nbsp;<code>n</code>&nbsp;的整数。不幸的是，因为数据错误，导致集合里面某一个元素复制了成了集合里面的另外一个元素的值，导致集合丢失了一个整数并且有一个元素重复。</p>\n\n<p>给定一个数组 <code>nums</code> 代表了集合 <code>S</code> 发生错误后的结果。你的任务是首先寻找到重复出现的整数，再找到丢失的整数，将它们以数组的形式返回。</p>\n\n<p><strong>示例 1:</strong></p>\n\n<pre><strong>输入:</strong> nums = [1,2,2,4]\n<strong>输出:</strong> [2,3]\n</pre>\n\n<p><strong>注意:</strong></p>\n\n<ol>\n\t<li>给定数组的长度范围是&nbsp;[2, 10000]。</li>\n\t<li>给定的数组是无序的。</li>\n</ol>\n</div>","l":"简单","s":"","lang":"Ruby","href":"https://leetcode-cn.com/problems/set-mismatch/","bb":{"x":445,"y":40,"w":116,"h":28}}

