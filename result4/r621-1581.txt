{"ls":[{"s":"class Solution {\n    public int leastInterval(char[] tasks, int n) {\n \n    }\n}","lang":"Java"},{"s":"class Solution(object):\n    def leastInterval(self, tasks, n):\n        \"\"\"\n        :type tasks: List[str]\n        :type n: int\n        :rtype: int\n        \"\"\"","lang":"Python"},{"s":"class Solution:\n    def leastInterval(self, tasks: List[str], n: \nint) -> int:","lang":"Python3"},{"s":"int leastInterval(char* tasks, int tasksSize, int n)\n{\n \n}","lang":"C"},{"s":"public class Solution {\n    public int LeastInterval(char[] tasks, int n) {\n \n    }\n}","lang":"C#"},{"s":"/**\n * @param {character[]} tasks\n * @param {number} n\n * @return {number}\n */\nvar leastInterval = function(tasks, n) {\n \n};","lang":"JavaScript"},{"s":"# @param {Character[]} tasks\n# @param {Integer} n\n# @return {Integer}\ndef least_interval(tasks, n)\n \nend","lang":"Ruby"},{"s":"class Solution {\n    func leastInterval(_ tasks: [Character], _ n: \nInt) -> Int {\n        \n    }\n}","lang":"Swift"},{"s":"func leastInterval(tasks []byte, n int) int {\n \n}","lang":"Go"},{"s":"object Solution {\n    def leastInterval(tasks: Array[Char], n: Int): \nInt = {\n \n    }\n}","lang":"Scala"},{"s":"class Solution {\n    fun leastInterval(tasks: CharArray, n: Int): \nInt {\n \n    }\n}","lang":"Kotlin"},{"s":"impl Solution {\n    pub fn least_interval(tasks: Vec<char>, n: i32) \n-> i32 {\n        \n    }\n}","lang":"Rust"},{"s":"class Solution {\n \n    /**\n     * @param String[] $tasks\n     * @param Integer $n\n     * @return Integer\n     */\n    function leastInterval($tasks, $n) {\n        \n    }\n}","lang":"PHP"},{"s":"class Solution {\n \n    /**\n     * @param String[] $tasks\n     * @param Integer $n\n     * @return Integer\n     */\n    function leastInterval($tasks, $n) {\n        \n    }\n}","lang":"PHP"}],"page":"621/1581","h":"621. 任务调度器","d":"<div class=\"notranslate\"><p>给定一个用字符数组表示的 CPU 需要执行的任务列表。其中包含使用大写的 A - Z 字母表示的26 种不同种类的任务。任务可以以任意顺序执行，并且每个任务都可以在 1 个单位时间内执行完。CPU 在任何一个单位时间内都可以执行一个任务，或者在待命状态。</p>\n\n<p>然而，两个<strong>相同种类</strong>的任务之间必须有长度为<strong>&nbsp;n </strong>的冷却时间，因此至少有连续 n 个单位时间内 CPU 在执行不同的任务，或者在待命状态。</p>\n\n<p>你需要计算完成所有任务所需要的<strong>最短时间</strong>。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 ：</strong></p>\n\n<pre><strong>输入：</strong>tasks = [\"A\",\"A\",\"A\",\"B\",\"B\",\"B\"], n = 2\n<strong>输出：</strong>8\n<strong>解释：</strong>A -&gt; B -&gt; (待命) -&gt; A -&gt; B -&gt; (待命) -&gt; A -&gt; B.\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ol>\n\t<li>任务的总个数为&nbsp;<code>[1, 10000]</code>。</li>\n\t<li><code>n</code> 的取值范围为 <code>[0, 100]</code>。</li>\n</ol>\n</div>","l":"中等","s":"class Solution {\npublic:\n    int leastInterval(vector<char>& tasks, int n) {\n        \n    }\n};","lang":"C++","href":"https://leetcode-cn.com/problems/task-scheduler/","bb":{"x":445,"y":40,"w":116,"h":28}}

