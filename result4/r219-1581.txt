{"ls":[{"s":"class Solution {\n    public boolean containsNearbyDuplicate(int[] \nnums, int k) {\n \n    }\n}","lang":"Java"},{"s":"class Solution(object):\n    def containsNearbyDuplicate(self, nums, k):\n        \"\"\"\n        :type nums: List[int]\n        :type k: int\n        :rtype: bool\n        \"\"\"","lang":"Python"},{"s":"class Solution:\n    def containsNearbyDuplicate(self, nums: List\n[int], k: int) -> bool:","lang":"Python3"},{"s":"bool containsNearbyDuplicate(int* nums, int \nnumsSize, int k){\n \n}","lang":"C"},{"s":"public class Solution {\n    public bool ContainsNearbyDuplicate(int[] nums, \nint k) {\n \n    }\n}","lang":"C#"},{"s":"/**\n * @param {number[]} nums\n * @param {number} k\n * @return {boolean}\n */\nvar containsNearbyDuplicate = function(nums, k) {\n \n};","lang":"JavaScript"},{"s":"# @param {Integer[]} nums\n# @param {Integer} k\n# @return {Boolean}\ndef contains_nearby_duplicate(nums, k)\n \nend","lang":"Ruby"},{"s":"class Solution {\n    func containsNearbyDuplicate(_ nums: [Int], _ \nk: Int) -> Bool {\n \n    }\n}","lang":"Swift"},{"s":"func containsNearbyDuplicate(nums []int, k int) \nbool {\n \n}","lang":"Go"},{"s":"object Solution {\n    def containsNearbyDuplicate(nums: Array[Int], \nk: Int): Boolean = {\n \n    }\n}","lang":"Scala"},{"s":"class Solution {\n    fun containsNearbyDuplicate(nums: IntArray, k: \nInt): Boolean {\n \n    }\n}","lang":"Kotlin"},{"s":"impl Solution {\n    pub fn contains_nearby_duplicate(nums: Vec<i32>,\n k: i32) -> bool {\n \n    }\n}","lang":"Rust"},{"s":"class Solution {\n \n    /**\n     * @param Integer[] $nums\n     * @param Integer $k\n     * @return Boolean\n     */\n    function containsNearbyDuplicate($nums, $k) {\n \n    }\n}","lang":"PHP"},{"s":"class Solution {\n \n    /**\n     * @param Integer[] $nums\n     * @param Integer $k\n     * @return Boolean\n     */\n    function containsNearbyDuplicate($nums, $k) {\n \n    }\n}","lang":"PHP"}],"page":"219/1581","h":"219. 存在重复元素 II","d":"<div class=\"notranslate\"><p>给定一个整数数组和一个整数&nbsp;<em>k</em>，判断数组中是否存在两个不同的索引<em>&nbsp;i</em>&nbsp;和<em>&nbsp;j</em>，使得&nbsp;<strong>nums [i] = nums [j]</strong>，并且 <em>i</em> 和 <em>j</em>&nbsp;的差的绝对值最大为 <em>k</em>。</p>\n\n<p><strong>示例&nbsp;1:</strong></p>\n\n<pre><strong>输入:</strong> nums = [1,2,3,1], k<em> </em>= 3\n<strong>输出:</strong> true</pre>\n\n<p><strong>示例 2:</strong></p>\n\n<pre><strong>输入: </strong>nums = [1,0,1,1], k<em> </em>=<em> </em>1\n<strong>输出:</strong> true</pre>\n\n<p><strong>示例 3:</strong></p>\n\n<pre><strong>输入: </strong>nums = [1,2,3,1,2,3], k<em> </em>=<em> </em>2\n<strong>输出:</strong> false</pre>\n</div>","l":"简单","s":"# @param {Integer[]} nums\n# @param {Integer} k\n# @return {Boolean}\ndef contains_nearby_duplicate(nums, k)\n \nend","lang":"Ruby","href":"https://leetcode-cn.com/problems/contains-duplicate-ii/","bb":{"x":445,"y":40,"w":116,"h":28}}

