{"ls":[{"s":"class Solution {\n    public boolean hasAlternatingBits(int n) {\n \n    }\n}","lang":"Java"},{"s":"class Solution(object):\n    def hasAlternatingBits(self, n):\n        \"\"\"\n        :type n: int\n        :rtype: bool\n        \"\"\"","lang":"Python"},{"s":"class Solution:\n    def hasAlternatingBits(self, n: int) -> bool:","lang":"Python3"},{"s":"bool hasAlternatingBits(int n){\n \n}","lang":"C"},{"s":"public class Solution {\n    public bool HasAlternatingBits(int n) {\n \n    }\n}","lang":"C#"},{"s":"/**\n * @param {number} n\n * @return {boolean}\n */\nvar hasAlternatingBits = function(n) {\n \n};","lang":"JavaScript"},{"s":"# @param {Integer} n\n# @return {Boolean}\ndef has_alternating_bits(n)\n \nend","lang":"Ruby"},{"s":"class Solution {\n    func hasAlternatingBits(_ n: Int) -> Bool {\n        \n    }\n}","lang":"Swift"},{"s":"func hasAlternatingBits(n int) bool {\n \n}","lang":"Go"},{"s":"object Solution {\n    def hasAlternatingBits(n: Int): Boolean = {\n \n    }\n}","lang":"Scala"},{"s":"class Solution {\n    fun hasAlternatingBits(n: Int): Boolean {\n \n    }\n}","lang":"Kotlin"},{"s":"impl Solution {\n    pub fn has_alternating_bits(n: i32) -> bool {\n        \n    }\n}","lang":"Rust"},{"s":"class Solution {\n \n    /**\n     * @param Integer $n\n     * @return Boolean\n     */\n    function hasAlternatingBits($n) {\n        \n    }\n}","lang":"PHP"},{"s":"class Solution {\n \n    /**\n     * @param Integer $n\n     * @return Boolean\n     */\n    function hasAlternatingBits($n) {\n        \n    }\n}","lang":"PHP"}],"page":"693/1581","h":"693. 交替位二进制数","d":"<div class=\"notranslate\"><p>给定一个正整数，检查他是否为交替位二进制数：换句话说，就是他的二进制数相邻的两个位数永不相等。</p>\n\n<p><strong>示例 1:</strong></p>\n\n<pre><strong>输入:</strong> 5\n<strong>输出:</strong> True\n<strong>解释:</strong>\n5的二进制数是: 101\n</pre>\n\n<p><strong>示例 2:</strong></p>\n\n<pre><strong>输入:</strong> 7\n<strong>输出:</strong> False\n<strong>解释:</strong>\n7的二进制数是: 111\n</pre>\n\n<p><strong>示例&nbsp;3:</strong></p>\n\n<pre><strong>输入:</strong> 11\n<strong>输出:</strong> False\n<strong>解释:</strong>\n11的二进制数是: 1011\n</pre>\n\n<p><strong>&nbsp;示例 4:</strong></p>\n\n<pre><strong>输入:</strong> 10\n<strong>输出:</strong> True\n<strong>解释:</strong>\n10的二进制数是: 1010\n</pre>\n</div>","l":"简单","s":"# @param {Integer} n\n# @return {Boolean}\ndef has_alternating_bits(n)\n \nend","lang":"Ruby","href":"https://leetcode-cn.com/problems/binary-number-with-alternating-bits/","bb":{"x":445,"y":40,"w":116,"h":28}}

