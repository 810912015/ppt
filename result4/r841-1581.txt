{"ls":[{"s":"# @param {Integer[][]} rooms\n# @return {Boolean}\ndef can_visit_all_rooms(rooms)\n \nend","lang":"Ruby"},{"s":"class Solution {\n    func canVisitAllRooms(_ rooms: [[Int]]) -> Bool \n{\n        \n    }\n}","lang":"Swift"},{"s":"func canVisitAllRooms(rooms [][]int) bool {\n \n}","lang":"Go"},{"s":"object Solution {\n    def canVisitAllRooms(rooms: List[List[Int]]): \nBoolean = {\n \n    }\n}","lang":"Scala"},{"s":"class Solution {\n    fun canVisitAllRooms(rooms: List<List<Int>>): \nBoolean {\n \n    }\n}","lang":"Kotlin"},{"s":"impl Solution {\n    pub fn can_visit_all_rooms(rooms: Vec<Vec<i32>>)\n -> bool {\n        \n    }\n}","lang":"Rust"},{"s":"class Solution {\n    public boolean canVisitAllRooms\n(List<List<Integer>> rooms) {\n \n    }\n}","lang":"Java"},{"s":"class Solution(object):\n    def canVisitAllRooms(self, rooms):\n        \"\"\"\n        :type rooms: List[List[int]]\n        :rtype: bool\n        \"\"\"","lang":"Python"},{"s":"class Solution:\n    def canVisitAllRooms(self, rooms: List[List[int]\n]) -> bool:","lang":"Python3"},{"s":"bool canVisitAllRooms(int** rooms, int roomsSize, \nint* roomsColSize){\n \n}","lang":"C"},{"s":"public class Solution {\n    public bool CanVisitAllRooms(IList<IList<int>> \nrooms) {\n \n    }\n}","lang":"C#"},{"s":"/**\n * @param {number[][]} rooms\n * @return {boolean}\n */\nvar canVisitAllRooms = function(rooms) {\n \n};","lang":"JavaScript"},{"s":"# @param {Integer[][]} rooms\n# @return {Boolean}\ndef can_visit_all_rooms(rooms)\n \nend","lang":"Ruby"},{"s":"# @param {Integer[][]} rooms\n# @return {Boolean}\ndef can_visit_all_rooms(rooms)\n \nend","lang":"Ruby"}],"page":"841/1581","h":"841. 钥匙和房间","d":"<div class=\"notranslate\"><p>有 <code>N</code> 个房间，开始时你位于 <code>0</code> 号房间。每个房间有不同的号码：<code>0，1，2，...，N-1</code>，并且房间里可能有一些钥匙能使你进入下一个房间。</p>\n\n<p>在形式上，对于每个房间 <code>i</code> 都有一个钥匙列表 <code>rooms[i]</code>，每个钥匙 <code>rooms[i][j]</code> 由 <code>[0,1，...，N-1]</code> 中的一个整数表示，其中 <code>N = rooms.length</code>。 钥匙 <code>rooms[i][j] = v</code> 可以打开编号为 <code>v</code> 的房间。</p>\n\n<p>最初，除 <code>0</code> 号房间外的其余所有房间都被锁住。</p>\n\n<p>你可以自由地在房间之间来回走动。</p>\n\n<p>如果能进入每个房间返回 <code>true</code>，否则返回 <code>false</code>。</p>\n\n<ol>\n</ol>\n\n<p><strong>示例 1：</strong></p>\n\n<pre><strong>输入: </strong>[[1],[2],[3],[]]\n<strong>输出: </strong>true\n<strong>解释:  </strong>\n我们从 0 号房间开始，拿到钥匙 1。\n之后我们去 1 号房间，拿到钥匙 2。\n然后我们去 2 号房间，拿到钥匙 3。\n最后我们去了 3 号房间。\n由于我们能够进入每个房间，我们返回 true。\n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre><strong>输入：</strong>[[1,3],[3,0,1],[2],[0]]\n<strong>输出：</strong>false\n<strong>解释：</strong>我们不能进入 2 号房间。\n</pre>\n\n<p><strong>提示：</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= rooms.length &lt;=&nbsp;1000</code></li>\n\t<li><code>0 &lt;= rooms[i].length &lt;= 1000</code></li>\n\t<li>所有房间中的钥匙数量总计不超过&nbsp;<code>3000</code>。</li>\n</ol>\n</div>","l":"中等","s":"class Solution {","lang":"PHP","href":"https://leetcode-cn.com/problems/keys-and-rooms/","bb":{"x":445,"y":40,"w":116,"h":28}}

