{"ls":[{"s":"# @param {Integer[]} nums\n# @return {Integer}\ndef jump(nums)\n \nend","lang":"Ruby"},{"s":"class Solution {\n    func jump(_ nums: [Int]) -> Int {\n        \n    }\n}","lang":"Swift"},{"s":"func jump(nums []int) int {\n \n}","lang":"Go"},{"s":"object Solution {\n    def jump(nums: Array[Int]): Int = {\n \n    }\n}","lang":"Scala"},{"s":"class Solution {\n    fun jump(nums: IntArray): Int {\n \n    }\n}","lang":"Kotlin"},{"s":"impl Solution {\n    pub fn jump(nums: Vec<i32>) -> i32 {\n        \n    }\n}","lang":"Rust"},{"s":"class Solution {\n    public int jump(int[] nums) {\n \n    }\n}","lang":"Java"},{"s":"class Solution(object):\n    def jump(self, nums):\n        \"\"\"\n        :type nums: List[int]\n        :rtype: int\n        \"\"\"","lang":"Python"},{"s":"class Solution:\n    def jump(self, nums: List[int]) -> int:","lang":"Python3"},{"s":"int jump(int* nums, int numsSize){\n \n}","lang":"C"},{"s":"public class Solution {\n    public int Jump(int[] nums) {\n \n    }\n}","lang":"C#"},{"s":"/**\n * @param {number[]} nums\n * @return {number}\n */\nvar jump = function(nums) {\n \n};","lang":"JavaScript"},{"s":"# @param {Integer[]} nums\n# @return {Integer}\ndef jump(nums)\n \nend","lang":"Ruby"},{"s":"# @param {Integer[]} nums\n# @return {Integer}\ndef jump(nums)\n \nend","lang":"Ruby"}],"page":"45/1581","h":"45. 跳跃游戏 II","d":"<div class=\"notranslate\"><p>给定一个非负整数数组，你最初位于数组的第一个位置。</p>\n\n<p>数组中的每个元素代表你在该位置可以跳跃的最大长度。</p>\n\n<p>你的目标是使用最少的跳跃次数到达数组的最后一个位置。</p>\n\n<p><strong>示例:</strong></p>\n\n<pre><strong>输入:</strong> [2,3,1,1,4]\n<strong>输出:</strong> 2\n<strong>解释:</strong> 跳到最后一个位置的最小跳跃数是 <code>2</code>。\n&nbsp;    从下标为 0 跳到下标为 1 的位置，跳&nbsp;<code>1</code>&nbsp;步，然后跳&nbsp;<code>3</code>&nbsp;步到达数组的最后一个位置。\n</pre>\n\n<p><strong>说明:</strong></p>\n\n<p>假设你总是可以到达数组的最后一个位置。</p>\n</div>","l":"困难","s":"class Solution {","lang":"PHP","href":"https://leetcode-cn.com/problems/jump-game-ii/","bb":{"x":445,"y":40,"w":116,"h":28}}

