{"ls":[{"s":"class Solution {\n    public int kSimilarity(String A, String B) {\n \n    }\n}","lang":"Java"},{"s":"class Solution(object):\n    def kSimilarity(self, A, B):\n        \"\"\"\n        :type A: str\n        :type B: str\n        :rtype: int\n        \"\"\"","lang":"Python"},{"s":"class Solution:\n    def kSimilarity(self, A: str, B: str) -> int:","lang":"Python3"},{"s":"int kSimilarity(char * A, char * B){\n \n}","lang":"C"},{"s":"public class Solution {\n    public int KSimilarity(string A, string B) {\n \n    }\n}","lang":"C#"},{"s":"/**\n * @param {string} A\n * @param {string} B\n * @return {number}\n */\nvar kSimilarity = function(A, B) {\n \n};","lang":"JavaScript"},{"s":"# @param {String} a\n# @param {String} b\n# @return {Integer}\ndef k_similarity(a, b)\n \nend","lang":"Ruby"},{"s":"class Solution {\n    func kSimilarity(_ A: String, _ B: String) -> \nInt {\n        \n    }\n}","lang":"Swift"},{"s":"class Solution {\n    func kSimilarity(_ A: String, _ B: String) -> \nInt {\n        \n    }\n}","lang":"Swift"},{"s":"object Solution {\n    def kSimilarity(A: String, B: String): Int = {\n \n    }\n}","lang":"Scala"},{"s":"class Solution {\n    fun kSimilarity(A: String, B: String): Int {\n \n    }\n}","lang":"Kotlin"},{"s":"impl Solution {\n    pub fn k_similarity(a: String, b: String) -> \ni32 {\n        \n    }\n}","lang":"Rust"},{"s":"class Solution {\n \n    /**\n     * @param String $A\n     * @param String $B\n     * @return Integer\n     */\n    function kSimilarity($A, $B) {\n        \n    }\n}","lang":"PHP"},{"s":"class Solution {\n \n    /**\n     * @param String $A\n     * @param String $B\n     * @return Integer\n     */\n    function kSimilarity($A, $B) {\n        \n    }\n}","lang":"PHP"}],"page":"854/1581","h":"854. 相似度为 K 的字符串","d":"<div class=\"notranslate\"><p>如果可以通过将 <code>A</code> 中的两个小写字母精确地交换位置 <code>K</code> 次得到与 <code>B</code> 相等的字符串，我们称字符串&nbsp;<code>A</code>&nbsp;和&nbsp;<code>B</code>&nbsp;的相似度为 <code>K</code>（<code>K</code>&nbsp;为非负整数）。</p>\n\n<p>给定两个字母异位词&nbsp;<code>A</code>&nbsp;和&nbsp;<code>B</code>&nbsp;，返回 <code>A</code> 和 <code>B</code>&nbsp;的相似度 <code>K</code> 的最小值。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre><strong>输入：</strong>A = \"ab\", B = \"ba\"\n<strong>输出：</strong>1\n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre><strong>输入：</strong>A = \"abc\", B = \"bca\"\n<strong>输出：</strong>2\n</pre>\n\n<p><strong>示例 3：</strong></p>\n\n<pre><strong>输入：</strong>A = \"abac\", B = \"baca\"\n<strong>输出：</strong>2\n</pre>\n\n<p><strong>示例 4：</strong></p>\n\n<pre><strong>输入：</strong>A = \"aabc\", B = \"abca\"\n<strong>输出：</strong>2</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= A.length == B.length &lt;= 20</code></li>\n\t<li><code>A</code>&nbsp;和&nbsp;<code>B</code>&nbsp;只包含集合&nbsp;<code>{'a', 'b', 'c', 'd', 'e', 'f'}</code>&nbsp;中的小写字母。</li>\n</ol>\n</div>","l":"困难","s":"# @param {String} a","lang":"Ruby","href":"https://leetcode-cn.com/problems/k-similar-strings/","bb":{"x":445,"y":40,"w":116,"h":28}}

