{"ls":[{"s":"# @param {Integer[]} nums\n# @param {Integer} target\n# @return {Integer[]}\ndef search_range(nums, target)\n \nend","lang":"Ruby"},{"s":"class Solution {\n    func searchRange(_ nums: [Int], _ target: Int) \n-> [Int] {\n        \n    }\n}","lang":"Swift"},{"s":"func searchRange(nums []int, target int) []int {\n \n}","lang":"Go"},{"s":"object Solution {\n    def searchRange(nums: Array[Int], target: Int): \nArray[Int] = {\n \n    }\n}","lang":"Scala"},{"s":"class Solution {\n    fun searchRange(nums: IntArray, target: Int): \nIntArray {\n \n    }\n}","lang":"Kotlin"},{"s":"impl Solution {\n    pub fn search_range(nums: Vec<i32>, target: i32)\n -> Vec<i32> {\n        \n    }\n}","lang":"Rust"},{"s":"class Solution {\n    public int[] searchRange(int[] nums, int target)\n {\n \n    }\n}","lang":"Java"},{"s":"class Solution(object):\n    def searchRange(self, nums, target):\n        \"\"\"\n        :type nums: List[int]\n        :type target: int\n        :rtype: List[int]\n        \"\"\"","lang":"Python"},{"s":"class Solution:\n    def searchRange(self, nums: List[int], target: \nint) -> List[int]:","lang":"Python3"},{"s":"/**\n * Note: The returned array must be malloced, \nassume caller calls free().\n */\nint* searchRange(int* nums, int numsSize, int \ntarget, int* returnSize){\n \n}","lang":"C"},{"s":"public class Solution {\n    public int[] SearchRange(int[] nums, int target)\n {\n \n    }\n}","lang":"C#"},{"s":"/**\n * @param {number[]} nums\n * @param {number} target\n * @return {number[]}\n */\nvar searchRange = function(nums, target) {\n \n};","lang":"JavaScript"},{"s":"# @param {Integer[]} nums\n# @param {Integer} target\n# @return {Integer[]}\ndef search_range(nums, target)\n \nend","lang":"Ruby"},{"s":"# @param {Integer[]} nums\n# @param {Integer} target\n# @return {Integer[]}\ndef search_range(nums, target)\n \nend","lang":"Ruby"}],"page":"34/1581","h":"34. 在排序数组中查找元素的第一个和最后一个位置","d":"<div class=\"notranslate\"><p>给定一个按照升序排列的整数数组 <code>nums</code>，和一个目标值 <code>target</code>。找出给定目标值在数组中的开始位置和结束位置。</p>\n\n<p>你的算法时间复杂度必须是&nbsp;<em>O</em>(log <em>n</em>) 级别。</p>\n\n<p>如果数组中不存在目标值，返回&nbsp;<code>[-1, -1]</code>。</p>\n\n<p><strong>示例 1:</strong></p>\n\n<pre><strong>输入:</strong> nums = [<code>5,7,7,8,8,10]</code>, target = 8\n<strong>输出:</strong> [3,4]</pre>\n\n<p><strong>示例&nbsp;2:</strong></p>\n\n<pre><strong>输入:</strong> nums = [<code>5,7,7,8,8,10]</code>, target = 6\n<strong>输出:</strong> [-1,-1]</pre>\n</div>","l":"中等","s":"class Solution {","lang":"PHP","href":"https://leetcode-cn.com/problems/find-first-and-last-position-of-element-in-sorted-array/","bb":{"x":445,"y":40,"w":116,"h":28}}

