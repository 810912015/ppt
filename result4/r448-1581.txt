{"ls":[{"s":"class Solution {\n    public List<Integer> findDisappearedNumbers(int\n[] nums) {\n \n    }\n}","lang":"Java"},{"s":"class Solution(object):\n    def findDisappearedNumbers(self, nums):\n        \"\"\"\n        :type nums: List[int]\n        :rtype: List[int]\n        \"\"\"","lang":"Python"},{"s":"class Solution:\n    def findDisappearedNumbers(self, nums: List[int]\n) -> List[int]:","lang":"Python3"},{"s":"/**\n * Note: The returned array must be malloced, \nassume caller calls free().\n */\nint* findDisappearedNumbers(int* nums, int numsSize,\n int* returnSize){\n \n}","lang":"C"},{"s":"public class Solution {\n    public IList<int> FindDisappearedNumbers(int[] \nnums) {\n \n    }\n}","lang":"C#"},{"s":"/**\n * @param {number[]} nums\n * @return {number[]}\n */\nvar findDisappearedNumbers = function(nums) {\n \n};","lang":"JavaScript"},{"s":"# @param {Integer[]} nums\n# @return {Integer[]}\ndef find_disappeared_numbers(nums)\n \nend","lang":"Ruby"},{"s":"class Solution {\n    func findDisappearedNumbers(_ nums: [Int]) -> \n[Int] {\n        \n    }\n}","lang":"Swift"},{"s":"func findDisappearedNumbers(nums []int) []int {\n \n}","lang":"Go"},{"s":"object Solution {\n    def findDisappearedNumbers(nums: Array[Int]): \nList[Int] = {\n \n    }\n}","lang":"Scala"},{"s":"class Solution {\n    fun findDisappearedNumbers(nums: IntArray): \nList<Int> {\n \n    }\n}","lang":"Kotlin"},{"s":"impl Solution {\n    pub fn find_disappeared_numbers(nums: Vec<i32>) \n-> Vec<i32> {\n        \n    }\n}","lang":"Rust"},{"s":"class Solution {\n \n    /**\n     * @param Integer[] $nums\n     * @return Integer[]\n     */\n    function findDisappearedNumbers($nums) {\n        \n    }\n}","lang":"PHP"},{"s":"class Solution {\n \n    /**\n     * @param Integer[] $nums\n     * @return Integer[]\n     */\n    function findDisappearedNumbers($nums) {\n        \n    }\n}","lang":"PHP"}],"page":"448/1581","h":"448. 找到所有数组中消失的数字","d":"<div class=\"notranslate\"><p>给定一个范围在&nbsp; 1 ≤ a[i] ≤ <em>n</em> (&nbsp;<em>n</em> = 数组大小 ) 的 整型数组，数组中的元素一些出现了两次，另一些只出现一次。</p>\n\n<p>找到所有在 [1, <em>n</em>] 范围之间没有出现在数组中的数字。</p>\n\n<p>您能在不使用额外空间且时间复杂度为<em>O(n)</em>的情况下完成这个任务吗? 你可以假定返回的数组不算在额外空间内。</p>\n\n<p><strong>示例:</strong></p>\n\n<pre><strong>输入:</strong>\n[4,3,2,7,8,2,3,1]\n\n<strong>输出:</strong>\n[5,6]\n</pre>\n</div>","l":"简单","s":"# @param {Integer[]} nums\n# @return {Integer[]}\ndef find_disappeared_numbers(nums)\n \nend","lang":"Ruby","href":"https://leetcode-cn.com/problems/find-all-numbers-disappeared-in-an-array/","bb":{"x":445,"y":40,"w":116,"h":28}}

