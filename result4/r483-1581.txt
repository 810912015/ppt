{"ls":[{"s":"class Solution {\n    public String smallestGoodBase(String n) {\n \n    }\n}","lang":"Java"},{"s":"class Solution(object):\n    def smallestGoodBase(self, n):\n        \"\"\"\n        :type n: str\n        :rtype: str\n        \"\"\"","lang":"Python"},{"s":"class Solution:\n    def smallestGoodBase(self, n: str) -> str:","lang":"Python3"},{"s":"char * smallestGoodBase(char * n){\n \n}","lang":"C"},{"s":"public class Solution {\n    public string SmallestGoodBase(string n) {\n \n    }\n}","lang":"C#"},{"s":"/**\n * @param {string} n\n * @return {string}\n */\nvar smallestGoodBase = function(n) {\n \n};","lang":"JavaScript"},{"s":"# @param {String} n\n# @return {String}\ndef smallest_good_base(n)\n \nend","lang":"Ruby"},{"s":"class Solution {\n    func smallestGoodBase(_ n: String) -> String {\n        \n    }\n}","lang":"Swift"},{"s":"func smallestGoodBase(n string) string {\n \n}","lang":"Go"},{"s":"object Solution {\n    def smallestGoodBase(n: String): String = {\n \n    }\n}","lang":"Scala"},{"s":"class Solution {\n    fun smallestGoodBase(n: String): String {\n \n    }\n}","lang":"Kotlin"},{"s":"impl Solution {\n    pub fn smallest_good_base(n: String) -> String {\n        \n    }\n}","lang":"Rust"},{"s":"class Solution {\n \n    /**\n     * @param String $n\n     * @return String\n     */\n    function smallestGoodBase($n) {\n        \n    }\n}","lang":"PHP"},{"s":"class Solution {\n \n    /**\n     * @param String $n\n     * @return String\n     */\n    function smallestGoodBase($n) {\n        \n    }\n}","lang":"PHP"}],"page":"483/1581","h":"483. 最小好进制","d":"<div class=\"notranslate\"><p>对于给定的整数 n, 如果n的k（k&gt;=2）进制数的所有数位全为1，则称&nbsp;k（k&gt;=2）是 n 的一个<em><strong>好进制</strong></em>。</p>\n\n<p>以字符串的形式给出 n, 以字符串的形式返回 n 的最小好进制。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre><strong>输入：</strong>\"13\"\n<strong>输出：</strong>\"3\"\n<strong>解释：</strong>13 的 3 进制是 111。\n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre><strong>输入：</strong>\"4681\"\n<strong>输出：</strong>\"8\"\n<strong>解释：</strong>4681 的 8 进制是 11111。\n</pre>\n\n<p><strong>示例 3：</strong></p>\n\n<pre><strong>输入：</strong>\"1000000000000000000\"\n<strong>输出：</strong>\"999999999999999999\"\n<strong>解释：</strong>1000000000000000000 的 999999999999999999 进制是 11。\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ol>\n\t<li>n的取值范围是&nbsp;[3, 10^18]。</li>\n\t<li>输入总是有效且没有前导 0。</li>\n</ol>\n\n<p>&nbsp;</p>\n</div>","l":"困难","s":"# @param {String} n","lang":"Ruby","href":"https://leetcode-cn.com/problems/smallest-good-base/","bb":{"x":445,"y":40,"w":116,"h":28}}

