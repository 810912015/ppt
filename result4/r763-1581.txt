{"ls":[{"s":"class Solution {\n    public List<Integer> partitionLabels(String S) {\n \n    }\n}","lang":"Java"},{"s":"class Solution(object):\n    def partitionLabels(self, S):\n        \"\"\"\n        :type S: str\n        :rtype: List[int]\n        \"\"\"","lang":"Python"},{"s":"class Solution:\n    def partitionLabels(self, S: str) -> List[int]:","lang":"Python3"},{"s":"/**\n * Note: The returned array must be malloced, \nassume caller calls free().\n */\nint* partitionLabels(char * S, int* returnSize){\n \n}","lang":"C"},{"s":"public class Solution {\n    public IList<int> PartitionLabels(string S) {\n \n    }\n}","lang":"C#"},{"s":"/**\n * @param {string} S\n * @return {number[]}\n */\nvar partitionLabels = function(S) {\n \n};","lang":"JavaScript"},{"s":"# @param {String} s\n# @return {Integer[]}\ndef partition_labels(s)\n \nend","lang":"Ruby"},{"s":"class Solution {\n    func partitionLabels(_ S: String) -> [Int] {\n        \n    }\n}","lang":"Swift"},{"s":"func partitionLabels(S string) []int {\n \n}","lang":"Go"},{"s":"object Solution {\n    def partitionLabels(S: String): List[Int] = {\n \n    }\n}","lang":"Scala"},{"s":"class Solution {\n    fun partitionLabels(S: String): List<Int> {\n \n    }\n}","lang":"Kotlin"},{"s":"impl Solution {\n    pub fn partition_labels(s: String) -> Vec<i32> {\n        \n    }\n}","lang":"Rust"},{"s":"class Solution {\n \n    /**\n     * @param String $S\n     * @return Integer[]\n     */\n    function partitionLabels($S) {\n        \n    }\n}","lang":"PHP"},{"s":"class Solution {\n \n    /**\n     * @param String $S\n     * @return Integer[]\n     */\n    function partitionLabels($S) {\n        \n    }\n}","lang":"PHP"}],"page":"763/1581","h":"763. 划分字母区间","d":"<div class=\"notranslate\"><p>字符串 <code>S</code> 由小写字母组成。我们要把这个字符串划分为尽可能多的片段，同一个字母只会出现在其中的一个片段。返回一个表示每个字符串片段的长度的列表。</p>\n\n<p><strong>示例 1:</strong></p>\n\n<pre><strong>输入:</strong> S = \"ababcbacadefegdehijhklij\"\n<strong>输出:</strong> [9,7,8]\n<strong>解释:</strong>\n划分结果为 \"ababcbaca\", \"defegde\", \"hijhklij\"。\n每个字母最多出现在一个片段中。\n像 \"ababcbacadefegde\", \"hijhklij\" 的划分是错误的，因为划分的片段数较少。\n</pre>\n\n<p><strong>注意:</strong></p>\n\n<ol>\n\t<li><code>S</code>的长度在<code>[1, 500]</code>之间。</li>\n\t<li><code>S</code>只包含小写字母<code>'a'</code>到<code>'z'</code>。</li>\n</ol>\n</div>","l":"中等","s":"# @param {String} s\n# @return {Integer[]}\ndef partition_labels(s)\n \nend","lang":"Ruby","href":"https://leetcode-cn.com/problems/partition-labels/","bb":{"x":445,"y":40,"w":116,"h":28}}

