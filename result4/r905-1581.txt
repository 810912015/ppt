{"ls":[{"s":"# @param {Integer[]} a\n# @return {Integer[]}\ndef sort_array_by_parity(a)\n \nend","lang":"Ruby"},{"s":"class Solution {\n    func sortArrayByParity(_ A: [Int]) -> [Int] {\n        \n    }\n}","lang":"Swift"},{"s":"func sortArrayByParity(A []int) []int {\n \n}","lang":"Go"},{"s":"object Solution {\n    def sortArrayByParity(A: Array[Int]): Array[Int]\n = {\n \n    }\n}","lang":"Scala"},{"s":"class Solution {\n    fun sortArrayByParity(A: IntArray): IntArray {\n \n    }\n}","lang":"Kotlin"},{"s":"impl Solution {\n    pub fn sort_array_by_parity(a: Vec<i32>) -> \nVec<i32> {\n        \n    }\n}","lang":"Rust"},{"s":"class Solution {\n    public int[] sortArrayByParity(int[] A) {\n \n    }\n}","lang":"Java"},{"s":"class Solution(object):\n    def sortArrayByParity(self, A):\n        \"\"\"\n        :type A: List[int]\n        :rtype: List[int]\n        \"\"\"","lang":"Python"},{"s":"class Solution:\n    def sortArrayByParity(self, A: List[int]) -> \nList[int]:","lang":"Python3"},{"s":"/**\n * Note: The returned array must be malloced, \nassume caller calls free().\n */\nint* sortArrayByParity(int* A, int ASize, int* \nreturnSize){\n \n}","lang":"C"},{"s":"public class Solution {\n    public int[] SortArrayByParity(int[] A) {\n \n    }\n}","lang":"C#"},{"s":"/**\n * @param {number[]} A\n * @return {number[]}\n */\nvar sortArrayByParity = function(A) {\n \n};","lang":"JavaScript"},{"s":"# @param {Integer[]} a\n# @return {Integer[]}\ndef sort_array_by_parity(a)\n \nend","lang":"Ruby"},{"s":"# @param {Integer[]} a\n# @return {Integer[]}\ndef sort_array_by_parity(a)\n \nend","lang":"Ruby"}],"page":"905/1581","h":"905. 按奇偶排序数组","d":"<div class=\"notranslate\"><p>给定一个非负整数数组 <code>A</code>，返回一个数组，在该数组中，&nbsp;<code>A</code> 的所有偶数元素之后跟着所有奇数元素。</p>\n\n<p>你可以返回满足此条件的任何数组作为答案。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例：</strong></p>\n\n<pre><strong>输入：</strong>[3,1,2,4]\n<strong>输出：</strong>[2,4,3,1]\n输出 [4,2,3,1]，[2,4,1,3] 和 [4,2,1,3] 也会被接受。\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= A.length &lt;= 5000</code></li>\n\t<li><code>0 &lt;= A[i] &lt;= 5000</code></li>\n</ol>\n</div>","l":"简单","s":"class Solution {","lang":"PHP","href":"https://leetcode-cn.com/problems/sort-array-by-parity/","bb":{"x":445,"y":40,"w":116,"h":28}}

