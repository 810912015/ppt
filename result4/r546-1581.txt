{"ls":[{"s":"class Solution {\n    public int removeBoxes(int[] boxes) {\n \n    }\n}","lang":"Java"},{"s":"class Solution(object):\n    def removeBoxes(self, boxes):\n        \"\"\"\n        :type boxes: List[int]\n        :rtype: int\n        \"\"\"","lang":"Python"},{"s":"class Solution:\n    def removeBoxes(self, boxes: List[int]) -> int:","lang":"Python3"},{"s":"int removeBoxes(int* boxes, int boxesSize){\n \n}","lang":"C"},{"s":"public class Solution {\n    public int RemoveBoxes(int[] boxes) {\n \n    }\n}","lang":"C#"},{"s":"/**\n * @param {number[]} boxes\n * @return {number}\n */\nvar removeBoxes = function(boxes) {\n \n};","lang":"JavaScript"},{"s":"# @param {Integer[]} boxes\n# @return {Integer}\ndef remove_boxes(boxes)\n \nend","lang":"Ruby"},{"s":"class Solution {\n    func removeBoxes(_ boxes: [Int]) -> Int {\n        \n    }\n}","lang":"Swift"},{"s":"func removeBoxes(boxes []int) int {\n \n}","lang":"Go"},{"s":"object Solution {\n    def removeBoxes(boxes: Array[Int]): Int = {\n \n    }\n}","lang":"Scala"},{"s":"class Solution {\n    fun removeBoxes(boxes: IntArray): Int {\n \n    }\n}","lang":"Kotlin"},{"s":"impl Solution {\n    pub fn remove_boxes(boxes: Vec<i32>) -> i32 {\n        \n    }\n}","lang":"Rust"},{"s":"class Solution {\n \n    /**\n     * @param Integer[] $boxes\n     * @return Integer\n     */\n    function removeBoxes($boxes) {\n        \n    }\n}","lang":"PHP"},{"s":"class Solution {\n \n    /**\n     * @param Integer[] $boxes\n     * @return Integer\n     */\n    function removeBoxes($boxes) {\n        \n    }\n}","lang":"PHP"}],"page":"546/1581","h":"546. 移除盒子","d":"<div class=\"notranslate\"><p>给出一些不同颜色的盒子，盒子的颜色由数字表示，即不同的数字表示不同的颜色。<br>\n你将经过若干轮操作去去掉盒子，直到所有的盒子都去掉为止。每一轮你可以移除具有相同颜色的连续 k 个盒子（k&nbsp;&gt;= 1），这样一轮之后你将得到 <code>k*k</code> 个积分。<br>\n当你将所有盒子都去掉之后，求你能获得的最大积分和。</p>\n\n<p><strong>示例 1：</strong><br>\n输入:</p>\n\n<pre>[1, 3, 2, 2, 2, 3, 4, 3, 1]\n</pre>\n\n<p>输出:</p>\n\n<pre>23\n</pre>\n\n<p>解释:</p>\n\n<pre>[1, 3, 2, 2, 2, 3, 4, 3, 1] \n----&gt; [1, 3, 3, 4, 3, 1] (3*3=9 分) \n----&gt; [1, 3, 3, 3, 1] (1*1=1 分) \n----&gt; [1, 1] (3*3=9 分) \n----&gt; [] (2*2=4 分)\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong>盒子的总数 <code>n</code> 不会超过 100。</p>\n</div>","l":"困难","s":"# @param {Integer[]} boxes\n# @return {Integer}\ndef remove_boxes(boxes)\n \nend","lang":"Ruby","href":"https://leetcode-cn.com/problems/remove-boxes/","bb":{"x":445,"y":40,"w":116,"h":28}}

