{"ls":[{"s":"# @param {Integer[]} nums\n# @return {Integer}\ndef max_coins(nums)\n \nend","lang":"Ruby"},{"s":"class Solution {\n    func maxCoins(_ nums: [Int]) -> Int {\n        \n    }\n}","lang":"Swift"},{"s":"func maxCoins(nums []int) int {\n \n}","lang":"Go"},{"s":"object Solution {\n    def maxCoins(nums: Array[Int]): Int = {\n \n    }\n}","lang":"Scala"},{"s":"class Solution {\n    fun maxCoins(nums: IntArray): Int {\n \n    }\n}","lang":"Kotlin"},{"s":"impl Solution {\n    pub fn max_coins(nums: Vec<i32>) -> i32 {\n        \n    }\n}","lang":"Rust"},{"s":"class Solution {\n    public int maxCoins(int[] nums) {\n \n    }\n}","lang":"Java"},{"s":"class Solution(object):\n    def maxCoins(self, nums):\n        \"\"\"\n        :type nums: List[int]\n        :rtype: int\n        \"\"\"","lang":"Python"},{"s":"class Solution:\n    def maxCoins(self, nums: List[int]) -> int:","lang":"Python3"},{"s":"int maxCoins(int* nums, int numsSize){\n \n}","lang":"C"},{"s":"public class Solution {\n    public int MaxCoins(int[] nums) {\n \n    }\n}","lang":"C#"},{"s":"/**\n * @param {number[]} nums\n * @return {number}\n */\nvar maxCoins = function(nums) {\n \n};","lang":"JavaScript"},{"s":"# @param {Integer[]} nums\n# @return {Integer}\ndef max_coins(nums)\n \nend","lang":"Ruby"},{"s":"# @param {Integer[]} nums\n# @return {Integer}\ndef max_coins(nums)\n \nend","lang":"Ruby"}],"page":"312/1581","h":"312. 戳气球","d":"<div class=\"notranslate\"><p>有 <code>n</code> 个气球，编号为<code>0</code> 到 <code>n-1</code>，每个气球上都标有一个数字，这些数字存在数组&nbsp;<code>nums</code>&nbsp;中。</p>\n\n<p>现在要求你戳破所有的气球。每当你戳破一个气球 <code>i</code> 时，你可以获得&nbsp;<code>nums[left] * nums[i] * nums[right]</code>&nbsp;个硬币。&nbsp;这里的&nbsp;<code>left</code>&nbsp;和&nbsp;<code>right</code>&nbsp;代表和&nbsp;<code>i</code>&nbsp;相邻的两个气球的序号。注意当你戳破了气球 <code>i</code> 后，气球&nbsp;<code>left</code>&nbsp;和气球&nbsp;<code>right</code>&nbsp;就变成了相邻的气球。</p>\n\n<p>求所能获得硬币的最大数量。</p>\n\n<p><strong>说明:</strong></p>\n\n<ul>\n\t<li>你可以假设&nbsp;<code>nums[-1] = nums[n] = 1</code>，但注意它们不是真实存在的所以并不能被戳破。</li>\n\t<li>0 ≤ <code>n</code> ≤ 500, 0 ≤ <code>nums[i]</code> ≤ 100</li>\n</ul>\n\n<p><strong>示例:</strong></p>\n\n<pre><strong>输入:</strong> <code>[3,1,5,8]</code>\n<strong>输出:</strong> <code>167 \n<strong>解释: </strong></code>nums = [3,1,5,8] --&gt; [3,5,8] --&gt;   [3,8]   --&gt;  [8]  --&gt; []\n&nbsp;    coins =  3*1*5      +  3*5*8    +  1*3*8      + 1*8*1   = 167\n</pre>\n</div>","l":"困难","s":"class Solution {\n \n    /**\n     * @param Integer[] $nums\n     * @return Integer\n     */\n    function maxCoins($nums) {\n        \n    }\n}","lang":"PHP","href":"https://leetcode-cn.com/problems/burst-balloons/","bb":{"x":445,"y":40,"w":116,"h":28}}

