{"ls":[{"s":"# @param {Integer[]} nums\n# @return {Integer[]}\ndef count_smaller(nums)\n \nend","lang":"Ruby"},{"s":"class Solution {\n    func countSmaller(_ nums: [Int]) -> [Int] {\n        \n    }\n}","lang":"Swift"},{"s":"func countSmaller(nums []int) []int {\n \n}","lang":"Go"},{"s":"object Solution {\n    def countSmaller(nums: Array[Int]): List[Int] = \n{\n \n    }\n}","lang":"Scala"},{"s":"class Solution {\n    fun countSmaller(nums: IntArray): List<Int> {\n \n    }\n}","lang":"Kotlin"},{"s":"impl Solution {\n    pub fn count_smaller(nums: Vec<i32>) -> \nVec<i32> {\n        \n    }\n}","lang":"Rust"},{"s":"class Solution {\n    public List<Integer> countSmaller(int[] nums) {\n \n    }\n}","lang":"Java"},{"s":"class Solution(object):\n    def countSmaller(self, nums):\n        \"\"\"\n        :type nums: List[int]\n        :rtype: List[int]\n        \"\"\"","lang":"Python"},{"s":"class Solution:\n    def countSmaller(self, nums: List[int]) -> List\n[int]:","lang":"Python3"},{"s":"/**\n * Note: The returned array must be malloced, \nassume caller calls free().\n */\nint* countSmaller(int* nums, int numsSize, int* \nreturnSize){\n \n}","lang":"C"},{"s":"public class Solution {\n    public IList<int> CountSmaller(int[] nums) {\n \n    }\n}","lang":"C#"},{"s":"/**\n * @param {number[]} nums\n * @return {number[]}\n */\nvar countSmaller = function(nums) {\n \n};","lang":"JavaScript"},{"s":"# @param {Integer[]} nums\n# @return {Integer[]}\ndef count_smaller(nums)\n \nend","lang":"Ruby"},{"s":"# @param {Integer[]} nums\n# @return {Integer[]}\ndef count_smaller(nums)\n \nend","lang":"Ruby"}],"page":"315/1581","h":"315. 计算右侧小于当前元素的个数","d":"<div class=\"notranslate\"><p>给定一个整数数组 <em>nums</em>，按要求返回一个新数组&nbsp;<em>counts</em>。数组 <em>counts</em> 有该性质： <code>counts[i]</code> 的值是&nbsp; <code>nums[i]</code> 右侧小于&nbsp;<code>nums[i]</code> 的元素的数量。</p>\n\n<p><strong>示例:</strong></p>\n\n<pre><strong>输入:</strong> [5,2,6,1]\n<strong>输出:</strong> <code>[2,1,1,0] \n<strong>解释:</strong></code>\n5 的右侧有 <strong>2 </strong>个更小的元素 (2 和 1).\n2 的右侧仅有 <strong>1 </strong>个更小的元素 (1).\n6 的右侧有 <strong>1 </strong>个更小的元素 (1).\n1 的右侧有 <strong>0 </strong>个更小的元素.\n</pre>\n</div>","l":"困难","s":"class Solution {","lang":"PHP","href":"https://leetcode-cn.com/problems/count-of-smaller-numbers-after-self/","bb":{"x":445,"y":40,"w":116,"h":28}}

