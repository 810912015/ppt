{"ls":[{"s":"class Solution {\n    public int findNumberOfLIS(int[] nums) {\n \n    }\n}","lang":"Java"},{"s":"class Solution(object):\n    def findNumberOfLIS(self, nums):\n        \"\"\"\n        :type nums: List[int]\n        :rtype: int\n        \"\"\"","lang":"Python"},{"s":"class Solution:\n    def findNumberOfLIS(self, nums: List[int]) -> \nint:","lang":"Python3"},{"s":"int findNumberOfLIS(int* nums, int numsSize){\n \n}","lang":"C"},{"s":"public class Solution {\n    public int FindNumberOfLIS(int[] nums) {\n \n    }\n}","lang":"C#"},{"s":"/**\n * @param {number[]} nums\n * @return {number}\n */\nvar findNumberOfLIS = function(nums) {\n \n};","lang":"JavaScript"},{"s":"# @param {Integer[]} nums\n# @return {Integer}\ndef find_number_of_lis(nums)\n \nend","lang":"Ruby"},{"s":"class Solution {\n    func findNumberOfLIS(_ nums: [Int]) -> Int {\n        \n    }\n}","lang":"Swift"},{"s":"func findNumberOfLIS(nums []int) int {\n \n}","lang":"Go"},{"s":"object Solution {\n    def findNumberOfLIS(nums: Array[Int]): Int = {\n \n    }\n}","lang":"Scala"},{"s":"class Solution {\n    fun findNumberOfLIS(nums: IntArray): Int {\n \n    }\n}","lang":"Kotlin"},{"s":"impl Solution {\n    pub fn find_number_of_lis(nums: Vec<i32>) -> \ni32 {\n        \n    }\n}","lang":"Rust"},{"s":"class Solution {\n \n    /**\n     * @param Integer[] $nums\n     * @return Integer\n     */\n    function findNumberOfLIS($nums) {\n        \n    }\n}","lang":"PHP"},{"s":"class Solution {\n \n    /**\n     * @param Integer[] $nums\n     * @return Integer\n     */\n    function findNumberOfLIS($nums) {\n        \n    }\n}","lang":"PHP"}],"page":"673/1581","h":"673. 最长递增子序列的个数","d":"<div class=\"notranslate\"><p>给定一个未排序的整数数组，找到最长递增子序列的个数。</p>\n\n<p><strong>示例 1:</strong></p>\n\n<pre><strong>输入:</strong> [1,3,5,4,7]\n<strong>输出:</strong> 2\n<strong>解释:</strong> 有两个最长递增子序列，分别是 [1, 3, 4, 7] 和[1, 3, 5, 7]。\n</pre>\n\n<p><strong>示例 2:</strong></p>\n\n<pre><strong>输入:</strong> [2,2,2,2,2]\n<strong>输出:</strong> 5\n<strong>解释:</strong> 最长递增子序列的长度是1，并且存在5个子序列的长度为1，因此输出5。\n</pre>\n\n<p><strong>注意:</strong>&nbsp;给定的数组长度不超过 2000 并且结果一定是32位有符号整数。</p>\n</div>","l":"中等","s":"# @param {Integer[]} nums","lang":"Ruby","href":"https://leetcode-cn.com/problems/number-of-longest-increasing-subsequence/","bb":{"x":445,"y":40,"w":116,"h":28}}

