{"ls":[{"s":"class Solution {\n    public int[][] spiralMatrixIII(int R, int C, \nint r0, int c0) {\n \n    }\n}","lang":"Java"},{"s":"class Solution(object):\n    def spiralMatrixIII(self, R, C, r0, c0):\n        \"\"\"\n        :type R: int\n        :type C: int\n        :type r0: int\n        :type c0: int\n        :rtype: List[List[int]]\n        \"\"\"","lang":"Python"},{"s":"class Solution:\n    def spiralMatrixIII(self, R: int, C: int, r0: \nint, c0: int) -> List[List[int]]:","lang":"Python3"},{"s":"/**\n * Return an array of arrays of size *returnSize.\n * The sizes of the arrays are returned as \n*returnColumnSizes array.\n * Note: Both returned array and *columnSizes array \nmust be malloced, assume caller calls free().\n */\nint** spiralMatrixIII(int R, int C, int r0, int c0, \nint* returnSize, int** returnColumnSizes){\n \n}","lang":"C"},{"s":"public class Solution {\n    public int[][] SpiralMatrixIII(int R, int C, \nint r0, int c0) {\n \n    }\n}","lang":"C#"},{"s":"/**\n * @param {number} R\n * @param {number} C\n * @param {number} r0\n * @param {number} c0\n * @return {number[][]}\n */\nvar spiralMatrixIII = function(R, C, r0, c0) {\n \n};","lang":"JavaScript"},{"s":"# @param {Integer} r\n# @param {Integer} c\n# @param {Integer} r0\n# @param {Integer} c0\n# @return {Integer[][]}\ndef spiral_matrix_iii(r, c, r0, c0)\n \nend","lang":"Ruby"},{"s":"class Solution {\n    func spiralMatrixIII(_ R: Int, _ C: Int, _ r0: \nInt, _ c0: Int) -> [[Int]] {\n        \n    }\n}","lang":"Swift"},{"s":"func spiralMatrixIII(R int, C int, r0 int, c0 int) \n[][]int {\n \n}","lang":"Go"},{"s":"object Solution {\n    def spiralMatrixIII(R: Int, C: Int, r0: Int, \nc0: Int): Array[Array[Int]] = {\n \n    }\n}","lang":"Scala"},{"s":"class Solution {\n    fun spiralMatrixIII(R: Int, C: Int, r0: Int, \nc0: Int): Array<IntArray> {\n \n    }\n}","lang":"Kotlin"},{"s":"impl Solution {\n    pub fn spiral_matrix_iii(r: i32, c: i32, r0: \ni32, c0: i32) -> Vec<Vec<i32>> {\n        \n    }\n}","lang":"Rust"},{"s":"class Solution {\n \n    /**\n     * @param Integer $R\n     * @param Integer $C\n     * @param Integer $r0\n     * @param Integer $c0\n     * @return Integer[][]\n     */\n    function spiralMatrixIII($R, $C, $r0, $c0) {\n        \n    }\n}","lang":"PHP"},{"s":"class Solution {\n \n    /**\n     * @param Integer $R\n     * @param Integer $C\n     * @param Integer $r0\n     * @param Integer $c0\n     * @return Integer[][]\n     */\n    function spiralMatrixIII($R, $C, $r0, $c0) {\n        \n    }\n}","lang":"PHP"}],"page":"885/1581","h":"885. 螺旋矩阵 III","d":"<div class=\"notranslate\"><p>在&nbsp;<code>R</code>&nbsp;行&nbsp;<code>C</code>&nbsp;列的矩阵上，我们从&nbsp;<code>(r0, c0)</code>&nbsp;面朝东面开始</p>\n\n<p>这里，网格的西北角位于第一行第一列，网格的东南角位于最后一行最后一列。</p>\n\n<p>现在，我们以顺时针按螺旋状行走，访问此网格中的每个位置。</p>\n\n<p>每当我们移动到网格的边界之外时，我们会继续在网格之外行走（但稍后可能会返回到网格边界）。</p>\n\n<p>最终，我们到过网格的所有&nbsp;<code>R * C</code>&nbsp;个空间。</p>\n\n<p>按照访问顺序返回表示网格位置的坐标列表。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre><strong>输入：</strong>R = 1, C = 4, r0 = 0, c0 = 0\n<strong>输出：</strong>[[0,0],[0,1],[0,2],[0,3]]\n\n<img style=\"height: 99px; width: 174px;\" src=\"https://aliyun-lc-upload.oss-cn-hangzhou.aliyuncs.com/aliyun-lc-upload/uploads/2018/08/24/example_1.png\" alt=\"\">\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 2：</strong></p>\n\n<pre><strong>输入：</strong>R = 5, C = 6, r0 = 1, c0 = 4\n<strong>输出：</strong>[[1,4],[1,5],[2,5],[2,4],[2,3],[1,3],[0,3],[0,4],[0,5],[3,5],[3,4],[3,3],[3,2],[2,2],[1,2],[0,2],[4,5],[4,4],[4,3],[4,2],[4,1],[3,1],[2,1],[1,1],[0,1],[4,0],[3,0],[2,0],[1,0],[0,0]]\n\n<img style=\"height: 142px; width: 202px;\" src=\"https://aliyun-lc-upload.oss-cn-hangzhou.aliyuncs.com/aliyun-lc-upload/uploads/2018/08/24/example_2.png\" alt=\"\">\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= R &lt;= 100</code></li>\n\t<li><code>1 &lt;= C &lt;= 100</code></li>\n\t<li><code>0 &lt;= r0 &lt; R</code></li>\n\t<li><code>0 &lt;= c0 &lt; C</code></li>\n</ol>\n</div>","l":"中等","s":"# @param {Integer} r","lang":"Ruby","href":"https://leetcode-cn.com/problems/spiral-matrix-iii/","bb":{"x":445,"y":40,"w":116,"h":28}}

