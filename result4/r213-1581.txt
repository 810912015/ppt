{"ls":[{"s":"class Solution {\n    public int rob(int[] nums) {\n \n    }\n}","lang":"Java"},{"s":"class Solution(object):\n    def rob(self, nums):\n        \"\"\"\n        :type nums: List[int]\n        :rtype: int\n        \"\"\"","lang":"Python"},{"s":"class Solution:\n    def rob(self, nums: List[int]) -> int:","lang":"Python3"},{"s":"int rob(int* nums, int numsSize){\n \n}","lang":"C"},{"s":"public class Solution {\n    public int Rob(int[] nums) {\n \n    }\n}","lang":"C#"},{"s":"/**\n * @param {number[]} nums\n * @return {number}\n */\nvar rob = function(nums) {\n \n};","lang":"JavaScript"},{"s":"# @param {Integer[]} nums\n# @return {Integer}\ndef rob(nums)\n \nend","lang":"Ruby"},{"s":"class Solution {\n    func rob(_ nums: [Int]) -> Int {\n \n    }\n}","lang":"Swift"},{"s":"func rob(nums []int) int {\n \n}","lang":"Go"},{"s":"object Solution {\n    def rob(nums: Array[Int]): Int = {\n \n    }\n}","lang":"Scala"},{"s":"class Solution {\n    fun rob(nums: IntArray): Int {\n \n    }\n}","lang":"Kotlin"},{"s":"impl Solution {\n    pub fn rob(nums: Vec<i32>) -> i32 {\n \n    }\n}","lang":"Rust"},{"s":"class Solution {\n \n    /**\n     * @param Integer[] $nums\n     * @return Integer\n     */\n    function rob($nums) {\n \n    }\n}","lang":"PHP"},{"s":"class Solution {\n \n    /**\n     * @param Integer[] $nums\n     * @return Integer\n     */\n    function rob($nums) {\n \n    }\n}","lang":"PHP"}],"page":"213/1581","h":"213. 打家劫舍 II","d":"<div class=\"notranslate\"><p>你是一个专业的小偷，计划偷窃沿街的房屋，每间房内都藏有一定的现金。这个地方所有的房屋都<strong>围成一圈，</strong>这意味着第一个房屋和最后一个房屋是紧挨着的。同时，相邻的房屋装有相互连通的防盗系统，<strong>如果两间相邻的房屋在同一晚上被小偷闯入，系统会自动报警</strong>。</p>\n\n<p>给定一个代表每个房屋存放金额的非负整数数组，计算你<strong>在不触动警报装置的情况下，</strong>能够偷窃到的最高金额。</p>\n\n<p><strong>示例&nbsp;1:</strong></p>\n\n<pre><strong>输入:</strong> [2,3,2]\n<strong>输出:</strong> 3\n<strong>解释:</strong> 你不能先偷窃 1 号房屋（金额 = 2），然后偷窃 3 号房屋（金额 = 2）, 因为他们是相邻的。\n</pre>\n\n<p><strong>示例 2:</strong></p>\n\n<pre><strong>输入:</strong> [1,2,3,1]\n<strong>输出:</strong> 4\n<strong>解释:</strong> 你可以先偷窃 1 号房屋（金额 = 1），然后偷窃 3 号房屋（金额 = 3）。\n&nbsp;    偷窃到的最高金额 = 1 + 3 = 4 。</pre>\n</div>","l":"中等","s":"# @param {Integer[]} nums\n# @return {Integer}\ndef rob(nums)\n \nend","lang":"Ruby","href":"https://leetcode-cn.com/problems/house-robber-ii/","bb":{"x":445,"y":40,"w":116,"h":28}}

