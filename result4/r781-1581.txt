{"ls":[{"s":"class Solution {\n    public int numRabbits(int[] answers) {\n \n    }\n}","lang":"Java"},{"s":"class Solution(object):\n    def numRabbits(self, answers):\n        \"\"\"\n        :type answers: List[int]\n        :rtype: int\n        \"\"\"","lang":"Python"},{"s":"class Solution:\n    def numRabbits(self, answers: List[int]) -> int:","lang":"Python3"},{"s":"int numRabbits(int* answers, int answersSize){\n \n}","lang":"C"},{"s":"public class Solution {\n    public int NumRabbits(int[] answers) {\n \n    }\n}","lang":"C#"},{"s":"public class Solution {\n    public int NumRabbits(int[] answers) {\n \n    }\n}","lang":"C#"},{"s":"# @param {Integer[]} answers\n# @return {Integer}\ndef num_rabbits(answers)\n \nend","lang":"Ruby"},{"s":"class Solution {\n    func numRabbits(_ answers: [Int]) -> Int {\n        \n    }\n}","lang":"Swift"},{"s":"func numRabbits(answers []int) int {\n \n}","lang":"Go"},{"s":"object Solution {\n    def numRabbits(answers: Array[Int]): Int = {\n \n    }\n}","lang":"Scala"},{"s":"class Solution {\n    fun numRabbits(answers: IntArray): Int {\n \n    }\n}","lang":"Kotlin"},{"s":"impl Solution {\n    pub fn num_rabbits(answers: Vec<i32>) -> i32 {\n        \n    }\n}","lang":"Rust"},{"s":"class Solution {\n \n    /**\n     * @param Integer[] $answers\n     * @return Integer\n     */\n    function numRabbits($answers) {\n        \n    }\n}","lang":"PHP"},{"s":"class Solution {\n \n    /**\n     * @param Integer[] $answers\n     * @return Integer\n     */\n    function numRabbits($answers) {\n        \n    }\n}","lang":"PHP"}],"page":"781/1581","h":"781. 森林中的兔子","d":"<div class=\"notranslate\"><p>森林中，每个兔子都有颜色。其中一些兔子（可能是全部）告诉你还有多少其他的兔子和自己有相同的颜色。我们将这些回答放在&nbsp;<code>answers</code>&nbsp;数组里。</p>\n\n<p>返回森林中兔子的最少数量。</p>\n\n<pre><strong>示例:</strong>\n<strong>输入:</strong> answers = [1, 1, 2]\n<strong>输出:</strong> 5\n<strong>解释:</strong>\n两只回答了 \"1\" 的兔子可能有相同的颜色，设为红色。\n之后回答了 \"2\" 的兔子不会是红色，否则他们的回答会相互矛盾。\n设回答了 \"2\" 的兔子为蓝色。\n此外，森林中还应有另外 2 只蓝色兔子的回答没有包含在数组中。\n因此森林中兔子的最少数量是 5: 3 只回答的和 2 只没有回答的。\n\n<strong>输入:</strong> answers = [10, 10, 10]\n<strong>输出:</strong> 11\n\n<strong>输入:</strong> answers = []\n<strong>输出:</strong> 0\n</pre>\n\n<p><strong>说明:</strong></p>\n\n<ol>\n\t<li><code>answers</code>&nbsp;的长度最大为<code>1000</code>。</li>\n\t<li><code>answers[i]</code>&nbsp;是在&nbsp;<code>[0, 999]</code>&nbsp;范围内的整数。</li>\n</ol>\n</div>","l":"中等","s":"# @param {Integer[]} answers\n# @return {Integer}\ndef num_rabbits(answers)\n \nend","lang":"Ruby","href":"https://leetcode-cn.com/problems/rabbits-in-forest/","bb":{"x":445,"y":40,"w":116,"h":28}}

