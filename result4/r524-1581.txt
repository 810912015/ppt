{"ls":[{"s":"class Solution {\n    public String findLongestWord(String s, \nList<String> d) {\n \n    }\n}","lang":"Java"},{"s":"class Solution(object):\n    def findLongestWord(self, s, d):\n        \"\"\"\n        :type s: str\n        :type d: List[str]\n        :rtype: str\n        \"\"\"","lang":"Python"},{"s":"class Solution:\n    def findLongestWord(self, s: str, d: List[str]) \n-> str:","lang":"Python3"},{"s":"char * findLongestWord(char * s, char ** d, int \ndSize){\n \n}","lang":"C"},{"s":"public class Solution {\n    public string FindLongestWord(string s, \nIList<string> d) {\n \n    }\n}","lang":"C#"},{"s":"/**\n * @param {string} s\n * @param {string[]} d\n * @return {string}\n */\nvar findLongestWord = function(s, d) {\n \n};","lang":"JavaScript"},{"s":"# @param {String} s\n# @param {String[]} d\n# @return {String}\ndef find_longest_word(s, d)\n \nend","lang":"Ruby"},{"s":"class Solution {\n    func findLongestWord(_ s: String, _ d: [String])\n -> String {\n        \n    }\n}","lang":"Swift"},{"s":"func findLongestWord(s string, d []string) string {\n \n}","lang":"Go"},{"s":"object Solution {\n    def findLongestWord(s: String, d: List[String])\n: String = {\n \n    }\n}","lang":"Scala"},{"s":"class Solution {\n    fun findLongestWord(s: String, d: List<String>)\n: String {\n \n    }\n}","lang":"Kotlin"},{"s":"impl Solution {\n    pub fn find_longest_word(s: String, d: \nVec<String>) -> String {\n        \n    }\n}","lang":"Rust"},{"s":"class Solution {\n \n    /**\n     * @param String $s\n     * @param String[] $d\n     * @return String\n     */\n    function findLongestWord($s, $d) {\n        \n    }\n}","lang":"PHP"},{"s":"class Solution {\n \n    /**\n     * @param String $s\n     * @param String[] $d\n     * @return String\n     */\n    function findLongestWord($s, $d) {\n        \n    }\n}","lang":"PHP"}],"page":"524/1581","h":"524. 通过删除字母匹配到字典里最长单词","d":"<div class=\"notranslate\"><p>给定一个字符串和一个字符串字典，找到字典里面最长的字符串，该字符串可以通过删除给定字符串的某些字符来得到。如果答案不止一个，返回长度最长且字典顺序最小的字符串。如果答案不存在，则返回空字符串。</p>\n\n<p><strong>示例 1:</strong></p>\n\n<pre><strong>输入:</strong>\ns = \"abpcplea\", d = [\"ale\",\"apple\",\"monkey\",\"plea\"]\n\n<strong>输出:</strong> \n\"apple\"\n</pre>\n\n<p><strong>示例&nbsp;2:</strong></p>\n\n<pre><strong>输入:</strong>\ns = \"abpcplea\", d = [\"a\",\"b\",\"c\"]\n\n<strong>输出:</strong> \n\"a\"\n</pre>\n\n<p><strong>说明:</strong></p>\n\n<ol>\n\t<li>所有输入的字符串只包含小写字母。</li>\n\t<li>字典的大小不会超过 1000。</li>\n\t<li>所有输入的字符串长度不会超过 1000。</li>\n</ol>\n</div>","l":"中等","s":"# @param {String} s\n# @param {String[]} d\n# @return {String}\ndef find_longest_word(s, d)\n \nend","lang":"Ruby","href":"https://leetcode-cn.com/problems/longest-word-in-dictionary-through-deleting/","bb":{"x":445,"y":40,"w":116,"h":28}}

