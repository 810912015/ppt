{"ls":[{"s":"# @param {Integer} l\n# @param {Integer} r\n# @return {Integer}\ndef count_prime_set_bits(l, r)\n \nend","lang":"Ruby"},{"s":"class Solution {\n    func countPrimeSetBits(_ L: Int, _ R: Int) -> \nInt {\n        \n    }\n}","lang":"Swift"},{"s":"func countPrimeSetBits(L int, R int) int {\n \n}","lang":"Go"},{"s":"object Solution {\n    def countPrimeSetBits(L: Int, R: Int): Int = {\n \n    }\n}","lang":"Scala"},{"s":"class Solution {\n    fun countPrimeSetBits(L: Int, R: Int): Int {\n \n    }\n}","lang":"Kotlin"},{"s":"impl Solution {\n    pub fn count_prime_set_bits(l: i32, r: i32) -> \ni32 {\n        \n    }\n}","lang":"Rust"},{"s":"class Solution {\n    public int countPrimeSetBits(int L, int R) {\n \n    }\n}","lang":"Java"},{"s":"class Solution(object):\n    def countPrimeSetBits(self, L, R):\n        \"\"\"\n        :type L: int\n        :type R: int\n        :rtype: int\n        \"\"\"","lang":"Python"},{"s":"class Solution:\n    def countPrimeSetBits(self, L: int, R: int) -> \nint:","lang":"Python3"},{"s":"int countPrimeSetBits(int L, int R){\n \n}","lang":"C"},{"s":"public class Solution {\n    public int CountPrimeSetBits(int L, int R) {\n \n    }\n}","lang":"C#"},{"s":"/**\n * @param {number} L\n * @param {number} R\n * @return {number}\n */\nvar countPrimeSetBits = function(L, R) {\n \n};","lang":"JavaScript"},{"s":"# @param {Integer} l\n# @param {Integer} r\n# @return {Integer}\ndef count_prime_set_bits(l, r)\n \nend","lang":"Ruby"},{"s":"# @param {Integer} l\n# @param {Integer} r\n# @return {Integer}\ndef count_prime_set_bits(l, r)\n \nend","lang":"Ruby"}],"page":"762/1581","h":"762. 二进制表示中质数个计算置位","d":"<div class=\"notranslate\"><p>给定两个整数&nbsp;<code>L</code>&nbsp;和&nbsp;<code>R</code>&nbsp;，找到闭区间&nbsp;<code>[L, R]</code>&nbsp;范围内，计算置位位数为质数的整数个数。</p>\n\n<p>（注意，计算置位代表二进制表示中1的个数。例如&nbsp;<code>21</code>&nbsp;的二进制表示&nbsp;<code>10101</code>&nbsp;有 3 个计算置位。还有，1 不是质数。）</p>\n\n<p><strong>示例 1:</strong></p>\n\n<pre><strong>输入:</strong> L = 6, R = 10\n<strong>输出:</strong> 4\n<strong>解释:</strong>\n6 -&gt; 110 (2 个计算置位，2 是质数)\n7 -&gt; 111 (3 个计算置位，3 是质数)\n9 -&gt; 1001 (2 个计算置位，2 是质数)\n10-&gt; 1010 (2 个计算置位，2 是质数)\n</pre>\n\n<p><strong>示例 2:</strong></p>\n\n<pre><strong>输入:</strong> L = 10, R = 15\n<strong>输出:</strong> 5\n<strong>解释:</strong>\n10 -&gt; 1010 (2 个计算置位, 2 是质数)\n11 -&gt; 1011 (3 个计算置位, 3 是质数)\n12 -&gt; 1100 (2 个计算置位, 2 是质数)\n13 -&gt; 1101 (3 个计算置位, 3 是质数)\n14 -&gt; 1110 (3 个计算置位, 3 是质数)\n15 -&gt; 1111 (4 个计算置位, 4 不是质数)\n</pre>\n\n<p><strong>注意:</strong></p>\n\n<ol>\n\t<li><code>L, R</code>&nbsp;是&nbsp;<code>L &lt;= R</code>&nbsp;且在&nbsp;<code>[1, 10^6]</code>&nbsp;中的整数。</li>\n\t<li><code>R - L</code>&nbsp;的最大值为 10000。</li>\n</ol>\n</div>","l":"简单","s":"class Solution {\n \n    /**\n     * @param Integer $L\n     * @param Integer $R\n     * @return Integer\n     */\n    function countPrimeSetBits($L, $R) {\n        \n    }\n}","lang":"PHP","href":"https://leetcode-cn.com/problems/prime-number-of-set-bits-in-binary-representation/","bb":{"x":445,"y":40,"w":116,"h":28}}

