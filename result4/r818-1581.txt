{"ls":[{"s":"class Solution {\n    public int racecar(int target) {\n \n    }\n}","lang":"Java"},{"s":"class Solution(object):\n    def racecar(self, target):\n        \"\"\"\n        :type target: int\n        :rtype: int\n        \"\"\"","lang":"Python"},{"s":"class Solution(object):\n    def racecar(self, target):\n        \"\"\"\n        :type target: int\n        :rtype: int\n        \"\"\"","lang":"Python"},{"s":"int racecar(int target){\n \n}","lang":"C"},{"s":"public class Solution {\n    public int Racecar(int target) {\n \n    }\n}","lang":"C#"},{"s":"/**\n * @param {number} target\n * @return {number}\n */\nvar racecar = function(target) {\n \n};","lang":"JavaScript"},{"s":"# @param {Integer} target\n# @return {Integer}\ndef racecar(target)\n \nend","lang":"Ruby"},{"s":"class Solution {\n    func racecar(_ target: Int) -> Int {\n        \n    }\n}","lang":"Swift"},{"s":"func racecar(target int) int {\n \n}","lang":"Go"},{"s":"object Solution {\n    def racecar(target: Int): Int = {\n \n    }\n}","lang":"Scala"},{"s":"class Solution {\n    fun racecar(target: Int): Int {\n \n    }\n}","lang":"Kotlin"},{"s":"impl Solution {\n    pub fn racecar(target: i32) -> i32 {\n        \n    }\n}","lang":"Rust"},{"s":"class Solution {\n \n    /**\n     * @param Integer $target\n     * @return Integer\n     */\n    function racecar($target) {\n        \n    }\n}","lang":"PHP"},{"s":"class Solution {\n \n    /**\n     * @param Integer $target\n     * @return Integer\n     */\n    function racecar($target) {\n        \n    }\n}","lang":"PHP"}],"page":"818/1581","h":"818. 赛车","d":"<div class=\"notranslate\"><p>你的赛车起始停留在位置 0，速度为 +1，正行驶在一个无限长的数轴上。（车也可以向负数方向行驶。）</p>\n\n<p>你的车会根据一系列由 A（加速）和 R（倒车）组成的指令进行自动驾驶&nbsp;。</p>\n\n<p>当车得到指令 \"A\" 时, 将会做出以下操作：&nbsp;<code>position += speed, speed *= 2</code>。</p>\n\n<p>当车得到指令 \"R\" 时, 将会做出以下操作：如果当前速度是正数，则将车速调整为&nbsp;<code>speed = -1</code>&nbsp;；否则将车速调整为&nbsp;<code>speed = 1</code>。&nbsp; (当前所处位置不变。)</p>\n\n<p>例如，当得到一系列指令 \"AAR\" 后, 你的车将会走过位置 0-&gt;1-&gt;3-&gt;3，并且速度变化为&nbsp;1-&gt;2-&gt;4-&gt;-1。</p>\n\n<p>现在给定一个目标位置，请给出能够到达目标位置的最短指令列表的<strong>长度</strong>。</p>\n\n<pre><strong>示例 1:</strong>\n<strong>输入:</strong> \ntarget = 3\n<strong>输出:</strong> 2\n<strong>解释:</strong> \n最短指令列表为 \"AA\"\n位置变化为 0-&gt;1-&gt;3\n</pre>\n\n<pre><strong>示例 2:</strong>\n<strong>输入:</strong> \ntarget = 6\n<strong>输出:</strong> 5\n<strong>解释:</strong> \n最短指令列表为 \"AAARA\"\n位置变化为 0-&gt;1-&gt;3-&gt;7-&gt;7-&gt;6\n</pre>\n\n<p><strong>说明: </strong></p>\n\n<ul>\n\t<li><code>1 &lt;= target（目标位置） &lt;= 10000</code>。</li>\n</ul>\n</div>","l":"困难","s":"# @param {Integer} target\n# @return {Integer}\ndef racecar(target)\n \nend","lang":"Ruby","href":"https://leetcode-cn.com/problems/race-car/","bb":{"x":445,"y":40,"w":116,"h":28}}

