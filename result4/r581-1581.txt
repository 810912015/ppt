{"ls":[{"s":"# @param {Integer[]} nums\n# @return {Integer}\ndef find_unsorted_subarray(nums)\n \nend","lang":"Ruby"},{"s":"class Solution {\n    func findUnsortedSubarray(_ nums: [Int]) -> Int \n{\n        \n    }\n}","lang":"Swift"},{"s":"func findUnsortedSubarray(nums []int) int {\n \n}","lang":"Go"},{"s":"object Solution {\n    def findUnsortedSubarray(nums: Array[Int]): Int \n= {\n \n    }\n}","lang":"Scala"},{"s":"class Solution {\n    fun findUnsortedSubarray(nums: IntArray): Int {\n \n    }\n}","lang":"Kotlin"},{"s":"impl Solution {\n    pub fn find_unsorted_subarray(nums: Vec<i32>) \n-> i32 {\n        \n    }\n}","lang":"Rust"},{"s":"class Solution {\n    public int findUnsortedSubarray(int[] nums) {\n \n    }\n}","lang":"Java"},{"s":"class Solution(object):\n    def findUnsortedSubarray(self, nums):\n        \"\"\"\n        :type nums: List[int]\n        :rtype: int\n        \"\"\"","lang":"Python"},{"s":"class Solution:\n    def findUnsortedSubarray(self, nums: List[int]) \n-> int:","lang":"Python3"},{"s":"int findUnsortedSubarray(int* nums, int numsSize){\n \n}","lang":"C"},{"s":"public class Solution {\n    public int FindUnsortedSubarray(int[] nums) {\n \n    }\n}","lang":"C#"},{"s":"/**\n * @param {number[]} nums\n * @return {number}\n */\nvar findUnsortedSubarray = function(nums) {\n \n};","lang":"JavaScript"},{"s":"# @param {Integer[]} nums\n# @return {Integer}\ndef find_unsorted_subarray(nums)\n \nend","lang":"Ruby"},{"s":"# @param {Integer[]} nums\n# @return {Integer}\ndef find_unsorted_subarray(nums)\n \nend","lang":"Ruby"}],"page":"581/1581","h":"581. 最短无序连续子数组","d":"<div class=\"notranslate\"><p>给定一个整数数组，你需要寻找一个<strong>连续的子数组</strong>，如果对这个子数组进行升序排序，那么整个数组都会变为升序排序。</p>\n\n<p>你找到的子数组应是<strong>最短</strong>的，请输出它的长度。</p>\n\n<p><strong>示例 1:</strong></p>\n\n<pre><strong>输入:</strong> [2, 6, 4, 8, 10, 9, 15]\n<strong>输出:</strong> 5\n<strong>解释:</strong> 你只需要对 [6, 4, 8, 10, 9] 进行升序排序，那么整个表都会变为升序排序。\n</pre>\n\n<p><strong>说明 :</strong></p>\n\n<ol>\n\t<li>输入的数组长度范围在&nbsp;[1, 10,000]。</li>\n\t<li>输入的数组可能包含<strong>重复</strong>元素&nbsp;，所以<strong>升序</strong>的意思是<strong>&lt;=。</strong></li>\n</ol>\n</div>","l":"简单","s":"class Solution {\n \n    /**\n     * @param Integer[] $nums\n     * @return Integer\n     */\n    function findUnsortedSubarray($nums) {\n        \n    }\n}","lang":"PHP","href":"https://leetcode-cn.com/problems/shortest-unsorted-continuous-subarray/","bb":{"x":445,"y":40,"w":116,"h":28}}

