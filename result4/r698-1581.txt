{"ls":[{"s":"# @param {Integer[]} nums\n# @param {Integer} k\n# @return {Boolean}\ndef can_partition_k_subsets(nums, k)\n \nend","lang":"Ruby"},{"s":"class Solution {\n    func canPartitionKSubsets(_ nums: [Int], _ k: \nInt) -> Bool {\n        \n    }\n}","lang":"Swift"},{"s":"func canPartitionKSubsets(nums []int, k int) bool {\n \n}","lang":"Go"},{"s":"object Solution {\n    def canPartitionKSubsets(nums: Array[Int], k: \nInt): Boolean = {\n \n    }\n}","lang":"Scala"},{"s":"class Solution {\n    fun canPartitionKSubsets(nums: IntArray, k: Int)\n: Boolean {\n \n    }\n}","lang":"Kotlin"},{"s":"impl Solution {\n    pub fn can_partition_k_subsets(nums: Vec<i32>, \nk: i32) -> bool {\n        \n    }\n}","lang":"Rust"},{"s":"class Solution {\n    public boolean canPartitionKSubsets(int[] nums, \nint k) {\n \n    }\n}","lang":"Java"},{"s":"class Solution(object):\n    def canPartitionKSubsets(self, nums, k):\n        \"\"\"\n        :type nums: List[int]\n        :type k: int\n        :rtype: bool\n        \"\"\"","lang":"Python"},{"s":"class Solution:\n    def canPartitionKSubsets(self, nums: List[int], \nk: int) -> bool:","lang":"Python3"},{"s":"bool canPartitionKSubsets(int* nums, int numsSize, \nint k){\n \n}","lang":"C"},{"s":"public class Solution {\n    public bool CanPartitionKSubsets(int[] nums, \nint k) {\n \n    }\n}","lang":"C#"},{"s":"/**\n * @param {number[]} nums\n * @param {number} k\n * @return {boolean}\n */\nvar canPartitionKSubsets = function(nums, k) {\n \n};","lang":"JavaScript"},{"s":"# @param {Integer[]} nums\n# @param {Integer} k\n# @return {Boolean}\ndef can_partition_k_subsets(nums, k)\n \nend","lang":"Ruby"},{"s":"# @param {Integer[]} nums\n# @param {Integer} k\n# @return {Boolean}\ndef can_partition_k_subsets(nums, k)\n \nend","lang":"Ruby"}],"page":"698/1581","h":"698. 划分为k个相等的子集","d":"<div class=\"notranslate\"><p>给定一个整数数组&nbsp;&nbsp;<code>nums</code> 和一个正整数 <code>k</code>，找出是否有可能把这个数组分成 <code>k</code> 个非空子集，其总和都相等。</p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre><strong>输入：</strong> nums = [4, 3, 2, 3, 5, 2, 1], k = 4\n<strong>输出：</strong> True\n<strong>说明：</strong> 有可能将其分成 4 个子集（5），（1,4），（2,3），（2,3）等于总和。</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>注意:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= k &lt;= len(nums) &lt;= 16</code></li>\n\t<li><code>0 &lt; nums[i] &lt; 10000</code></li>\n</ul>\n</div>","l":"中等","s":"class Solution {\n \n    /**\n     * @param Integer[] $nums\n     * @param Integer $k\n     * @return Boolean\n     */\n    function canPartitionKSubsets($nums, $k) {\n        \n    }\n}","lang":"PHP","href":"https://leetcode-cn.com/problems/partition-to-k-equal-sum-subsets/","bb":{"x":445,"y":40,"w":116,"h":28}}

