{"ls":[{"s":"# @param {Integer[][]} dungeon\n# @return {Integer}\ndef calculate_minimum_hp(dungeon)\n \nend","lang":"Ruby"},{"s":"class Solution {\n    func calculateMinimumHP(_ dungeon: [[Int]]) -> \nInt {\n \n    }\n}","lang":"Swift"},{"s":"func calculateMinimumHP(dungeon [][]int) int {\n \n}","lang":"Go"},{"s":"object Solution {\n    def calculateMinimumHP(dungeon: Array[Array[Int]\n]): Int = {\n \n    }\n}","lang":"Scala"},{"s":"class Solution {\n    fun calculateMinimumHP(dungeon: Array<IntArray>)\n: Int {\n \n    }\n}","lang":"Kotlin"},{"s":"impl Solution {\n    pub fn calculate_minimum_hp(dungeon: \nVec<Vec<i32>>) -> i32 {\n \n    }\n}","lang":"Rust"},{"s":"class Solution {\n    public int calculateMinimumHP(int[][] dungeon) {\n \n    }\n}","lang":"Java"},{"s":"class Solution(object):\n    def calculateMinimumHP(self, dungeon):\n        \"\"\"\n        :type dungeon: List[List[int]]\n        :rtype: int\n        \"\"\"","lang":"Python"},{"s":"class Solution:\n    def calculateMinimumHP(self, dungeon: List[List\n[int]]) -> int:","lang":"Python3"},{"s":"int calculateMinimumHP(int** dungeon, int \ndungeonSize, int* dungeonColSize){\n \n}","lang":"C"},{"s":"public class Solution {\n    public int CalculateMinimumHP(int[][] dungeon) {\n \n    }\n}","lang":"C#"},{"s":"/**\n * @param {number[][]} dungeon\n * @return {number}\n */\nvar calculateMinimumHP = function(dungeon) {\n \n};","lang":"JavaScript"},{"s":"# @param {Integer[][]} dungeon\n# @return {Integer}\ndef calculate_minimum_hp(dungeon)\n \nend","lang":"Ruby"},{"s":"# @param {Integer[][]} dungeon\n# @return {Integer}\ndef calculate_minimum_hp(dungeon)\n \nend","lang":"Ruby"}],"page":"174/1581","h":"174. 地下城游戏","d":"<div class=\"notranslate\"><p>一些恶魔抓住了公主（<strong>P</strong>）并将她关在了地下城的右下角。地下城是由&nbsp;M x N 个房间组成的二维网格。我们英勇的骑士（<strong>K</strong>）最初被安置在左上角的房间里，他必须穿过地下城并通过对抗恶魔来拯救公主。</p>\n\n<p>骑士的初始健康点数为一个正整数。如果他的健康点数在某一时刻降至 0 或以下，他会立即死亡。</p>\n\n<p>有些房间由恶魔守卫，因此骑士在进入这些房间时会失去健康点数（若房间里的值为<em>负整数</em>，则表示骑士将损失健康点数）；其他房间要么是空的（房间里的值为 <em>0</em>），要么包含增加骑士健康点数的魔法球（若房间里的值为<em>正整数</em>，则表示骑士将增加健康点数）。</p>\n\n<p>为了尽快到达公主，骑士决定每次只向右或向下移动一步。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>编写一个函数来计算确保骑士能够拯救到公主所需的最低初始健康点数。</strong></p>\n\n<p>例如，考虑到如下布局的地下城，如果骑士遵循最佳路径 <code>右 -&gt; 右 -&gt; 下 -&gt; 下</code>，则骑士的初始健康点数至少为 <strong>7</strong>。</p>\n\n<table class=\"dungeon\">\n<tbody><tr> \n<td>-2 (K)</td> \n<td>-3</td> \n<td>3</td> \n</tr> \n<tr> \n<td>-5</td> \n<td>-10</td> \n<td>1</td> \n</tr> \n<tr> \n<td>10</td> \n<td>30</td> \n<td>-5 (P)</td> \n</tr> \n</tbody></table>\n\n\n<p>&nbsp;</p>\n\n<p><strong>说明:</strong></p>\n\n<ul>\n\t<li>\n\t<p>骑士的健康点数没有上限。</p>\n\t</li>\n\t<li>任何房间都可能对骑士的健康点数造成威胁，也可能增加骑士的健康点数，包括骑士进入的左上角房间以及公主被监禁的右下角房间。</li>\n</ul></div>","l":"困难","s":"class Solution {","lang":"PHP","href":"https://leetcode-cn.com/problems/dungeon-game/","bb":{"x":445,"y":40,"w":116,"h":28}}

