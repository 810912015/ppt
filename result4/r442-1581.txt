{"ls":[{"s":"# @param {Integer[]} nums\n# @return {Integer[]}\ndef find_duplicates(nums)\n \nend","lang":"Ruby"},{"s":"class Solution {\n    func findDuplicates(_ nums: [Int]) -> [Int] {\n        \n    }\n}","lang":"Swift"},{"s":"func findDuplicates(nums []int) []int {\n \n}","lang":"Go"},{"s":"object Solution {\n    def findDuplicates(nums: Array[Int]): List[Int] \n= {\n \n    }\n}","lang":"Scala"},{"s":"class Solution {\n    fun findDuplicates(nums: IntArray): List<Int> {\n \n    }\n}","lang":"Kotlin"},{"s":"impl Solution {\n    pub fn find_duplicates(nums: Vec<i32>) -> \nVec<i32> {\n        \n    }\n}","lang":"Rust"},{"s":"class Solution {\n    public List<Integer> findDuplicates(int[] nums) \n{\n \n    }\n}","lang":"Java"},{"s":"class Solution(object):\n    def findDuplicates(self, nums):\n        \"\"\"\n        :type nums: List[int]\n        :rtype: List[int]\n        \"\"\"","lang":"Python"},{"s":"class Solution:\n    def findDuplicates(self, nums: List[int]) -> \nList[int]:","lang":"Python3"},{"s":"/**\n * Note: The returned array must be malloced, \nassume caller calls free().\n */\nint* findDuplicates(int* nums, int numsSize, int* \nreturnSize){\n \n}","lang":"C"},{"s":"public class Solution {\n    public IList<int> FindDuplicates(int[] nums) {\n \n    }\n}","lang":"C#"},{"s":"/**\n * @param {number[]} nums\n * @return {number[]}\n */\nvar findDuplicates = function(nums) {\n \n};","lang":"JavaScript"},{"s":"# @param {Integer[]} nums\n# @return {Integer[]}\ndef find_duplicates(nums)\n \nend","lang":"Ruby"},{"s":"# @param {Integer[]} nums\n# @return {Integer[]}\ndef find_duplicates(nums)\n \nend","lang":"Ruby"}],"page":"442/1581","h":"442. 数组中重复的数据","d":"<div class=\"notranslate\"><p>给定一个整数数组 a，其中1 ≤ a[i] ≤ <em>n</em> （<em>n</em>为数组长度）, 其中有些元素出现<strong>两次</strong>而其他元素出现<strong>一次</strong>。</p>\n\n<p>找到所有出现<strong>两次</strong>的元素。</p>\n\n<p>你可以不用到任何额外空间并在O(<em>n</em>)时间复杂度内解决这个问题吗？</p>\n\n<p><strong>示例：</strong></p>\n\n<pre><strong>输入:</strong>\n[4,3,2,7,8,2,3,1]\n\n<strong>输出:</strong>\n[2,3]\n</pre>\n</div>","l":"中等","s":"class Solution {\n \n    /**\n     * @param Integer[] $nums\n     * @return Integer[]\n     */\n    function findDuplicates($nums) {\n        \n    }\n}","lang":"PHP","href":"https://leetcode-cn.com/problems/find-all-duplicates-in-an-array/","bb":{"x":445,"y":40,"w":116,"h":28}}

