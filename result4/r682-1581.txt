{"ls":[{"s":"class Solution {\n    public int calPoints(String[] ops) {\n \n    }\n}","lang":"Java"},{"s":"class Solution(object):\n    def calPoints(self, ops):\n        \"\"\"\n        :type ops: List[str]\n        :rtype: int\n        \"\"\"","lang":"Python"},{"s":"class Solution:\n    def calPoints(self, ops: List[str]) -> int:","lang":"Python3"},{"s":"int calPoints(char ** ops, int opsSize){\n \n}","lang":"C"},{"s":"public class Solution {\n    public int CalPoints(string[] ops) {\n \n    }\n}","lang":"C#"},{"s":"/**\n * @param {string[]} ops\n * @return {number}\n */\nvar calPoints = function(ops) {\n \n};","lang":"JavaScript"},{"s":"# @param {String[]} ops\n# @return {Integer}\ndef cal_points(ops)\n \nend","lang":"Ruby"},{"s":"class Solution {\n    func calPoints(_ ops: [String]) -> Int {\n        \n    }\n}","lang":"Swift"},{"s":"func calPoints(ops []string) int {\n \n}","lang":"Go"},{"s":"object Solution {\n    def calPoints(ops: Array[String]): Int = {\n \n    }\n}","lang":"Scala"},{"s":"class Solution {\n    fun calPoints(ops: Array<String>): Int {\n \n    }\n}","lang":"Kotlin"},{"s":"impl Solution {\n    pub fn cal_points(ops: Vec<String>) -> i32 {\n        \n    }\n}","lang":"Rust"},{"s":"class Solution {\n \n    /**\n     * @param String[] $ops\n     * @return Integer\n     */\n    function calPoints($ops) {\n        \n    }\n}","lang":"PHP"},{"s":"class Solution {\n \n    /**\n     * @param String[] $ops\n     * @return Integer\n     */\n    function calPoints($ops) {\n        \n    }\n}","lang":"PHP"}],"page":"682/1581","h":"682. 棒球比赛","d":"<div class=\"notranslate\"><p>你现在是棒球比赛记录员。<br>\n给定一个字符串列表，每个字符串可以是以下四种类型之一：<br>\n1.<code>整数</code>（一轮的得分）：直接表示您在本轮中获得的积分数。<br>\n2. <code>\"+\"</code>（一轮的得分）：表示本轮获得的得分是前两轮<code>有效</code>&nbsp;回合得分的总和。<br>\n3. <code>\"D\"</code>（一轮的得分）：表示本轮获得的得分是前一轮<code>有效</code>&nbsp;回合得分的两倍。<br>\n4. <code>\"C\"</code>（一个操作，这不是一个回合的分数）：表示您获得的最后一个<code>有效</code>&nbsp;回合的分数是无效的，应该被移除。<br>\n<br>\n每一轮的操作都是永久性的，可能会对前一轮和后一轮产生影响。<br>\n你需要返回你在所有回合中得分的总和。</p>\n\n<p><strong>示例 1:</strong></p>\n\n<pre><strong>输入:</strong> [\"5\",\"2\",\"C\",\"D\",\"+\"]\n<strong>输出:</strong> 30\n<strong>解释:</strong> \n第1轮：你可以得到5分。总和是：5。\n第2轮：你可以得到2分。总和是：7。\n操作1：第2轮的数据无效。总和是：5。\n第3轮：你可以得到10分（第2轮的数据已被删除）。总数是：15。\n第4轮：你可以得到5 + 10 = 15分。总数是：30。\n</pre>\n\n<p><strong>示例 2:</strong></p>\n\n<pre><strong>输入:</strong> [\"5\",\"-2\",\"4\",\"C\",\"D\",\"9\",\"+\",\"+\"]\n<strong>输出:</strong> 27\n<strong>解释:</strong> \n第1轮：你可以得到5分。总和是：5。\n第2轮：你可以得到-2分。总数是：3。\n第3轮：你可以得到4分。总和是：7。\n操作1：第3轮的数据无效。总数是：3。\n第4轮：你可以得到-4分（第三轮的数据已被删除）。总和是：-1。\n第5轮：你可以得到9分。总数是：8。\n第6轮：你可以得到-4 + 9 = 5分。总数是13。\n第7轮：你可以得到9 + 5 = 14分。总数是27。\n</pre>\n\n<p><strong>注意：</strong></p>\n\n<ul>\n\t<li>输入列表的大小将介于1和1000之间。</li>\n\t<li>列表中的每个整数都将介于-30000和30000之间。</li>\n</ul>\n</div>","l":"简单","s":"# @param {String[]} ops","lang":"Ruby","href":"https://leetcode-cn.com/problems/baseball-game/","bb":{"x":445,"y":40,"w":116,"h":28}}

