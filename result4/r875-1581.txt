{"ls":[{"s":"class Solution {\n    public int minEatingSpeed(int[] piles, int H) {\n \n    }\n}","lang":"Java"},{"s":"class Solution(object):\n    def minEatingSpeed(self, piles, H):\n        \"\"\"\n        :type piles: List[int]\n        :type H: int\n        :rtype: int\n        \"\"\"","lang":"Python"},{"s":"class Solution:\n    def minEatingSpeed(self, piles: List[int], H: \nint) -> int:","lang":"Python3"},{"s":"int minEatingSpeed(int* piles, int pilesSize, int H)\n{\n \n}","lang":"C"},{"s":"public class Solution {\n    public int MinEatingSpeed(int[] piles, int H) {\n \n    }\n}","lang":"C#"},{"s":"/**\n * @param {number[]} piles\n * @param {number} H\n * @return {number}\n */\nvar minEatingSpeed = function(piles, H) {\n \n};","lang":"JavaScript"},{"s":"# @param {Integer[]} piles\n# @param {Integer} h\n# @return {Integer}\ndef min_eating_speed(piles, h)\n \nend","lang":"Ruby"},{"s":"# @param {Integer[]} piles\n# @param {Integer} h\n# @return {Integer}\ndef min_eating_speed(piles, h)\n \nend","lang":"Ruby"},{"s":"func minEatingSpeed(piles []int, H int) int {\n \n}","lang":"Go"},{"s":"object Solution {\n    def minEatingSpeed(piles: Array[Int], H: Int): \nInt = {\n \n    }\n}","lang":"Scala"},{"s":"class Solution {\n    fun minEatingSpeed(piles: IntArray, H: Int): \nInt {\n \n    }\n}","lang":"Kotlin"},{"s":"impl Solution {\n    pub fn min_eating_speed(piles: Vec<i32>, h: i32)\n -> i32 {\n        \n    }\n}","lang":"Rust"},{"s":"class Solution {\n \n    /**\n     * @param Integer[] $piles\n     * @param Integer $H\n     * @return Integer\n     */\n    function minEatingSpeed($piles, $H) {\n        \n    }\n}","lang":"PHP"},{"s":"class Solution {\n \n    /**\n     * @param Integer[] $piles\n     * @param Integer $H\n     * @return Integer\n     */\n    function minEatingSpeed($piles, $H) {\n        \n    }\n}","lang":"PHP"}],"page":"875/1581","h":"875. 爱吃香蕉的珂珂","d":"<div class=\"notranslate\"><p>珂珂喜欢吃香蕉。这里有&nbsp;<code>N</code>&nbsp;堆香蕉，第 <code>i</code> 堆中有&nbsp;<code>piles[i]</code>&nbsp;根香蕉。警卫已经离开了，将在&nbsp;<code>H</code>&nbsp;小时后回来。</p>\n\n<p>珂珂可以决定她吃香蕉的速度&nbsp;<code>K</code>&nbsp;（单位：根/小时）。每个小时，她将会选择一堆香蕉，从中吃掉 <code>K</code> 根。如果这堆香蕉少于 <code>K</code> 根，她将吃掉这堆的所有香蕉，然后这一小时内不会再吃更多的香蕉。&nbsp;&nbsp;</p>\n\n<p>珂珂喜欢慢慢吃，但仍然想在警卫回来前吃掉所有的香蕉。</p>\n\n<p>返回她可以在 <code>H</code> 小时内吃掉所有香蕉的最小速度 <code>K</code>（<code>K</code> 为整数）。</p>\n\n<p>&nbsp;</p>\n\n<ul>\n</ul>\n\n<p><strong>示例 1：</strong></p>\n\n<pre><strong>输入: </strong>piles = [3,6,7,11], H = 8\n<strong>输出: </strong>4\n</pre>\n\n<p><strong>示例&nbsp;2：</strong></p>\n\n<pre><strong>输入: </strong>piles = [30,11,23,4,20], H = 5\n<strong>输出: </strong>30\n</pre>\n\n<p><strong>示例&nbsp;3：</strong></p>\n\n<pre><strong>输入: </strong>piles = [30,11,23,4,20], H = 6\n<strong>输出: </strong>23\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= piles.length &lt;= 10^4</code></li>\n\t<li><code>piles.length &lt;= H &lt;= 10^9</code></li>\n\t<li><code>1 &lt;= piles[i] &lt;= 10^9</code></li>\n</ul>\n</div>","l":"中等","s":"# @param {Integer[]} piles","lang":"Ruby","href":"https://leetcode-cn.com/problems/koko-eating-bananas/","bb":{"x":445,"y":40,"w":116,"h":28}}

