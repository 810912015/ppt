{"ls":[{"s":"class Solution {\n    public int numSubarrayProductLessThanK(int[] \nnums, int k) {\n \n    }\n}","lang":"Java"},{"s":"class Solution(object):\n    def numSubarrayProductLessThanK(self, nums, k):\n        \"\"\"\n        :type nums: List[int]\n        :type k: int\n        :rtype: int\n        \"\"\"","lang":"Python"},{"s":"class Solution:\n    def numSubarrayProductLessThanK(self, nums: List\n[int], k: int) -> int:","lang":"Python3"},{"s":"int numSubarrayProductLessThanK(int* nums, int \nnumsSize, int k){\n \n}","lang":"C"},{"s":"public class Solution {\n    public int NumSubarrayProductLessThanK(int[] \nnums, int k) {\n \n    }\n}","lang":"C#"},{"s":"/**\n * @param {number[]} nums\n * @param {number} k\n * @return {number}\n */\nvar numSubarrayProductLessThanK = function(nums, k) \n{\n \n};","lang":"JavaScript"},{"s":"# @param {Integer[]} nums\n# @param {Integer} k\n# @return {Integer}\ndef num_subarray_product_less_than_k(nums, k)\n \nend","lang":"Ruby"},{"s":"# @param {Integer[]} nums\n# @param {Integer} k\n# @return {Integer}\ndef num_subarray_product_less_than_k(nums, k)\n \nend","lang":"Ruby"},{"s":"func numSubarrayProductLessThanK(nums []int, k int) \nint {\n \n}","lang":"Go"},{"s":"object Solution {\n    def numSubarrayProductLessThanK(nums: Array[Int]\n, k: Int): Int = {\n \n    }\n}","lang":"Scala"},{"s":"class Solution {\n    fun numSubarrayProductLessThanK(nums: IntArray, \nk: Int): Int {\n \n    }\n}","lang":"Kotlin"},{"s":"impl Solution {\n    pub fn num_subarray_product_less_than_k(nums: \nVec<i32>, k: i32) -> i32 {\n        \n    }\n}","lang":"Rust"},{"s":"class Solution {\n \n    /**\n     * @param Integer[] $nums\n     * @param Integer $k\n     * @return Integer\n     */\n    function numSubarrayProductLessThanK($nums, $k) \n{\n        \n    }\n}","lang":"PHP"},{"s":"class Solution {\n \n    /**\n     * @param Integer[] $nums\n     * @param Integer $k\n     * @return Integer\n     */\n    function numSubarrayProductLessThanK($nums, $k) \n{\n        \n    }\n}","lang":"PHP"}],"page":"713/1581","h":"713. 乘积小于K的子数组","d":"<div class=\"notranslate\"><p>给定一个正整数数组&nbsp;<code>nums</code>。</p>\n\n<p>找出该数组内乘积小于&nbsp;<code>k</code>&nbsp;的连续的子数组的个数。</p>\n\n<p><strong>示例 1:</strong></p>\n\n<pre><strong>输入:</strong> nums = [10,5,2,6], k = 100\n<strong>输出:</strong> 8\n<strong>解释:</strong> 8个乘积小于100的子数组分别为: [10], [5], [2], [6], [10,5], [5,2], [2,6], [5,2,6]。\n需要注意的是 [10,5,2] 并不是乘积小于100的子数组。\n</pre>\n\n<p><strong>说明:</strong></p>\n\n<ul>\n\t<li><code>0 &lt; nums.length &lt;= 50000</code></li>\n\t<li><code>0 &lt; nums[i] &lt; 1000</code></li>\n\t<li><code>0 &lt;= k &lt; 10^6</code></li>\n</ul>\n</div>","l":"中等","s":"# @param {Integer[]} nums\n# @param {Integer} k\n# @return {Integer}\ndef num_subarray_product_less_than_k(nums, k)\n \nend","lang":"Ruby","href":"https://leetcode-cn.com/problems/subarray-product-less-than-k/","bb":{"x":445,"y":40,"w":116,"h":28}}

