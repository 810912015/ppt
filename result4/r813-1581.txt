{"ls":[{"s":"class Solution {\n    public double largestSumOfAverages(int[] A, int \nK) {\n \n    }\n}","lang":"Java"},{"s":"class Solution(object):\n    def largestSumOfAverages(self, A, K):\n        \"\"\"\n        :type A: List[int]\n        :type K: int\n        :rtype: float\n        \"\"\"","lang":"Python"},{"s":"class Solution:\n    def largestSumOfAverages(self, A: List[int], K: \nint) -> float:","lang":"Python3"},{"s":"double largestSumOfAverages(int* A, int ASize, int \nK){\n \n}","lang":"C"},{"s":"public class Solution {\n    public double LargestSumOfAverages(int[] A, int \nK) {\n \n    }\n}","lang":"C#"},{"s":"/**\n * @param {number[]} A\n * @param {number} K\n * @return {number}\n */\nvar largestSumOfAverages = function(A, K) {\n \n};","lang":"JavaScript"},{"s":"# @param {Integer[]} a\n# @param {Integer} k\n# @return {Float}\ndef largest_sum_of_averages(a, k)\n \nend","lang":"Ruby"},{"s":"class Solution {\n    func largestSumOfAverages(_ A: [Int], _ K: Int) \n-> Double {\n        \n    }\n}","lang":"Swift"},{"s":"func largestSumOfAverages(A []int, K int) float64 {\n \n}","lang":"Go"},{"s":"object Solution {\n    def largestSumOfAverages(A: Array[Int], K: Int)\n: Double = {\n \n    }\n}","lang":"Scala"},{"s":"class Solution {\n    fun largestSumOfAverages(A: IntArray, K: Int): \nDouble {\n \n    }\n}","lang":"Kotlin"},{"s":"impl Solution {\n    pub fn largest_sum_of_averages(a: Vec<i32>, k: \ni32) -> f64 {\n        \n    }\n}","lang":"Rust"},{"s":"class Solution {\n \n    /**\n     * @param Integer[] $A\n     * @param Integer $K\n     * @return Float\n     */\n    function largestSumOfAverages($A, $K) {\n        \n    }\n}","lang":"PHP"},{"s":"class Solution {\n \n    /**\n     * @param Integer[] $A\n     * @param Integer $K\n     * @return Float\n     */\n    function largestSumOfAverages($A, $K) {\n        \n    }\n}","lang":"PHP"}],"page":"813/1581","h":"813. 最大平均值和的分组","d":"<div class=\"notranslate\"><p>我们将给定的数组&nbsp;<code>A</code>&nbsp;分成&nbsp;<code>K</code>&nbsp;个相邻的非空子数组 ，我们的分数由每个子数组内的平均值的总和构成。计算我们所能得到的最大分数是多少。</p>\n\n<p>注意我们必须使用 A 数组中的每一个数进行分组，并且分数不一定需要是整数。</p>\n\n<pre><strong>示例:</strong>\n<strong>输入:</strong> \nA = [9,1,2,3,9]\nK = 3\n<strong>输出:</strong> 20\n<strong>解释:</strong> \nA 的最优分组是[9], [1, 2, 3], [9]. 得到的分数是 9 + (1 + 2 + 3) / 3 + 9 = 20.\n我们也可以把 A 分成[9, 1], [2], [3, 9].\n这样的分组得到的分数为 5 + 2 + 6 = 13, 但不是最大值.\n</pre>\n\n<p><strong>说明: </strong></p>\n\n<ul>\n\t<li><code>1 &lt;= A.length &lt;= 100</code>.</li>\n\t<li><code>1 &lt;= A[i] &lt;= 10000</code>.</li>\n\t<li><code>1 &lt;= K &lt;= A.length</code>.</li>\n\t<li>答案误差在&nbsp;<code>10^-6</code>&nbsp;内被视为是正确的。</li>\n</ul>\n</div>","l":"中等","s":"# @param {Integer[]} a","lang":"Ruby","href":"https://leetcode-cn.com/problems/largest-sum-of-averages/","bb":{"x":445,"y":40,"w":116,"h":28}}

