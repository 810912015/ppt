{"ls":[{"s":"# @param {Integer[]} a\n# @return {Integer}\ndef subarray_bitwise_o_rs(a)\n \nend","lang":"Ruby"},{"s":"class Solution {\n    func subarrayBitwiseORs(_ A: [Int]) -> Int {\n        \n    }\n}","lang":"Swift"},{"s":"func subarrayBitwiseORs(A []int) int {\n \n}","lang":"Go"},{"s":"object Solution {\n    def subarrayBitwiseORs(A: Array[Int]): Int = {\n \n    }\n}","lang":"Scala"},{"s":"class Solution {\n    fun subarrayBitwiseORs(A: IntArray): Int {\n \n    }\n}","lang":"Kotlin"},{"s":"impl Solution {\n    pub fn subarray_bitwise_o_rs(a: Vec<i32>) -> \ni32 {\n        \n    }\n}","lang":"Rust"},{"s":"class Solution {\n    public int subarrayBitwiseORs(int[] A) {\n \n    }\n}","lang":"Java"},{"s":"class Solution(object):\n    def subarrayBitwiseORs(self, A):\n        \"\"\"\n        :type A: List[int]\n        :rtype: int\n        \"\"\"","lang":"Python"},{"s":"class Solution:\n    def subarrayBitwiseORs(self, A: List[int]) -> \nint:","lang":"Python3"},{"s":"int subarrayBitwiseORs(int* A, int ASize){\n \n}","lang":"C"},{"s":"public class Solution {\n    public int SubarrayBitwiseORs(int[] A) {\n \n    }\n}","lang":"C#"},{"s":"/**\n * @param {number[]} A\n * @return {number}\n */\nvar subarrayBitwiseORs = function(A) {\n \n};","lang":"JavaScript"},{"s":"# @param {Integer[]} a\n# @return {Integer}\ndef subarray_bitwise_o_rs(a)\n \nend","lang":"Ruby"},{"s":"# @param {Integer[]} a\n# @return {Integer}\ndef subarray_bitwise_o_rs(a)\n \nend","lang":"Ruby"}],"page":"898/1581","h":"898. 子数组按位或操作","d":"<div class=\"notranslate\"><p>我们有一个非负整数数组&nbsp;<code>A</code>。</p>\n\n<p>对于每个（连续的）子数组&nbsp;<code>B =&nbsp;[A[i], A[i+1], ..., A[j]]</code> （&nbsp;<code>i &lt;= j</code>），我们对&nbsp;<code>B</code>&nbsp;中的每个元素进行按位或操作，获得结果&nbsp;<code>A[i] | A[i+1] | ... | A[j]</code>。</p>\n\n<p>返回可能结果的数量。 （多次出现的结果在最终答案中仅计算一次。）</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre><strong>输入：</strong>[0]\n<strong>输出：</strong>1\n<strong>解释：</strong>\n只有一个可能的结果 0 。\n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre><strong>输入：</strong>[1,1,2]\n<strong>输出：</strong>3\n<strong>解释：</strong>\n可能的子数组为 [1]，[1]，[2]，[1, 1]，[1, 2]，[1, 1, 2]。\n产生的结果为 1，1，2，1，3，3 。\n有三个唯一值，所以答案是 3 。\n</pre>\n\n<p><strong>示例&nbsp;3：</strong></p>\n\n<pre><strong>输入：</strong>[1,2,4]\n<strong>输出：</strong>6\n<strong>解释：</strong>\n可能的结果是 1，2，3，4，6，以及 7 。\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= A.length &lt;= 50000</code></li>\n\t<li><code>0 &lt;= A[i] &lt;= 10^9</code></li>\n</ol>\n</div>","l":"中等","s":"class Solution {","lang":"PHP","href":"https://leetcode-cn.com/problems/bitwise-ors-of-subarrays/","bb":{"x":445,"y":40,"w":116,"h":28}}

