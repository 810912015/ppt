{"ls":[{"s":"# @param {String} s\n# @param {String} t\n# @return {Boolean}\ndef is_subsequence(s, t)\n \nend","lang":"Ruby"},{"s":"class Solution {\n    func isSubsequence(_ s: String, _ t: String) -> \nBool {\n        \n    }\n}","lang":"Swift"},{"s":"func isSubsequence(s string, t string) bool {\n \n}","lang":"Go"},{"s":"object Solution {\n    def isSubsequence(s: String, t: String): \nBoolean = {\n \n    }\n}","lang":"Scala"},{"s":"class Solution {\n    fun isSubsequence(s: String, t: String): \nBoolean {\n \n    }\n}","lang":"Kotlin"},{"s":"impl Solution {\n    pub fn is_subsequence(s: String, t: String) -> \nbool {\n        \n    }\n}","lang":"Rust"},{"s":"class Solution {\n    public boolean isSubsequence(String s, String t)\n {\n \n    }\n}","lang":"Java"},{"s":"class Solution(object):\n    def isSubsequence(self, s, t):\n        \"\"\"\n        :type s: str\n        :type t: str\n        :rtype: bool\n        \"\"\"","lang":"Python"},{"s":"class Solution:\n    def isSubsequence(self, s: str, t: str) -> bool:","lang":"Python3"},{"s":"bool isSubsequence(char * s, char * t){\n \n}","lang":"C"},{"s":"public class Solution {\n    public bool IsSubsequence(string s, string t) {\n \n    }\n}","lang":"C#"},{"s":"/**\n * @param {string} s\n * @param {string} t\n * @return {boolean}\n */\nvar isSubsequence = function(s, t) {\n \n};","lang":"JavaScript"},{"s":"# @param {String} s\n# @param {String} t\n# @return {Boolean}\ndef is_subsequence(s, t)\n \nend","lang":"Ruby"},{"s":"# @param {String} s\n# @param {String} t\n# @return {Boolean}\ndef is_subsequence(s, t)\n \nend","lang":"Ruby"}],"page":"392/1581","h":"392. 判断子序列","d":"<div class=\"notranslate\"><p>给定字符串 <strong>s</strong> 和 <strong>t</strong> ，判断 <strong>s</strong> 是否为 <strong>t</strong> 的子序列。</p>\n\n<p>你可以认为 <strong>s</strong> 和 <strong>t</strong> 中仅包含英文小写字母。字符串 <strong>t</strong> 可能会很长（长度 ~= 500,000），而 <strong>s</strong> 是个短字符串（长度 &lt;=100）。</p>\n\n<p>字符串的一个子序列是原始字符串删除一些（也可以不删除）字符而不改变剩余字符相对位置形成的新字符串。（例如，<code>\"ace\"</code>是<code>\"abcde\"</code>的一个子序列，而<code>\"aec\"</code>不是）。</p>\n\n<p><strong>示例&nbsp;1:</strong><br>\n<strong>s</strong> = <code>\"abc\"</code>, <strong>t</strong> = <code>\"ahbgdc\"</code></p>\n\n<p>返回&nbsp;<code>true</code>.</p>\n\n<p><strong>示例&nbsp;2:</strong><br>\n<strong>s</strong> = <code>\"axc\"</code>, <strong>t</strong> = <code>\"ahbgdc\"</code></p>\n\n<p>返回&nbsp;<code>false</code>.</p>\n\n<p><strong>后续挑战</strong> <strong>:</strong></p>\n\n<p>如果有大量输入的 S，称作S1, S2, ... , Sk 其中 k &gt;= 10亿，你需要依次检查它们是否为 T 的子序列。在这种情况下，你会怎样改变代码？</p>\n\n<p><strong>致谢:</strong></p>\n\n<p>特别感谢<strong> </strong><a href=\"https://leetcode.com/pbrother/\">@pbrother&nbsp;</a>添加此问题并且创建所有测试用例。</p>\n</div>","l":"简单","s":"class Solution {\n \n    /**\n     * @param String $s\n     * @param String $t\n     * @return Boolean\n     */\n    function isSubsequence($s, $t) {\n        \n    }\n}","lang":"PHP","href":"https://leetcode-cn.com/problems/is-subsequence/","bb":{"x":445,"y":40,"w":116,"h":28}}

