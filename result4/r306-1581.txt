{"ls":[{"s":"# @param {String} num\n# @return {Boolean}\ndef is_additive_number(num)\n \nend","lang":"Ruby"},{"s":"class Solution {\n    func isAdditiveNumber(_ num: String) -> Bool {\n        \n    }\n}","lang":"Swift"},{"s":"func isAdditiveNumber(num string) bool {\n \n}","lang":"Go"},{"s":"object Solution {\n    def isAdditiveNumber(num: String): Boolean = {\n \n    }\n}","lang":"Scala"},{"s":"class Solution {\n    fun isAdditiveNumber(num: String): Boolean {\n \n    }\n}","lang":"Kotlin"},{"s":"impl Solution {\n    pub fn is_additive_number(num: String) -> bool {\n        \n    }\n}","lang":"Rust"},{"s":"class Solution {\n    public boolean isAdditiveNumber(String num) {\n \n    }\n}","lang":"Java"},{"s":"class Solution(object):\n    def isAdditiveNumber(self, num):\n        \"\"\"\n        :type num: str\n        :rtype: bool\n        \"\"\"","lang":"Python"},{"s":"class Solution:\n    def isAdditiveNumber(self, num: str) -> bool:","lang":"Python3"},{"s":"bool isAdditiveNumber(char * num){\n \n}","lang":"C"},{"s":"public class Solution {\n    public bool IsAdditiveNumber(string num) {\n \n    }\n}","lang":"C#"},{"s":"/**\n * @param {string} num\n * @return {boolean}\n */\nvar isAdditiveNumber = function(num) {\n \n};","lang":"JavaScript"},{"s":"# @param {String} num\n# @return {Boolean}\ndef is_additive_number(num)\n \nend","lang":"Ruby"},{"s":"# @param {String} num\n# @return {Boolean}\ndef is_additive_number(num)\n \nend","lang":"Ruby"}],"page":"306/1581","h":"306. 累加数","d":"<div class=\"notranslate\"><p>累加数是一个字符串，组成它的数字可以形成累加序列。</p>\n\n<p>一个有效的累加序列必须<strong>至少</strong>包含 3 个数。除了最开始的两个数以外，字符串中的其他数都等于它之前两个数相加的和。</p>\n\n<p>给定一个只包含数字&nbsp;<code>'0'-'9'</code>&nbsp;的字符串，编写一个算法来判断给定输入是否是累加数。</p>\n\n<p><strong>说明:&nbsp;</strong>累加序列里的数不会以 0 开头，所以不会出现&nbsp;<code>1, 2, 03</code> 或者&nbsp;<code>1, 02, 3</code>&nbsp;的情况。</p>\n\n<p><strong>示例 1:</strong></p>\n\n<pre><strong>输入:</strong> <code>\"112358\"</code>\n<strong>输出:</strong> true \n<strong>解释: </strong>累加序列为: <code>1, 1, 2, 3, 5, 8 </code>。1 + 1 = 2, 1 + 2 = 3, 2 + 3 = 5, 3 + 5 = 8\n</pre>\n\n<p><strong>示例&nbsp;2:</strong></p>\n\n<pre><strong>输入:</strong> <code>\"199100199\"</code>\n<strong>输出:</strong> true \n<strong>解释: </strong>累加序列为: <code>1, 99, 100, 199。</code>1 + 99 = 100, 99 + 100 = 199</pre>\n\n<p><strong>进阶:</strong><br>\n你如何处理一个溢出的过大的整数输入?</p>\n</div>","l":"中等","s":"class Solution {","lang":"PHP","href":"https://leetcode-cn.com/problems/additive-number/","bb":{"x":445,"y":40,"w":116,"h":28}}

