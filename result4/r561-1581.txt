{"ls":[{"s":"class Solution {\n    public int arrayPairSum(int[] nums) {\n \n    }\n}","lang":"Java"},{"s":"class Solution(object):\n    def arrayPairSum(self, nums):\n        \"\"\"\n        :type nums: List[int]\n        :rtype: int\n        \"\"\"","lang":"Python"},{"s":"class Solution:\n    def arrayPairSum(self, nums: List[int]) -> int:","lang":"Python3"},{"s":"int arrayPairSum(int* nums, int numsSize){\n \n}","lang":"C"},{"s":"public class Solution {\n    public int ArrayPairSum(int[] nums) {\n \n    }\n}","lang":"C#"},{"s":"/**\n * @param {number[]} nums\n * @return {number}\n */\nvar arrayPairSum = function(nums) {\n \n};","lang":"JavaScript"},{"s":"# @param {Integer[]} nums\n# @return {Integer}\ndef array_pair_sum(nums)\n \nend","lang":"Ruby"},{"s":"class Solution {\n    func arrayPairSum(_ nums: [Int]) -> Int {\n        \n    }\n}","lang":"Swift"},{"s":"func arrayPairSum(nums []int) int {\n \n}","lang":"Go"},{"s":"object Solution {\n    def arrayPairSum(nums: Array[Int]): Int = {\n \n    }\n}","lang":"Scala"},{"s":"class Solution {\n    fun arrayPairSum(nums: IntArray): Int {\n \n    }\n}","lang":"Kotlin"},{"s":"impl Solution {\n    pub fn array_pair_sum(nums: Vec<i32>) -> i32 {\n        \n    }\n}","lang":"Rust"},{"s":"class Solution {\n \n    /**\n     * @param Integer[] $nums\n     * @return Integer\n     */\n    function arrayPairSum($nums) {\n        \n    }\n}","lang":"PHP"},{"s":"class Solution {\n \n    /**\n     * @param Integer[] $nums\n     * @return Integer\n     */\n    function arrayPairSum($nums) {\n        \n    }\n}","lang":"PHP"}],"page":"561/1581","h":"561. 数组拆分 I","d":"<div class=\"notranslate\"><p>给定长度为&nbsp;<strong>2n&nbsp;</strong>的数组, 你的任务是将这些数分成&nbsp;<strong>n </strong>对, 例如 (a<sub>1</sub>, b<sub>1</sub>), (a<sub>2</sub>, b<sub>2</sub>), ..., (a<sub>n</sub>, b<sub>n</sub>) ，使得从1 到&nbsp;n 的 min(a<sub>i</sub>, b<sub>i</sub>) 总和最大。</p>\n\n<p><strong>示例 1:</strong></p>\n\n<pre><strong>输入:</strong> [1,4,3,2]\n\n<strong>输出:</strong> 4\n<strong>解释:</strong> n 等于 2, 最大总和为 4 = min(1, 2) + min(3, 4).\n</pre>\n\n<p><strong>提示:</strong></p>\n\n<ol>\n\t<li><strong>n</strong>&nbsp;是正整数,范围在 [1, 10000].</li>\n\t<li>数组中的元素范围在 [-10000, 10000].</li>\n</ol>\n</div>","l":"简单","s":"# @param {Integer[]} nums","lang":"Ruby","href":"https://leetcode-cn.com/problems/array-partition-i/","bb":{"x":445,"y":40,"w":116,"h":28}}

