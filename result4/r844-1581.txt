{"ls":[{"s":"class Solution {\n    public boolean backspaceCompare(String S, \nString T) {\n \n    }\n}","lang":"Java"},{"s":"class Solution(object):\n    def backspaceCompare(self, S, T):\n        \"\"\"\n        :type S: str\n        :type T: str\n        :rtype: bool\n        \"\"\"","lang":"Python"},{"s":"class Solution:\n    def backspaceCompare(self, S: str, T: str) -> \nbool:","lang":"Python3"},{"s":"bool backspaceCompare(char * S, char * T){\n \n}","lang":"C"},{"s":"public class Solution {\n    public bool BackspaceCompare(string S, string T)\n {\n \n    }\n}","lang":"C#"},{"s":"/**\n * @param {string} S\n * @param {string} T\n * @return {boolean}\n */\nvar backspaceCompare = function(S, T) {\n \n};","lang":"JavaScript"},{"s":"# @param {String} s\n# @param {String} t\n# @return {Boolean}\ndef backspace_compare(s, t)\n \nend","lang":"Ruby"},{"s":"class Solution {\n    func backspaceCompare(_ S: String, _ T: String) \n-> Bool {\n        \n    }\n}","lang":"Swift"},{"s":"func backspaceCompare(S string, T string) bool {\n \n}","lang":"Go"},{"s":"object Solution {\n    def backspaceCompare(S: String, T: String): \nBoolean = {\n \n    }\n}","lang":"Scala"},{"s":"class Solution {\n    fun backspaceCompare(S: String, T: String): \nBoolean {\n \n    }\n}","lang":"Kotlin"},{"s":"impl Solution {\n    pub fn backspace_compare(s: String, t: String) \n-> bool {\n        \n    }\n}","lang":"Rust"},{"s":"class Solution {\n \n    /**\n     * @param String $S\n     * @param String $T\n     * @return Boolean\n     */\n    function backspaceCompare($S, $T) {\n        \n    }\n}","lang":"PHP"},{"s":"class Solution {\n \n    /**\n     * @param String $S\n     * @param String $T\n     * @return Boolean\n     */\n    function backspaceCompare($S, $T) {\n        \n    }\n}","lang":"PHP"}],"page":"844/1581","h":"844. 比较含退格的字符串","d":"<div class=\"notranslate\"><p>给定 <code>S</code> 和 <code>T</code> 两个字符串，当它们分别被输入到空白的文本编辑器后，判断二者是否相等，并返回结果。 <code>#</code> 代表退格字符。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre><strong>输入：</strong>S = \"ab#c\", T = \"ad#c\"\n<strong>输出：</strong>true\n<strong>解释：</strong>S 和 T 都会变成 “ac”。\n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre><strong>输入：</strong>S = \"ab##\", T = \"c#d#\"\n<strong>输出：</strong>true\n<strong>解释：</strong>S 和 T 都会变成 “”。\n</pre>\n\n<p><strong>示例 3：</strong></p>\n\n<pre><strong>输入：</strong>S = \"a##c\", T = \"#a#c\"\n<strong>输出：</strong>true\n<strong>解释：</strong>S 和 T 都会变成 “c”。\n</pre>\n\n<p><strong>示例 4：</strong></p>\n\n<pre><strong>输入：</strong>S = \"a#c\", T = \"b\"\n<strong>输出：</strong>false\n<strong>解释：</strong>S 会变成 “c”，但 T 仍然是 “b”。</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= S.length &lt;= 200</code></li>\n\t<li><code>1 &lt;= T.length &lt;= 200</code></li>\n\t<li><code>S</code> 和 <code>T</code> 只含有小写字母以及字符 <code>'#'</code>。</li>\n</ol>\n\n<p>&nbsp;</p>\n</div>","l":"简单","s":"# @param {String} s","lang":"Ruby","href":"https://leetcode-cn.com/problems/backspace-string-compare/","bb":{"x":445,"y":40,"w":116,"h":28}}

