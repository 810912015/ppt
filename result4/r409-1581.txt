{"ls":[{"s":"# @param {String} s\n# @return {Integer}\ndef longest_palindrome(s)\n \nend","lang":"Ruby"},{"s":"class Solution {\n    func longestPalindrome(_ s: String) -> Int {\n        \n    }\n}","lang":"Swift"},{"s":"func longestPalindrome(s string) int {\n \n}","lang":"Go"},{"s":"object Solution {\n    def longestPalindrome(s: String): Int = {\n \n    }\n}","lang":"Scala"},{"s":"class Solution {\n    fun longestPalindrome(s: String): Int {\n \n    }\n}","lang":"Kotlin"},{"s":"impl Solution {\n    pub fn longest_palindrome(s: String) -> i32 {\n        \n    }\n}","lang":"Rust"},{"s":"class Solution {\n    public int longestPalindrome(String s) {\n \n    }\n}","lang":"Java"},{"s":"class Solution(object):\n    def longestPalindrome(self, s):\n        \"\"\"\n        :type s: str\n        :rtype: int\n        \"\"\"","lang":"Python"},{"s":"class Solution:\n    def longestPalindrome(self, s: str) -> int:","lang":"Python3"},{"s":"int longestPalindrome(char * s){\n \n}","lang":"C"},{"s":"public class Solution {\n    public int LongestPalindrome(string s) {\n \n    }\n}","lang":"C#"},{"s":"/**\n * @param {string} s\n * @return {number}\n */\nvar longestPalindrome = function(s) {\n \n};","lang":"JavaScript"},{"s":"# @param {String} s\n# @return {Integer}\ndef longest_palindrome(s)\n \nend","lang":"Ruby"},{"s":"# @param {String} s\n# @return {Integer}\ndef longest_palindrome(s)\n \nend","lang":"Ruby"}],"page":"409/1581","h":"409. 最长回文串","d":"<div class=\"notranslate\"><p>给定一个包含大写字母和小写字母的字符串，找到通过这些字母构造成的最长的回文串。</p>\n\n<p>在构造过程中，请注意区分大小写。比如&nbsp;<code>\"Aa\"</code>&nbsp;不能当做一个回文字符串。</p>\n\n<p><strong>注意:</strong><br>\n假设字符串的长度不会超过 1010。</p>\n\n<p><strong>示例 1: </strong></p>\n\n<pre>输入:\n\"abccccdd\"\n\n输出:\n7\n\n解释:\n我们可以构造的最长的回文串是\"dccaccd\", 它的长度是 7。\n</pre>\n</div>","l":"简单","s":"class Solution {","lang":"PHP","href":"https://leetcode-cn.com/problems/longest-palindrome/","bb":{"x":445,"y":40,"w":116,"h":28}}

