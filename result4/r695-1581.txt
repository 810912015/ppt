{"ls":[{"s":"# @param {Integer[][]} grid\n# @return {Integer}\ndef max_area_of_island(grid)\n \nend","lang":"Ruby"},{"s":"class Solution {\n    func maxAreaOfIsland(_ grid: [[Int]]) -> Int {\n        \n    }\n}","lang":"Swift"},{"s":"func maxAreaOfIsland(grid [][]int) int {\n \n}","lang":"Go"},{"s":"object Solution {\n    def maxAreaOfIsland(grid: Array[Array[Int]]): \nInt = {\n \n    }\n}","lang":"Scala"},{"s":"class Solution {\n    fun maxAreaOfIsland(grid: Array<IntArray>): Int \n{\n \n    }\n}","lang":"Kotlin"},{"s":"impl Solution {\n    pub fn max_area_of_island(grid: Vec<Vec<i32>>) \n-> i32 {\n        \n    }\n}","lang":"Rust"},{"s":"impl Solution·{\n····pub·fn·max_area_of_island(grid:·Vec<Vec<i32>>)·\n->·i32·{\n········\n····}\n}","lang":"Rust"},{"s":"func maxAreaOfIsland(grid [][]int) int {\n \n}","lang":"Go"},{"s":"object Solution {\n    def maxAreaOfIsland(grid: Array[Array[Int]]): \nInt = {\n \n    }\n}","lang":"Scala"},{"s":"class Solution {\n    fun maxAreaOfIsland(grid: Array<IntArray>): Int \n{\n \n    }\n}","lang":"Kotlin"},{"s":"impl Solution {\n    pub fn max_area_of_island(grid: Vec<Vec<i32>>) \n-> i32 {\n        \n    }\n}","lang":"Rust"},{"s":"impl Solution {\n    pub fn max_area_of_island(grid: Vec<Vec<i32>>) \n-> i32 {\n        \n    }\n}","lang":"Rust"},{"s":"class Solution {\n \n    /**\n     * @param Integer[][] $grid\n     * @return Integer\n     */\n    function maxAreaOfIsland($grid) {\n        \n    }\n}","lang":"PHP"},{"s":"class Solution {\n \n    /**\n     * @param Integer[][] $grid\n     * @return Integer\n     */\n    function maxAreaOfIsland($grid) {\n        \n    }\n}","lang":"PHP"}],"page":"695/1581","h":"695. 岛屿的最大面积","d":"<div class=\"notranslate\"><p>给定一个包含了一些 <code>0</code> 和 <code>1</code> 的非空二维数组&nbsp;<code>grid</code> 。</p>\n\n<p>一个&nbsp;<strong>岛屿</strong>&nbsp;是由一些相邻的&nbsp;<code>1</code>&nbsp;(代表土地) 构成的组合，这里的「相邻」要求两个 <code>1</code> 必须在水平或者竖直方向上相邻。你可以假设&nbsp;<code>grid</code> 的四个边缘都被 <code>0</code>（代表水）包围着。</p>\n\n<p>找到给定的二维数组中最大的岛屿面积。(如果没有岛屿，则返回面积为 <code>0</code> 。)</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1:</strong></p>\n\n<pre>[[0,0,1,0,0,0,0,1,0,0,0,0,0],\n [0,0,0,0,0,0,0,1,1,1,0,0,0],\n [0,1,1,0,1,0,0,0,0,0,0,0,0],\n [0,1,0,0,1,1,0,0,<strong>1</strong>,0,<strong>1</strong>,0,0],\n [0,1,0,0,1,1,0,0,<strong>1</strong>,<strong>1</strong>,<strong>1</strong>,0,0],\n [0,0,0,0,0,0,0,0,0,0,<strong>1</strong>,0,0],\n [0,0,0,0,0,0,0,1,1,1,0,0,0],\n [0,0,0,0,0,0,0,1,1,0,0,0,0]]\n</pre>\n\n<p>对于上面这个给定矩阵应返回&nbsp;<code>6</code>。注意答案不应该是 <code>11</code> ，因为岛屿只能包含水平或垂直的四个方向的 <code>1</code> 。</p>\n\n<p><strong>示例 2:</strong></p>\n\n<pre>[[0,0,0,0,0,0,0,0]]</pre>\n\n<p>对于上面这个给定的矩阵, 返回&nbsp;<code>0</code>。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>注意:&nbsp;</strong>给定的矩阵<code>grid</code>&nbsp;的长度和宽度都不超过 50。</p>\n</div>","l":"中等","s":"class Solution {","lang":"PHP","href":"https://leetcode-cn.com/problems/max-area-of-island/","bb":{"x":445,"y":40,"w":116,"h":28}}

