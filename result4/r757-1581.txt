{"ls":[{"s":"# @param {Integer[][]} intervals\n# @return {Integer}\ndef intersection_size_two(intervals)\n \nend","lang":"Ruby"},{"s":"class Solution {\n    func intersectionSizeTwo(_ intervals: [[Int]]) \n-> Int {\n        \n    }\n}","lang":"Swift"},{"s":"func intersectionSizeTwo(intervals [][]int) int {\n \n}","lang":"Go"},{"s":"object Solution {\n    def intersectionSizeTwo(intervals: Array[Array\n[Int]]): Int = {\n \n    }\n}","lang":"Scala"},{"s":"class Solution {\n    fun intersectionSizeTwo(intervals: \nArray<IntArray>): Int {\n \n    }\n}","lang":"Kotlin"},{"s":"impl Solution {\n    pub fn intersection_size_two(intervals: \nVec<Vec<i32>>) -> i32 {\n        \n    }\n}","lang":"Rust"},{"s":"class Solution {\n    public int intersectionSizeTwo(int[][] \nintervals) {\n \n    }\n}","lang":"Java"},{"s":"class Solution(object):\n    def intersectionSizeTwo(self, intervals):\n        \"\"\"\n        :type intervals: List[List[int]]\n        :rtype: int\n        \"\"\"","lang":"Python"},{"s":"class Solution:\n    def intersectionSizeTwo(self, intervals: List\n[List[int]]) -> int:","lang":"Python3"},{"s":"int intersectionSizeTwo(int** intervals, int \nintervalsSize, int* intervalsColSize){\n \n}","lang":"C"},{"s":"public class Solution {\n    public int IntersectionSizeTwo(int[][] \nintervals) {\n \n    }\n}","lang":"C#"},{"s":"/**\n * @param {number[][]} intervals\n * @return {number}\n */\nvar intersectionSizeTwo = function(intervals) {\n \n};","lang":"JavaScript"},{"s":"# @param {Integer[][]} intervals\n# @return {Integer}\ndef intersection_size_two(intervals)\n \nend","lang":"Ruby"},{"s":"# @param {Integer[][]} intervals\n# @return {Integer}\ndef intersection_size_two(intervals)\n \nend","lang":"Ruby"}],"page":"757/1581","h":"757.  设置交集大小至少为2","d":"<div class=\"notranslate\"><p>一个整数区间&nbsp;<code>[a, b]</code>&nbsp;&nbsp;(&nbsp;<code>a &lt; b</code>&nbsp;) 代表着从&nbsp;<code>a</code>&nbsp;到&nbsp;<code>b</code>&nbsp;的所有连续整数，包括&nbsp;<code>a</code>&nbsp;和&nbsp;<code>b</code>。</p>\n\n<p>给你一组整数区间<code>intervals</code>，请找到一个最小的集合 S，使得 S 里的元素与区间<code>intervals</code>中的每一个整数区间都至少有2个元素相交。</p>\n\n<p>输出这个最小集合S的大小。</p>\n\n<p><strong>示例 1:</strong></p>\n\n<pre><strong>输入:</strong> intervals = [[1, 3], [1, 4], [2, 5], [3, 5]]\n<strong>输出:</strong> 3\n<strong>解释:</strong>\n考虑集合 S = {2, 3, 4}. S与intervals中的四个区间都有至少2个相交的元素。\n且这是S最小的情况，故我们输出3。\n</pre>\n\n<p><strong>示例 2:</strong></p>\n\n<pre><strong>输入:</strong> intervals = [[1, 2], [2, 3], [2, 4], [4, 5]]\n<strong>输出:</strong> 5\n<strong>解释:</strong>\n最小的集合S = {1, 2, 3, 4, 5}.\n</pre>\n\n<p><strong>注意:</strong></p>\n\n<ol>\n\t<li><code>intervals</code>&nbsp;的长度范围为<code>[1, 3000]</code>。</li>\n\t<li><code>intervals[i]</code>&nbsp;长度为&nbsp;<code>2</code>，分别代表左、右边界。</li>\n\t<li><code>intervals[i][j]</code> 的值是&nbsp;<code>[0, 10^8]</code>范围内的整数。</li>\n</ol>\n</div>","l":"困难","s":"class Solution {\n \n    /**\n     * @param Integer[][] $intervals\n     * @return Integer\n     */\n    function intersectionSizeTwo($intervals) {\n        \n    }\n}","lang":"PHP","href":"https://leetcode-cn.com/problems/set-intersection-size-at-least-two/","bb":{"x":445,"y":40,"w":116,"h":28}}

