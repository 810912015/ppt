{"ls":[{"s":"class Solution {\n    public int[] singleNumber(int[] nums) {\n \n    }\n}","lang":"Java"},{"s":"class Solution(object):\n    def singleNumber(self, nums):\n        \"\"\"\n        :type nums: List[int]\n        :rtype: List[int]\n        \"\"\"","lang":"Python"},{"s":"class Solution:\n    def singleNumber(self, nums: List[int]) -> List\n[int]:","lang":"Python3"},{"s":"/**\n * Note: The returned array must be malloced, \nassume caller calls free().\n */\nint* singleNumber(int* nums, int numsSize, int* \nreturnSize){\n \n}","lang":"C"},{"s":"public class Solution {\n    public int[] SingleNumber(int[] nums) {\n \n    }\n}","lang":"C#"},{"s":"/**\n * @param {number[]} nums\n * @return {number[]}\n */\nvar singleNumber = function(nums) {\n \n};","lang":"JavaScript"},{"s":"# @param {Integer[]} nums\n# @return {Integer[]}\ndef single_number(nums)\n \nend","lang":"Ruby"},{"s":"class Solution {\n    func singleNumber(_ nums: [Int]) -> [Int] {\n \n    }\n}","lang":"Swift"},{"s":"func singleNumber(nums []int) []int {\n \n}","lang":"Go"},{"s":"object Solution {\n    def singleNumber(nums: Array[Int]): Array[Int] \n= {\n \n    }\n}","lang":"Scala"},{"s":"class Solution {\n    fun singleNumber(nums: IntArray): IntArray {\n \n    }\n}","lang":"Kotlin"},{"s":"impl Solution {\n    pub fn single_number(nums: Vec<i32>) -> \nVec<i32> {\n \n    }\n}","lang":"Rust"},{"s":"class Solution {\n \n    /**\n     * @param Integer[] $nums\n     * @return Integer[]\n     */\n    function singleNumber($nums) {\n \n    }\n}","lang":"PHP"},{"s":"class Solution {\n \n    /**\n     * @param Integer[] $nums\n     * @return Integer[]\n     */\n    function singleNumber($nums) {\n \n    }\n}","lang":"PHP"}],"page":"260/1581","h":"260. 只出现一次的数字 III","d":"<div class=\"notranslate\"><p>给定一个整数数组&nbsp;<code>nums</code>，其中恰好有两个元素只出现一次，其余所有元素均出现两次。 找出只出现一次的那两个元素。</p>\n\n<p><strong>示例 :</strong></p>\n\n<pre><strong>输入:</strong> <code>[1,2,1,3,2,5]</code>\n<strong>输出:</strong> <code>[3,5]</code></pre>\n\n<p><strong>注意：</strong></p>\n\n<ol>\n\t<li>结果输出的顺序并不重要，对于上面的例子，&nbsp;<code>[5, 3]</code>&nbsp;也是正确答案。</li>\n\t<li>你的算法应该具有线性时间复杂度。你能否仅使用常数空间复杂度来实现？</li>\n</ol>\n</div>","l":"中等","s":"# @param {Integer[]} nums\n# @return {Integer[]}\ndef single_number(nums)\n \nend","lang":"Ruby","href":"https://leetcode-cn.com/problems/single-number-iii/","bb":{"x":445,"y":40,"w":116,"h":28}}

