{"ls":[{"s":"class Solution {\n    public int findMin(int[] nums) {\n \n    }\n}","lang":"Java"},{"s":"class Solution(object):\n    def findMin(self, nums):\n        \"\"\"\n        :type nums: List[int]\n        :rtype: int\n        \"\"\"","lang":"Python"},{"s":"class Solution:\n    def findMin(self, nums: List[int]) -> int:","lang":"Python3"},{"s":"int findMin(int* nums, int numsSize){\n \n}","lang":"C"},{"s":"public class Solution {\n    public int FindMin(int[] nums) {\n \n    }\n}","lang":"C#"},{"s":"/**\n * @param {number[]} nums\n * @return {number}\n */\nvar findMin = function(nums) {\n \n};","lang":"JavaScript"},{"s":"# @param {Integer[]} nums\n# @return {Integer}\ndef find_min(nums)\n \nend","lang":"Ruby"},{"s":"class Solution {\n    func findMin(_ nums: [Int]) -> Int {\n \n    }\n}","lang":"Swift"},{"s":"func findMin(nums []int) int {\n \n}","lang":"Go"},{"s":"object Solution {\n    def findMin(nums: Array[Int]): Int = {\n \n    }\n}","lang":"Scala"},{"s":"class Solution {\n    fun findMin(nums: IntArray): Int {\n \n    }\n}","lang":"Kotlin"},{"s":"impl Solution {\n    pub fn find_min(nums: Vec<i32>) -> i32 {\n \n    }\n}","lang":"Rust"},{"s":"class Solution {\n \n    /**\n     * @param Integer[] $nums\n     * @return Integer\n     */\n    function findMin($nums) {\n \n    }\n}","lang":"PHP"},{"s":"class Solution {\n \n    /**\n     * @param Integer[] $nums\n     * @return Integer\n     */\n    function findMin($nums) {\n \n    }\n}","lang":"PHP"}],"page":"153/1581","h":"153. 寻找旋转排序数组中的最小值","d":"<div class=\"notranslate\"><p>假设按照升序排序的数组在预先未知的某个点上进行了旋转。</p>\n\n<p>( 例如，数组&nbsp;<code>[0,1,2,4,5,6,7]</code> <strong> </strong>可能变为&nbsp;<code>[4,5,6,7,0,1,2]</code>&nbsp;)。</p>\n\n<p>请找出其中最小的元素。</p>\n\n<p>你可以假设数组中不存在重复元素。</p>\n\n<p><strong>示例 1:</strong></p>\n\n<pre><strong>输入:</strong> [3,4,5,1,2]\n<strong>输出:</strong> 1</pre>\n\n<p><strong>示例 2:</strong></p>\n\n<pre><strong>输入:</strong> [4,5,6,7,0,1,2]\n<strong>输出:</strong> 0</pre>\n</div>","l":"中等","s":"# @param {Integer[]} nums\n# @return {Integer}\ndef find_min(nums)\n \nend","lang":"Ruby","href":"https://leetcode-cn.com/problems/find-minimum-in-rotated-sorted-array/","bb":{"x":445,"y":40,"w":116,"h":28}}

