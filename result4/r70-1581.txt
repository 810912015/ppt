{"ls":[{"s":"# @param {Integer} n\n# @return {Integer}\ndef climb_stairs(n)\n \nend","lang":"Ruby"},{"s":"class Solution {\n    func climbStairs(_ n: Int) -> Int {\n        \n    }\n}","lang":"Swift"},{"s":"func climbStairs(n int) int {\n \n}","lang":"Go"},{"s":"object Solution {\n    def climbStairs(n: Int): Int = {\n \n    }\n}","lang":"Scala"},{"s":"class Solution {\n    fun climbStairs(n: Int): Int {\n \n    }\n}","lang":"Kotlin"},{"s":"impl Solution {\n    pub fn climb_stairs(n: i32) -> i32 {\n        \n    }\n}","lang":"Rust"},{"s":"class Solution {\n    public int climbStairs(int n) {\n \n    }\n}","lang":"Java"},{"s":"class Solution(object):\n    def climbStairs(self, n):\n        \"\"\"\n        :type n: int\n        :rtype: int\n        \"\"\"","lang":"Python"},{"s":"class Solution:\n    def climbStairs(self, n: int) -> int:","lang":"Python3"},{"s":"int climbStairs(int n){\n \n}","lang":"C"},{"s":"public class Solution {\n    public int ClimbStairs(int n) {\n \n    }\n}","lang":"C#"},{"s":"/**\n * @param {number} n\n * @return {number}\n */\nvar climbStairs = function(n) {\n \n};","lang":"JavaScript"},{"s":"# @param {Integer} n\n# @return {Integer}\ndef climb_stairs(n)\n \nend","lang":"Ruby"},{"s":"# @param {Integer} n\n# @return {Integer}\ndef climb_stairs(n)\n \nend","lang":"Ruby"}],"page":"70/1581","h":"70. 爬楼梯","d":"<div class=\"notranslate\"><p>假设你正在爬楼梯。需要 <em>n</em>&nbsp;阶你才能到达楼顶。</p>\n\n<p>每次你可以爬 1 或 2 个台阶。你有多少种不同的方法可以爬到楼顶呢？</p>\n\n<p><strong>注意：</strong>给定 <em>n</em> 是一个正整数。</p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre><strong>输入：</strong> 2\n<strong>输出：</strong> 2\n<strong>解释：</strong> 有两种方法可以爬到楼顶。\n1.  1 阶 + 1 阶\n2.  2 阶</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre><strong>输入：</strong> 3\n<strong>输出：</strong> 3\n<strong>解释：</strong> 有三种方法可以爬到楼顶。\n1.  1 阶 + 1 阶 + 1 阶\n2.  1 阶 + 2 阶\n3.  2 阶 + 1 阶\n</pre>\n</div>","l":"简单","s":"class Solution {","lang":"PHP","href":"https://leetcode-cn.com/problems/climbing-stairs/","bb":{"x":445,"y":40,"w":116,"h":28}}

