{"ls":[{"s":"class Solution {\n    public List<List<Integer>> combine(int n, int k)\n {\n \n    }\n}","lang":"Java"},{"s":"class Solution(object):\n    def combine(self, n, k):\n        \"\"\"\n        :type n: int\n        :type k: int\n        :rtype: List[List[int]]\n        \"\"\"","lang":"Python"},{"s":"class Solution:\n    def combine(self, n: int, k: int) -> List[List\n[int]]:","lang":"Python3"},{"s":"/**\n * Return an array of arrays of size *returnSize.\n * The sizes of the arrays are returned as \n*returnColumnSizes array.\n * Note: Both returned array and *columnSizes array \nmust be malloced, assume caller calls free().\n */\nint** combine(int n, int k, int* returnSize, int** \nreturnColumnSizes){\n \n}","lang":"C"},{"s":"public class Solution {\n    public IList<IList<int>> Combine(int n, int k) {\n \n    }\n}","lang":"C#"},{"s":"/**\n * @param {number} n\n * @param {number} k\n * @return {number[][]}\n */\nvar combine = function(n, k) {\n \n};","lang":"JavaScript"},{"s":"# @param {Integer} n\n# @param {Integer} k\n# @return {Integer[][]}\ndef combine(n, k)\n \nend","lang":"Ruby"},{"s":"class Solution {\n    func combine(_ n: Int, _ k: Int) -> [[Int]] {\n        \n    }\n}","lang":"Swift"},{"s":"func combine(n int, k int) [][]int {\n \n}","lang":"Go"},{"s":"object Solution {\n    def combine(n: Int, k: Int): List[List[Int]] = {\n \n    }\n}","lang":"Scala"},{"s":"class Solution {\n    fun combine(n: Int, k: Int): List<List<Int>> {\n \n    }\n}","lang":"Kotlin"},{"s":"impl Solution {\n    pub fn combine(n: i32, k: i32) -> Vec<Vec<i32>> \n{\n        \n    }\n}","lang":"Rust"},{"s":"class Solution {\n \n    /**\n     * @param Integer $n\n     * @param Integer $k\n     * @return Integer[][]\n     */\n    function combine($n, $k) {\n        \n    }\n}","lang":"PHP"},{"s":"class Solution {\n \n    /**\n     * @param Integer $n\n     * @param Integer $k\n     * @return Integer[][]\n     */\n    function combine($n, $k) {\n        \n    }\n}","lang":"PHP"}],"page":"77/1581","h":"77. 组合","d":"<div class=\"notranslate\"><p>给定两个整数 <em>n</em> 和 <em>k</em>，返回 1 ... <em>n </em>中所有可能的 <em>k</em> 个数的组合。</p>\n\n<p><strong>示例:</strong></p>\n\n<pre><strong>输入:</strong>&nbsp;n = 4, k = 2\n<strong>输出:</strong>\n[\n  [2,4],\n  [3,4],\n  [2,3],\n  [1,2],\n  [1,3],\n  [1,4],\n]</pre>\n</div>","l":"中等","s":"# @param {Integer} n","lang":"Ruby","href":"https://leetcode-cn.com/problems/combinations/","bb":{"x":445,"y":40,"w":116,"h":28}}

