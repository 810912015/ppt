{"ls":[{"s":"class Solution {\n    public int rectangleArea(int[][] rectangles) {\n \n    }\n}","lang":"Java"},{"s":"class Solution(object):\n    def rectangleArea(self, rectangles):\n        \"\"\"\n        :type rectangles: List[List[int]]\n        :rtype: int\n        \"\"\"","lang":"Python"},{"s":"class Solution:\n    def rectangleArea(self, rectangles: List[List\n[int]]) -> int:","lang":"Python3"},{"s":"int rectangleArea(int** rectangles, int \nrectanglesSize, int* rectanglesColSize){\n \n}","lang":"C"},{"s":"public class Solution {\n    public int RectangleArea(int[][] rectangles) {\n \n    }\n}","lang":"C#"},{"s":"/**\n * @param {number[][]} rectangles\n * @return {number}\n */\nvar rectangleArea = function(rectangles) {\n \n};","lang":"JavaScript"},{"s":"# @param {Integer[][]} rectangles\n# @return {Integer}\ndef rectangle_area(rectangles)\n \nend","lang":"Ruby"},{"s":"class Solution {\n    func rectangleArea(_ rectangles: [[Int]]) -> \nInt {\n        \n    }\n}","lang":"Swift"},{"s":"func rectangleArea(rectangles [][]int) int {\n \n}","lang":"Go"},{"s":"object Solution {\n    def rectangleArea(rectangles: Array[Array[Int]])\n: Int = {\n \n    }\n}","lang":"Scala"},{"s":"class Solution {\n    fun rectangleArea(rectangles: Array<IntArray>): \nInt {\n \n    }\n}","lang":"Kotlin"},{"s":"impl Solution {\n    pub fn rectangle_area(rectangles: Vec<Vec<i32>>)\n -> i32 {\n        \n    }\n}","lang":"Rust"},{"s":"class Solution {\n \n    /**\n     * @param Integer[][] $rectangles\n     * @return Integer\n     */\n    function rectangleArea($rectangles) {\n        \n    }\n}","lang":"PHP"},{"s":"class Solution {\n \n    /**\n     * @param Integer[][] $rectangles\n     * @return Integer\n     */\n    function rectangleArea($rectangles) {\n        \n    }\n}","lang":"PHP"}],"page":"850/1581","h":"850. 矩形面积 II","d":"<div class=\"notranslate\"><p>我们给出了一个（轴对齐的）矩形列表&nbsp;<code>rectangles</code>&nbsp;。 对于&nbsp;<code>rectangle[i] = [x1, y1, x2, y2]</code>，其中（x1，y1）是矩形&nbsp;<code>i</code>&nbsp;左下角的坐标，（x2，y2）是该矩形右上角的坐标。</p>\n\n<p>找出平面中所有矩形叠加覆盖后的总面积。 由于答案可能太大，<strong>请返回它对 10 ^ 9 + 7 取模的结果</strong>。</p>\n\n<p><img style=\"height: 360px; width: 480px;\" src=\"https://s3-lc-upload.s3.amazonaws.com/uploads/2018/06/06/rectangle_area_ii_pic.png\" alt=\"\"></p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre><strong>输入：</strong>[[0,0,2,2],[1,0,2,3],[1,0,3,1]]\n<strong>输出：</strong>6\n<strong>解释：</strong>如图所示。\n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre><strong>输入：</strong>[[0,0,1000000000,1000000000]]\n<strong>输出：</strong>49\n<strong>解释：</strong>答案是 10^18 对 (10^9 + 7) 取模的结果， 即 (10^9)^2 → (-7)^2 = 49 。\n</pre>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= rectangles.length &lt;= 200</code></li>\n\t<li><code>rectanges[i].length = 4</code></li>\n\t<li><code>0 &lt;= rectangles[i][j] &lt;= 10^9</code></li>\n\t<li>矩形叠加覆盖后的总面积不会超越&nbsp;<code>2^63 - 1</code>&nbsp;，这意味着可以用一个&nbsp;64 位有符号整数来保存面积结果。</li>\n</ul>\n</div>","l":"困难","s":"# @param {Integer[][]} rectangles","lang":"Ruby","href":"https://leetcode-cn.com/problems/rectangle-area-ii/","bb":{"x":445,"y":40,"w":116,"h":28}}

