{"ls":[{"s":"# @param {String} s\n# @return {Boolean}\ndef is_palindrome(s)\n \nend","lang":"Ruby"},{"s":"class Solution {\n    func isPalindrome(_ s: String) -> Bool {\n \n    }\n}","lang":"Swift"},{"s":"func isPalindrome(s string) bool {\n \n}","lang":"Go"},{"s":"object Solution {\n    def isPalindrome(s: String): Boolean = {\n \n    }\n}","lang":"Scala"},{"s":"class Solution {\n    fun isPalindrome(s: String): Boolean {\n \n    }\n}","lang":"Kotlin"},{"s":"impl Solution {\n    pub fn is_palindrome(s: String) -> bool {\n \n    }\n}","lang":"Rust"},{"s":"class Solution {\n    public boolean isPalindrome(String s) {\n \n    }\n}","lang":"Java"},{"s":"class Solution(object):\n    def isPalindrome(self, s):\n        \"\"\"\n        :type s: str\n        :rtype: bool\n        \"\"\"","lang":"Python"},{"s":"class Solution:\n    def isPalindrome(self, s: str) -> bool:","lang":"Python3"},{"s":"bool isPalindrome(char * s){\n \n}","lang":"C"},{"s":"public class Solution {\n    public bool IsPalindrome(string s) {\n \n    }\n}","lang":"C#"},{"s":"/**\n * @param {string} s\n * @return {boolean}\n */\nvar isPalindrome = function(s) {\n \n};","lang":"JavaScript"},{"s":"# @param {String} s\n# @return {Boolean}\ndef is_palindrome(s)\n \nend","lang":"Ruby"},{"s":"# @param {String} s\n# @return {Boolean}\ndef is_palindrome(s)\n \nend","lang":"Ruby"}],"page":"125/1581","h":"125. 验证回文串","d":"<div class=\"notranslate\"><p>给定一个字符串，验证它是否是回文串，只考虑字母和数字字符，可以忽略字母的大小写。</p>\n\n<p><strong>说明：</strong>本题中，我们将空字符串定义为有效的回文串。</p>\n\n<p><strong>示例 1:</strong></p>\n\n<pre><strong>输入:</strong> \"A man, a plan, a canal: Panama\"\n<strong>输出:</strong> true\n</pre>\n\n<p><strong>示例 2:</strong></p>\n\n<pre><strong>输入:</strong> \"race a car\"\n<strong>输出:</strong> false\n</pre>\n</div>","l":"简单","s":"class Solution {","lang":"PHP","href":"https://leetcode-cn.com/problems/valid-palindrome/","bb":{"x":445,"y":40,"w":116,"h":28}}

