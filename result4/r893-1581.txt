{"ls":[{"s":"class Solution {\n    public int numSpecialEquivGroups(String[] A) {\n \n    }\n}","lang":"Java"},{"s":"class Solution(object):\n    def numSpecialEquivGroups(self, A):\n        \"\"\"\n        :type A: List[str]\n        :rtype: int\n        \"\"\"","lang":"Python"},{"s":"class Solution:\n    def numSpecialEquivGroups(self, A: List[str]) \n-> int:","lang":"Python3"},{"s":"int numSpecialEquivGroups(char ** A, int ASize){\n \n}","lang":"C"},{"s":"public class Solution {\n    public int NumSpecialEquivGroups(string[] A) {\n \n    }\n}","lang":"C#"},{"s":"/**\n * @param {string[]} A\n * @return {number}\n */\nvar numSpecialEquivGroups = function(A) {\n \n};","lang":"JavaScript"},{"s":"# @param {String[]} a\n# @return {Integer}\ndef num_special_equiv_groups(a)\n \nend","lang":"Ruby"},{"s":"class Solution {\n    func numSpecialEquivGroups(_ A: [String]) -> \nInt {\n        \n    }\n}","lang":"Swift"},{"s":"func numSpecialEquivGroups(A []string) int {\n \n}","lang":"Go"},{"s":"object Solution {\n    def numSpecialEquivGroups(A: Array[String]): \nInt = {\n \n    }\n}","lang":"Scala"},{"s":"class Solution {\n    fun numSpecialEquivGroups(A: Array<String>): \nInt {\n \n    }\n}","lang":"Kotlin"},{"s":"impl Solution {\n    pub fn num_special_equiv_groups(a: Vec<String>) \n-> i32 {\n        \n    }\n}","lang":"Rust"},{"s":"class Solution {\n \n    /**\n     * @param String[] $A\n     * @return Integer\n     */\n    function numSpecialEquivGroups($A) {\n        \n    }\n}","lang":"PHP"},{"s":"class Solution {\n \n    /**\n     * @param String[] $A\n     * @return Integer\n     */\n    function numSpecialEquivGroups($A) {\n        \n    }\n}","lang":"PHP"}],"page":"893/1581","h":"893. 特殊等价字符串组","d":"<div class=\"notranslate\"><p>你将得到一个字符串数组 <code>A</code>。</p>\n\n<p>如果经过任意次数的移动，S == T，那么两个字符串 <code>S</code> 和 <code>T</code> 是<strong>特殊等价</strong>的。</p>\n\n<p>一次<strong>移动</strong>包括选择两个索引 <code>i</code> 和 <code>j</code>，且&nbsp;<code>i ％ 2 == j ％ 2</code>，交换 <code>S[j]</code> 和 <code>S [i]</code>。</p>\n\n<p>现在规定，<strong><code>A</code> 中的特殊等价字符串组</strong>是 <code>A</code> 的非空子集 <code>S</code>，这样不在 <code>S</code> 中的任何字符串与 <code>S</code> 中的任何字符串都不是特殊等价的。</p>\n\n<p>返回 <code>A</code>&nbsp;中特殊等价字符串组的数量。</p>\n\n<p>&nbsp;</p>\n\n<ul>\n</ul>\n\n<p><strong>示例 1：</strong></p>\n\n<pre><strong>输入：</strong>[\"a\",\"b\",\"c\",\"a\",\"c\",\"c\"]\n<strong>输出：</strong>3\n<strong>解释：</strong>3<strong> </strong>组 [\"a\",\"a\"]，[\"b\"]，[\"c\",\"c\",\"c\"]\n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre><strong>输入：</strong>[\"aa\",\"bb\",\"ab\",\"ba\"]\n<strong>输出：</strong>4\n<strong>解释：</strong>4 组 [\"aa\"]，[\"bb\"]，[\"ab\"]，[\"ba\"]\n</pre>\n\n<p><strong>示例 3：</strong></p>\n\n<pre><strong>输入：</strong>[\"abc\",\"acb\",\"bac\",\"bca\",\"cab\",\"cba\"]\n<strong>输出：</strong>3\n<strong>解释：</strong>3 组 [\"abc\",\"cba\"]，[\"acb\",\"bca\"]，[\"bac\",\"cab\"]\n</pre>\n\n<p><strong>示例 4：</strong></p>\n\n<pre><strong>输入：</strong>[\"abcd\",\"cdab\",\"adcb\",\"cbad\"]\n<strong>输出：</strong>1\n<strong>解释：</strong>1 组 [\"abcd\",\"cdab\",\"adcb\",\"cbad\"]\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= A.length &lt;= 1000</code></li>\n\t<li><code>1 &lt;= A[i].length &lt;= 20</code></li>\n\t<li>所有&nbsp;<code>A[i]</code>&nbsp;都具有相同的长度。</li>\n\t<li>所有&nbsp;<code>A[i]</code>&nbsp;都只由小写字母组成。</li>\n</ul>\n</div>","l":"简单","s":"class Solution {\npublic:\n    int numSpecialEquivGroups(vector<string>& A) {\n \n    }\n};","lang":"C++","href":"https://leetcode-cn.com/problems/groups-of-special-equivalent-strings/","bb":{"x":490,"y":50,"w":116,"h":28}}

