{"ls":[{"s":"# @param {Integer[][]} matrix\n# @return {Integer[]}\ndef spiral_order(matrix)\n \nend","lang":"Ruby"},{"s":"class Solution {\n    func spiralOrder(_ matrix: [[Int]]) -> [Int] {\n        \n    }\n}","lang":"Swift"},{"s":"func spiralOrder(matrix [][]int) []int {\n \n}","lang":"Go"},{"s":"object Solution {\n    def spiralOrder(matrix: Array[Array[Int]]): List\n[Int] = {\n \n    }\n}","lang":"Scala"},{"s":"class Solution {\n    fun spiralOrder(matrix: Array<IntArray>): \nList<Int> {\n \n    }\n}","lang":"Kotlin"},{"s":"impl Solution {\n    pub fn spiral_order(matrix: Vec<Vec<i32>>) -> \nVec<i32> {\n        \n    }\n}","lang":"Rust"},{"s":"class Solution {\n    public List<Integer> spiralOrder(int[][] matrix)\n {\n \n    }\n}","lang":"Java"},{"s":"class Solution(object):\n    def spiralOrder(self, matrix):\n        \"\"\"\n        :type matrix: List[List[int]]\n        :rtype: List[int]\n        \"\"\"","lang":"Python"},{"s":"class Solution:\n    def spiralOrder(self, matrix: List[List[int]]) \n-> List[int]:","lang":"Python3"},{"s":"/**\n * Note: The returned array must be malloced, \nassume caller calls free().\n */\nint* spiralOrder(int** matrix, int matrixSize, int* \nmatrixColSize, int* returnSize){\n \n}","lang":"C"},{"s":"public class Solution {\n    public IList<int> SpiralOrder(int[][] matrix) {\n \n    }\n}","lang":"C#"},{"s":"/**\n * @param {number[][]} matrix\n * @return {number[]}\n */\nvar spiralOrder = function(matrix) {\n \n};","lang":"JavaScript"},{"s":"# @param {Integer[][]} matrix\n# @return {Integer[]}\ndef spiral_order(matrix)\n \nend","lang":"Ruby"},{"s":"# @param {Integer[][]} matrix\n# @return {Integer[]}\ndef spiral_order(matrix)\n \nend","lang":"Ruby"}],"page":"54/1581","h":"54. 螺旋矩阵","d":"<div class=\"notranslate\"><p>给定一个包含&nbsp;<em>m</em> x <em>n</em>&nbsp;个元素的矩阵（<em>m</em> 行, <em>n</em> 列），请按照顺时针螺旋顺序，返回矩阵中的所有元素。</p>\n\n<p><strong>示例&nbsp;1:</strong></p>\n\n<pre><strong>输入:</strong>\n[\n [ 1, 2, 3 ],\n [ 4, 5, 6 ],\n [ 7, 8, 9 ]\n]\n<strong>输出:</strong> [1,2,3,6,9,8,7,4,5]\n</pre>\n\n<p><strong>示例&nbsp;2:</strong></p>\n\n<pre><strong>输入:</strong>\n[\n  [1, 2, 3, 4],\n  [5, 6, 7, 8],\n  [9,10,11,12]\n]\n<strong>输出:</strong> [1,2,3,4,8,12,11,10,9,5,6,7]\n</pre>\n</div>","l":"中等","s":"class Solution {","lang":"PHP","href":"https://leetcode-cn.com/problems/spiral-matrix/","bb":{"x":445,"y":40,"w":116,"h":28}}

