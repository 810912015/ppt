{"ls":[{"s":"# @param {Integer[][]} grid\n# @return {Integer}\ndef largest_island(grid)\n \nend","lang":"Ruby"},{"s":"class Solution {\n    func largestIsland(_ grid: [[Int]]) -> Int {\n        \n    }\n}","lang":"Swift"},{"s":"func largestIsland(grid [][]int) int {\n \n}","lang":"Go"},{"s":"object Solution {\n    def largestIsland(grid: Array[Array[Int]]): Int \n= {\n \n    }\n}","lang":"Scala"},{"s":"class Solution {\n    fun largestIsland(grid: Array<IntArray>): Int {\n \n    }\n}","lang":"Kotlin"},{"s":"impl Solution {\n    pub fn largest_island(grid: Vec<Vec<i32>>) -> \ni32 {\n        \n    }\n}","lang":"Rust"},{"s":"class Solution {\n    public int largestIsland(int[][] grid) {\n \n    }\n}","lang":"Java"},{"s":"class Solution(object):\n    def largestIsland(self, grid):\n        \"\"\"\n        :type grid: List[List[int]]\n        :rtype: int\n        \"\"\"","lang":"Python"},{"s":"class Solution:\n    def largestIsland(self, grid: List[List[int]]) \n-> int:","lang":"Python3"},{"s":"int largestIsland(int** grid, int gridSize, int* \ngridColSize){\n \n}","lang":"C"},{"s":"public class Solution {\n    public int LargestIsland(int[][] grid) {\n \n    }\n}","lang":"C#"},{"s":"/**\n * @param {number[][]} grid\n * @return {number}\n */\nvar largestIsland = function(grid) {\n \n};","lang":"JavaScript"},{"s":"# @param {Integer[][]} grid\n# @return {Integer}\ndef largest_island(grid)\n \nend","lang":"Ruby"},{"s":"# @param {Integer[][]} grid\n# @return {Integer}\ndef largest_island(grid)\n \nend","lang":"Ruby"}],"page":"827/1581","h":"827. 最大人工岛","d":"<div class=\"notranslate\"><p>在二维地图上，&nbsp;<code>0</code>代表海洋，&nbsp;<code>1</code>代表陆地，我们最多只能将一格&nbsp;<code>0</code> 海洋变成&nbsp;<code>1</code>变成陆地。</p>\n\n<p>进行填海之后，地图上最大的岛屿面积是多少？（上、下、左、右四个方向相连的&nbsp;<code>1</code>&nbsp;可形成岛屿）</p>\n\n<p><strong>示例 1:</strong></p>\n\n<pre><strong>输入: </strong>[[1, 0], [0, 1]]\n<strong>输出:</strong> 3\n<strong>解释:</strong> 将一格0变成1，最终连通两个小岛得到面积为 3 的岛屿。\n</pre>\n\n<p><strong>示例 2:</strong></p>\n\n<pre><strong>输入: </strong>[[1, 1], [1, 0]]\n<strong>输出:</strong> 4\n<strong>解释:</strong> 将一格0变成1，岛屿的面积扩大为 4。</pre>\n\n<p><strong>示例 3:</strong></p>\n\n<pre><strong>输入: </strong>[[1, 1], [1, 1]]\n<strong>输出:</strong> 4\n<strong>解释:</strong> 没有0可以让我们变成1，面积依然为 4。</pre>\n\n<p><strong>说明:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= grid.length = grid[0].length &lt;= 50</code></li>\n\t<li><code>0 &lt;= grid[i][j] &lt;= 1</code></li>\n</ul>\n</div>","l":"困难","s":"class Solution {\n \n    /**\n     * @param Integer[][] $grid\n     * @return Integer\n     */\n    function largestIsland($grid) {\n        \n    }\n}","lang":"PHP","href":"https://leetcode-cn.com/problems/making-a-large-island/","bb":{"x":445,"y":40,"w":116,"h":28}}

