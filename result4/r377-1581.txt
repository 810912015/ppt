{"ls":[{"s":"# @param {Integer[]} nums\n# @param {Integer} target\n# @return {Integer}\ndef combination_sum4(nums, target)\n \nend","lang":"Ruby"},{"s":"class Solution {\n    func combinationSum4(_ nums: [Int], _ target: \nInt) -> Int {\n        \n    }\n}","lang":"Swift"},{"s":"func combinationSum4(nums []int, target int) int {\n \n}","lang":"Go"},{"s":"object Solution {\n    def combinationSum4(nums: Array[Int], target: \nInt): Int = {\n \n    }\n}","lang":"Scala"},{"s":"class Solution {\n    fun combinationSum4(nums: IntArray, target: Int)\n: Int {\n \n    }\n}","lang":"Kotlin"},{"s":"impl Solution {\n    pub fn combination_sum4(nums: Vec<i32>, target: \ni32) -> i32 {\n        \n    }\n}","lang":"Rust"},{"s":"class Solution {\n    public int combinationSum4(int[] nums, int \ntarget) {\n \n    }\n}","lang":"Java"},{"s":"class Solution(object):\n    def combinationSum4(self, nums, target):\n        \"\"\"\n        :type nums: List[int]\n        :type target: int\n        :rtype: int\n        \"\"\"","lang":"Python"},{"s":"class Solution:\n    def combinationSum4(self, nums: List[int], \ntarget: int) -> int:","lang":"Python3"},{"s":"int combinationSum4(int* nums, int numsSize, int \ntarget){\n \n}","lang":"C"},{"s":"public class Solution {\n    public int CombinationSum4(int[] nums, int \ntarget) {\n \n    }\n}","lang":"C#"},{"s":"/**\n * @param {number[]} nums\n * @param {number} target\n * @return {number}\n */\nvar combinationSum4 = function(nums, target) {\n \n};","lang":"JavaScript"},{"s":"# @param {Integer[]} nums\n# @param {Integer} target\n# @return {Integer}\ndef combination_sum4(nums, target)\n \nend","lang":"Ruby"},{"s":"# @param {Integer[]} nums\n# @param {Integer} target\n# @return {Integer}\ndef combination_sum4(nums, target)\n \nend","lang":"Ruby"}],"page":"377/1581","h":"377. 组合总和 Ⅳ","d":"<div class=\"notranslate\"><p>给定一个由正整数组成且不存在重复数字的数组，找出和为给定目标正整数的组合的个数。</p>\n\n<p><strong>示例:</strong></p>\n\n<pre><em><strong>nums</strong></em> = [1, 2, 3]\n<em><strong>target</strong></em> = 4\n\n所有可能的组合为：\n(1, 1, 1, 1)\n(1, 1, 2)\n(1, 2, 1)\n(1, 3)\n(2, 1, 1)\n(2, 2)\n(3, 1)\n\n请注意，顺序不同的序列被视作不同的组合。\n\n因此输出为 <strong>7</strong>。\n</pre>\n\n<p><strong>进阶：</strong><br>\n如果给定的数组中含有负数会怎么样？<br>\n问题会产生什么变化？<br>\n我们需要在题目中添加什么限制来允许负数的出现？</p>\n\n<p><strong>致谢：</strong><br>\n特别感谢&nbsp;<a href=\"https://leetcode.com/pbrother/\">@pbrother</a>&nbsp;添加此问题并创建所有测试用例。</p>\n</div>","l":"中等","s":"class Solution {","lang":"PHP","href":"https://leetcode-cn.com/problems/combination-sum-iv/","bb":{"x":445,"y":40,"w":116,"h":28}}

