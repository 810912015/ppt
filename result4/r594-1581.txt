{"ls":[{"s":"class Solution {\n    public int findLHS(int[] nums) {\n \n    }\n}","lang":"Java"},{"s":"class Solution(object):\n    def findLHS(self, nums):\n        \"\"\"\n        :type nums: List[int]\n        :rtype: int\n        \"\"\"","lang":"Python"},{"s":"class Solution:\n    def findLHS(self, nums: List[int]) -> int:","lang":"Python3"},{"s":"int findLHS(int* nums, int numsSize){\n \n}","lang":"C"},{"s":"public class Solution {\n    public int FindLHS(int[] nums) {\n \n    }\n}","lang":"C#"},{"s":"/**\n * @param {number[]} nums\n * @return {number}\n */\nvar findLHS = function(nums) {\n \n};","lang":"JavaScript"},{"s":"# @param {Integer[]} nums\n# @return {Integer}\ndef find_lhs(nums)\n \nend","lang":"Ruby"},{"s":"class Solution {\n    func findLHS(_ nums: [Int]) -> Int {\n        \n    }\n}","lang":"Swift"},{"s":"func findLHS(nums []int) int {\n \n}","lang":"Go"},{"s":"object Solution {\n    def findLHS(nums: Array[Int]): Int = {\n \n    }\n}","lang":"Scala"},{"s":"class Solution {\n    fun findLHS(nums: IntArray): Int {\n \n    }\n}","lang":"Kotlin"},{"s":"impl Solution {\n    pub fn find_lhs(nums: Vec<i32>) -> i32 {\n        \n    }\n}","lang":"Rust"},{"s":"class Solution {\n \n    /**\n     * @param Integer[] $nums\n     * @return Integer\n     */\n    function findLHS($nums) {\n        \n    }\n}","lang":"PHP"},{"s":"class Solution {\n \n    /**\n     * @param Integer[] $nums\n     * @return Integer\n     */\n    function findLHS($nums) {\n        \n    }\n}","lang":"PHP"}],"page":"594/1581","h":"594. 最长和谐子序列","d":"<div class=\"notranslate\"><p>和谐数组是指一个数组里元素的最大值和最小值之间的差别正好是1。</p>\n\n<p>现在，给定一个整数数组，你需要在所有可能的子序列中找到最长的和谐子序列的长度。</p>\n\n<p><strong>示例 1:</strong></p>\n\n<pre><strong>输入:</strong> [1,3,2,2,5,2,3,7]\n<strong>输出:</strong> 5\n<strong>原因:</strong> 最长的和谐数组是：[3,2,2,2,3].\n</pre>\n\n<p><strong>说明:</strong> 输入的数组长度最大不超过20,000.</p>\n</div>","l":"简单","s":"# @param {Integer[]} nums","lang":"Ruby","href":"https://leetcode-cn.com/problems/longest-harmonious-subsequence/","bb":{"x":445,"y":40,"w":116,"h":28}}

