{"ls":[{"s":"class Solution {\n    public int cutOffTree(List<List<Integer>> \nforest) {\n \n    }\n}","lang":"Java"},{"s":"class Solution(object):\n    def cutOffTree(self, forest):\n        \"\"\"\n        :type forest: List[List[int]]\n        :rtype: int\n        \"\"\"","lang":"Python"},{"s":"class Solution:\n    def cutOffTree(self, forest: List[List[int]]) \n-> int:","lang":"Python3"},{"s":"int cutOffTree(int** forest, int forestSize, int* \nforestColSize){\n \n}","lang":"C"},{"s":"public class Solution {\n    public int CutOffTree(IList<IList<int>> forest) \n{\n \n    }\n}","lang":"C#"},{"s":"/**\n * @param {number[][]} forest\n * @return {number}\n */\nvar cutOffTree = function(forest) {\n \n};","lang":"JavaScript"},{"s":"# @param {Integer[][]} forest\n# @return {Integer}\ndef cut_off_tree(forest)\n \nend","lang":"Ruby"},{"s":"class Solution {\n    func cutOffTree(_ forest: [[Int]]) -> Int {\n        \n    }\n}","lang":"Swift"},{"s":"func cutOffTree(forest [][]int) int {\n \n}","lang":"Go"},{"s":"object Solution {\n    def cutOffTree(forest: List[List[Int]]): Int = {\n \n    }\n}","lang":"Scala"},{"s":"class Solution {\n    fun cutOffTree(forest: List<List<Int>>): Int {\n \n    }\n}","lang":"Kotlin"},{"s":"impl Solution {\n    pub fn cut_off_tree(forest: Vec<Vec<i32>>) -> \ni32 {\n        \n    }\n}","lang":"Rust"},{"s":"class Solution {\n \n    /**\n     * @param Integer[][] $forest\n     * @return Integer\n     */\n    function cutOffTree($forest) {\n        \n    }\n}","lang":"PHP"},{"s":"class Solution {\n \n    /**\n     * @param Integer[][] $forest\n     * @return Integer\n     */\n    function cutOffTree($forest) {\n        \n    }\n}","lang":"PHP"}],"page":"675/1581","h":"675. 为高尔夫比赛砍树","d":"<div class=\"notranslate\"><p>你被请来给一个要举办高尔夫比赛的树林砍树. 树林由一个非负的二维数组表示， 在这个数组中：</p>\n\n<ol>\n\t<li><code>0</code> 表示障碍，无法触碰到.</li>\n\t<li><code>1</code>&nbsp;表示可以行走的地面.</li>\n\t<li><code>比 1 大的数</code>&nbsp;表示一颗允许走过的树的高度.</li>\n</ol>\n\n<p>每一步，你都可以向上、下、左、右四个方向之一移动一个单位，如果你站的地方有一棵树，那么你可以决定是否要砍倒它。</p>\n\n<p>你被要求按照树的高度从低向高砍掉所有的树，每砍过一颗树，树的高度变为 1 。</p>\n\n<p>你将从（0，0）点开始工作，你应该返回你砍完所有树需要走的最小步数。 如果你无法砍完所有的树，返回 -1 。</p>\n\n<p>可以保证的是，没有两棵树的高度是相同的，并且你至少需要砍倒一棵树。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例&nbsp;1:</strong></p>\n\n<pre><strong>输入:</strong> \n[\n [1,2,3],\n [0,0,4],\n [7,6,5]\n]\n<strong>输出:</strong> 6\n</pre>\n\n<p><strong>示例&nbsp;2:</strong></p>\n\n<pre><strong>输入:</strong> \n[\n [1,2,3],\n [0,0,0],\n [7,6,5]\n]\n<strong>输出:</strong> -1\n</pre>\n\n<p><strong>示例&nbsp;3:</strong></p>\n\n<pre><strong>输入:</strong> \n[\n [2,3,4],\n [0,0,5],\n [8,7,6]\n]\n<strong>输出:</strong> 6\n<strong>解释:</strong> (0,0) 位置的树，你可以直接砍去，不用算步数\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= forest.length &lt;= 50</code></li>\n\t<li><code>1 &lt;= forest[i].length &lt;= 50</code></li>\n\t<li><code>0 &lt;= forest[i][j]&nbsp;&lt;= 10^9</code></li>\n</ul>\n</div>","l":"困难","s":"# @param {Integer[][]} forest","lang":"Ruby","href":"https://leetcode-cn.com/problems/cut-off-trees-for-golf-event/","bb":{"x":445,"y":40,"w":116,"h":28}}

