{"ls":[{"s":"# @param {String} a\n# @param {String} b\n# @return {Integer}\ndef repeated_string_match(a, b)\n \nend","lang":"Ruby"},{"s":"class Solution {\n    func repeatedStringMatch(_ A: String, _ B: \nString) -> Int {\n        \n    }\n}","lang":"Swift"},{"s":"func repeatedStringMatch(A string, B string) int {\n \n}","lang":"Go"},{"s":"object Solution {\n    def repeatedStringMatch(A: String, B: String): \nInt = {\n \n    }\n}","lang":"Scala"},{"s":"class Solution {\n    fun repeatedStringMatch(A: String, B: String): \nInt {\n \n    }\n}","lang":"Kotlin"},{"s":"impl Solution {\n    pub fn repeated_string_match(a: String, b: \nString) -> i32 {\n        \n    }\n}","lang":"Rust"},{"s":"class Solution {\n    public int repeatedStringMatch(String A, String \nB) {\n \n    }\n}","lang":"Java"},{"s":"class Solution(object):\n    def repeatedStringMatch(self, A, B):\n        \"\"\"\n        :type A: str\n        :type B: str\n        :rtype: int\n        \"\"\"","lang":"Python"},{"s":"class Solution:\n    def repeatedStringMatch(self, A: str, B: str) \n-> int:","lang":"Python3"},{"s":"int repeatedStringMatch(char * A, char * B){\n \n}","lang":"C"},{"s":"public class Solution {\n    public int RepeatedStringMatch(string A, string \nB) {\n \n    }\n}","lang":"C#"},{"s":"/**\n * @param {string} A\n * @param {string} B\n * @return {number}\n */\nvar repeatedStringMatch = function(A, B) {\n \n};","lang":"JavaScript"},{"s":"# @param {String} a\n# @param {String} b\n# @return {Integer}\ndef repeated_string_match(a, b)\n \nend","lang":"Ruby"},{"s":"# @param {String} a\n# @param {String} b\n# @return {Integer}\ndef repeated_string_match(a, b)\n \nend","lang":"Ruby"}],"page":"686/1581","h":"686. 重复叠加字符串匹配","d":"<div class=\"notranslate\"><p>给定两个字符串 A 和 B, 寻找重复叠加字符串A的最小次数，使得字符串B成为叠加后的字符串A的子串，如果不存在则返回 -1。</p>\n\n<p>举个例子，A = \"abcd\"，B = \"cdabcdab\"。</p>\n\n<p>答案为 3，&nbsp;因为 A 重复叠加三遍后为&nbsp;“abcdabcdabcd”，此时 B 是其子串；A 重复叠加两遍后为\"abcdabcd\"，B 并不是其子串。</p>\n\n<p><strong>注意:</strong></p>\n\n<p>&nbsp;<code>A</code>&nbsp;与&nbsp;<code>B</code>&nbsp;字符串的长度在1和10000区间范围内。</p>\n</div>","l":"简单","s":"class Solution {\n \n    /**\n     * @param String $A\n     * @param String $B\n     * @return Integer\n     */\n    function repeatedStringMatch($A, $B) {\n        \n    }\n}","lang":"PHP","href":"https://leetcode-cn.com/problems/repeated-string-match/","bb":{"x":445,"y":40,"w":116,"h":28}}

