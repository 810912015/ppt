{"ls":[{"s":"class Solution {\n    public int coinChange(int[] coins, int amount) {\n \n    }\n}","lang":"Java"},{"s":"class Solution(object):\n    def coinChange(self, coins, amount):\n        \"\"\"\n        :type coins: List[int]\n        :type amount: int\n        :rtype: int\n        \"\"\"","lang":"Python"},{"s":"class Solution:\n    def coinChange(self, coins: List[int], amount: \nint) -> int:","lang":"Python3"},{"s":"int coinChange(int* coins, int coinsSize, int \namount){\n \n}","lang":"C"},{"s":"public class Solution {\n    public int CoinChange(int[] coins, int amount) {\n \n    }\n}","lang":"C#"},{"s":"/**\n * @param {number[]} coins\n * @param {number} amount\n * @return {number}\n */\nvar coinChange = function(coins, amount) {\n \n};","lang":"JavaScript"},{"s":"# @param {Integer[]} coins\n# @param {Integer} amount\n# @return {Integer}\ndef coin_change(coins, amount)\n \nend","lang":"Ruby"},{"s":"class Solution {\n    func coinChange(_ coins: [Int], _ amount: Int) \n-> Int {\n        \n    }\n}","lang":"Swift"},{"s":"func coinChange(coins []int, amount int) int {\n \n}","lang":"Go"},{"s":"object Solution {\n    def coinChange(coins: Array[Int], amount: Int): \nInt = {\n \n    }\n}","lang":"Scala"},{"s":"class Solution {\n    fun coinChange(coins: IntArray, amount: Int): \nInt {\n \n    }\n}","lang":"Kotlin"},{"s":"impl Solution {\n    pub fn coin_change(coins: Vec<i32>, amount: i32)\n -> i32 {\n        \n    }\n}","lang":"Rust"},{"s":"class Solution {\n \n    /**\n     * @param Integer[] $coins\n     * @param Integer $amount\n     * @return Integer\n     */\n    function coinChange($coins, $amount) {\n        \n    }\n}","lang":"PHP"},{"s":"class Solution {\n \n    /**\n     * @param Integer[] $coins\n     * @param Integer $amount\n     * @return Integer\n     */\n    function coinChange($coins, $amount) {\n        \n    }\n}","lang":"PHP"}],"page":"322/1581","h":"322. 零钱兑换","d":"<div class=\"notranslate\"><p>给定不同面额的硬币 coins 和一个总金额 amount。编写一个函数来计算可以凑成总金额所需的最少的硬币个数。如果没有任何一种硬币组合能组成总金额，返回&nbsp;<code>-1</code>。</p>\n\n<p><strong>示例&nbsp;1:</strong></p>\n\n<pre><strong>输入: </strong>coins = <code>[1, 2, 5]</code>, amount = <code>11</code>\n<strong>输出: </strong><code>3</code> \n<strong>解释:</strong> 11 = 5 + 5 + 1</pre>\n\n<p><strong>示例 2:</strong></p>\n\n<pre><strong>输入: </strong>coins = <code>[2]</code>, amount = <code>3</code>\n<strong>输出: </strong>-1</pre>\n\n<p><strong>说明</strong>:<br>\n你可以认为每种硬币的数量是无限的。</p>\n</div>","l":"中等","s":"# @param {Integer[]} coins\n# @param {Integer} amount\n# @return {Integer}\ndef coin_change(coins, amount)\n \nend","lang":"Ruby","href":"https://leetcode-cn.com/problems/coin-change/","bb":{"x":445,"y":40,"w":116,"h":28}}

