{"ls":[{"s":"# @param {Integer[][]} m\n# @return {Integer[][]}\ndef image_smoother(m)\n \nend","lang":"Ruby"},{"s":"class Solution {\n    func imageSmoother(_ M: [[Int]]) -> [[Int]] {\n        \n    }\n}","lang":"Swift"},{"s":"func imageSmoother(M [][]int) [][]int {\n \n}","lang":"Go"},{"s":"object Solution {\n    def imageSmoother(M: Array[Array[Int]]): Array\n[Array[Int]] = {\n \n    }\n}","lang":"Scala"},{"s":"class Solution {\n    fun imageSmoother(M: Array<IntArray>): \nArray<IntArray> {\n \n    }\n}","lang":"Kotlin"},{"s":"impl Solution {\n    pub fn image_smoother(m: Vec<Vec<i32>>) -> \nVec<Vec<i32>> {\n        \n    }\n}","lang":"Rust"},{"s":"class Solution {\n    public int[][] imageSmoother(int[][] M) {\n \n    }\n}","lang":"Java"},{"s":"class Solution(object):\n    def imageSmoother(self, M):\n        \"\"\"\n        :type M: List[List[int]]\n        :rtype: List[List[int]]\n        \"\"\"","lang":"Python"},{"s":"class Solution:\n    def imageSmoother(self, M: List[List[int]]) -> \nList[List[int]]:","lang":"Python3"},{"s":"/**\n * Return an array of arrays of size *returnSize.\n * The sizes of the arrays are returned as \n*returnColumnSizes array.\n * Note: Both returned array and *columnSizes array \nmust be malloced, assume caller calls free().\n */\nint** imageSmoother(int** M, int MSize, int* \nMColSize, int* returnSize, int** returnColumnSizes){\n \n}","lang":"C"},{"s":"public class Solution {\n    public int[][] ImageSmoother(int[][] M) {\n \n    }\n}","lang":"C#"},{"s":"/**\n * @param {number[][]} M\n * @return {number[][]}\n */\nvar imageSmoother = function(M) {\n \n};","lang":"JavaScript"},{"s":"# @param {Integer[][]} m\n# @return {Integer[][]}\ndef image_smoother(m)\n \nend","lang":"Ruby"},{"s":"# @param {Integer[][]} m\n# @return {Integer[][]}\ndef image_smoother(m)\n \nend","lang":"Ruby"}],"page":"661/1581","h":"661. 图片平滑器","d":"<div class=\"notranslate\"><p>包含整数的二维矩阵 M 表示一个图片的灰度。你需要设计一个平滑器来让每一个单元的灰度成为平均灰度&nbsp;(向下舍入) ，平均灰度的计算是周围的8个单元和它本身的值求平均，如果周围的单元格不足八个，则尽可能多的利用它们。</p>\n\n<p><strong>示例 1:</strong></p>\n\n<pre><strong>输入:</strong>\n[[1,1,1],\n [1,0,1],\n [1,1,1]]\n<strong>输出:</strong>\n[[0, 0, 0],\n [0, 0, 0],\n [0, 0, 0]]\n<strong>解释:</strong>\n对于点 (0,0), (0,2), (2,0), (2,2): 平均(3/4) = 平均(0.75) = 0\n对于点 (0,1), (1,0), (1,2), (2,1): 平均(5/6) = 平均(0.83333333) = 0\n对于点 (1,1): 平均(8/9) = 平均(0.88888889) = 0\n</pre>\n\n<p><strong>注意:</strong></p>\n\n<ol>\n\t<li>给定矩阵中的整数范围为 [0, 255]。</li>\n\t<li>矩阵的长和宽的范围均为&nbsp;[1, 150]。</li>\n</ol>\n</div>","l":"简单","s":"class Solution {","lang":"PHP","href":"https://leetcode-cn.com/problems/image-smoother/","bb":{"x":445,"y":40,"w":116,"h":28}}

