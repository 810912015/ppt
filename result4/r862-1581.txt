{"ls":[{"s":"class Solution {\n    public int shortestSubarray(int[] A, int K) {\n \n    }\n}","lang":"Java"},{"s":"class Solution(object):\n    def shortestSubarray(self, A, K):\n        \"\"\"\n        :type A: List[int]\n        :type K: int\n        :rtype: int\n        \"\"\"","lang":"Python"},{"s":"class Solution:\n    def shortestSubarray(self, A: List[int], K: int)\n -> int:","lang":"Python3"},{"s":"int shortestSubarray(int* A, int ASize, int K){\n \n}","lang":"C"},{"s":"public class Solution {\n    public int ShortestSubarray(int[] A, int K) {\n \n    }\n}","lang":"C#"},{"s":"/**\n * @param {number[]} A\n * @param {number} K\n * @return {number}\n */\nvar shortestSubarray = function(A, K) {\n \n};","lang":"JavaScript"},{"s":"# @param {Integer[]} a\n# @param {Integer} k\n# @return {Integer}\ndef shortest_subarray(a, k)\n \nend","lang":"Ruby"},{"s":"class Solution {\n    func shortestSubarray(_ A: [Int], _ K: Int) -> \nInt {\n        \n    }\n}","lang":"Swift"},{"s":"func shortestSubarray(A []int, K int) int {\n \n}","lang":"Go"},{"s":"object Solution {\n    def shortestSubarray(A: Array[Int], K: Int): \nInt = {\n \n    }\n}","lang":"Scala"},{"s":"class Solution {\n    fun shortestSubarray(A: IntArray, K: Int): Int {\n \n    }\n}","lang":"Kotlin"},{"s":"impl Solution {\n    pub fn shortest_subarray(a: Vec<i32>, k: i32) \n-> i32 {\n        \n    }\n}","lang":"Rust"},{"s":"class Solution {\n \n    /**\n     * @param Integer[] $A\n     * @param Integer $K\n     * @return Integer\n     */\n    function shortestSubarray($A, $K) {\n        \n    }\n}","lang":"PHP"},{"s":"class Solution {\n \n    /**\n     * @param Integer[] $A\n     * @param Integer $K\n     * @return Integer\n     */\n    function shortestSubarray($A, $K) {\n        \n    }\n}","lang":"PHP"}],"page":"862/1581","h":"862. 和至少为 K 的最短子数组","d":"<div class=\"notranslate\"><p>返回 <code>A</code> 的最短的非空连续子数组的<strong>长度</strong>，该子数组的和至少为 <code>K</code> 。</p>\n\n<p>如果没有和至少为&nbsp;<code>K</code>&nbsp;的非空子数组，返回&nbsp;<code>-1</code>&nbsp;。</p>\n\n<p>&nbsp;</p>\n\n<ol>\n</ol>\n\n<p><strong>示例 1：</strong></p>\n\n<pre><strong>输入：</strong>A = [1], K = 1\n<strong>输出：</strong>1\n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre><strong>输入：</strong>A = [1,2], K = 4\n<strong>输出：</strong>-1\n</pre>\n\n<p><strong>示例 3：</strong></p>\n\n<pre><strong>输入：</strong>A = [2,-1,2], K = 3\n<strong>输出：</strong>3\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= A.length &lt;= 50000</code></li>\n\t<li><code>-10 ^ 5&nbsp;&lt;= A[i] &lt;= 10 ^ 5</code></li>\n\t<li><code>1 &lt;= K &lt;= 10 ^ 9</code></li>\n</ol>\n</div>","l":"困难","s":"# @param {Integer[]} a\n# @param {Integer} k\n# @return {Integer}\ndef shortest_subarray(a, k)\n \nend","lang":"Ruby","href":"https://leetcode-cn.com/problems/shortest-subarray-with-sum-at-least-k/","bb":{"x":445,"y":40,"w":116,"h":28}}

