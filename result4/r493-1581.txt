{"ls":[{"s":"# @param {Integer[]} nums\n# @return {Integer}\ndef reverse_pairs(nums)\n \nend","lang":"Ruby"},{"s":"class Solution {\n    func reversePairs(_ nums: [Int]) -> Int {\n        \n    }\n}","lang":"Swift"},{"s":"func reversePairs(nums []int) int {\n \n}","lang":"Go"},{"s":"object Solution {\n    def reversePairs(nums: Array[Int]): Int = {\n \n    }\n}","lang":"Scala"},{"s":"class Solution {\n    fun reversePairs(nums: IntArray): Int {\n \n    }\n}","lang":"Kotlin"},{"s":"impl Solution {\n    pub fn reverse_pairs(nums: Vec<i32>) -> i32 {\n        \n    }\n}","lang":"Rust"},{"s":"class Solution {\n    public int reversePairs(int[] nums) {\n \n    }\n}","lang":"Java"},{"s":"class Solution(object):\n    def reversePairs(self, nums):\n        \"\"\"\n        :type nums: List[int]\n        :rtype: int\n        \"\"\"","lang":"Python"},{"s":"class Solution:\n    def reversePairs(self, nums: List[int]) -> int:","lang":"Python3"},{"s":"int reversePairs(int* nums, int numsSize){\n \n}","lang":"C"},{"s":"public class Solution {\n    public int ReversePairs(int[] nums) {\n \n    }\n}","lang":"C#"},{"s":"/**\n * @param {number[]} nums\n * @return {number}\n */\nvar reversePairs = function(nums) {\n \n};","lang":"JavaScript"},{"s":"# @param {Integer[]} nums\n# @return {Integer}\ndef reverse_pairs(nums)\n \nend","lang":"Ruby"},{"s":"# @param {Integer[]} nums\n# @return {Integer}\ndef reverse_pairs(nums)\n \nend","lang":"Ruby"}],"page":"493/1581","h":"493. 翻转对","d":"<div class=\"notranslate\"><p>给定一个数组&nbsp;<code>nums</code>&nbsp;，如果&nbsp;<code>i &lt; j</code>&nbsp;且&nbsp;<code>nums[i] &gt; 2*nums[j]</code>&nbsp;我们就将&nbsp;<code>(i, j)</code>&nbsp;称作一个<strong><em>重要翻转对</em></strong>。</p>\n\n<p>你需要返回给定数组中的重要翻转对的数量。</p>\n\n<p><strong>示例 1:</strong></p>\n\n<pre><strong>输入</strong>: [1,3,2,3,1]\n<strong>输出</strong>: 2\n</pre>\n\n<p><strong>示例 2:</strong></p>\n\n<pre><strong>输入</strong>: [2,4,3,5,1]\n<strong>输出</strong>: 3\n</pre>\n\n<p><strong>注意:</strong></p>\n\n<ol>\n\t<li>给定数组的长度不会超过<code>50000</code>。</li>\n\t<li>输入数组中的所有数字都在32位整数的表示范围内。</li>\n</ol>\n</div>","l":"困难","s":"class Solution {\n \n    /**\n     * @param Integer[] $nums\n     * @return Integer\n     */\n    function reversePairs($nums) {\n        \n    }\n}","lang":"PHP","href":"https://leetcode-cn.com/problems/reverse-pairs/","bb":{"x":445,"y":40,"w":116,"h":28}}

