{"ls":[{"s":"# @param {Integer[][]} grid\n# @return {Integer}\ndef max_increase_keeping_skyline(grid)\n \nend","lang":"Ruby"},{"s":"class Solution {\n    func maxIncreaseKeepingSkyline(_ grid: [[Int]]) \n-> Int {\n        \n    }\n}","lang":"Swift"},{"s":"func maxIncreaseKeepingSkyline(grid [][]int) int {\n \n}","lang":"Go"},{"s":"object Solution {\n    def maxIncreaseKeepingSkyline(grid: Array[Array\n[Int]]): Int = {\n \n    }\n}","lang":"Scala"},{"s":"class Solution {\n    fun maxIncreaseKeepingSkyline(grid: \nArray<IntArray>): Int {\n \n    }\n}","lang":"Kotlin"},{"s":"impl Solution {\n    pub fn max_increase_keeping_skyline(grid: \nVec<Vec<i32>>) -> i32 {\n        \n    }\n}","lang":"Rust"},{"s":"class Solution {\n    public int maxIncreaseKeepingSkyline(int[][] \ngrid) {\n \n    }\n}","lang":"Java"},{"s":"class Solution(object):\n    def maxIncreaseKeepingSkyline(self, grid):\n        \"\"\"\n        :type grid: List[List[int]]\n        :rtype: int\n        \"\"\"","lang":"Python"},{"s":"class Solution:\n    def maxIncreaseKeepingSkyline(self, grid: List\n[List[int]]) -> int:","lang":"Python3"},{"s":"int maxIncreaseKeepingSkyline(int** grid, int \ngridSize, int* gridColSize){\n \n}","lang":"C"},{"s":"public class Solution {\n    public int MaxIncreaseKeepingSkyline(int[][] \ngrid) {\n \n    }\n}","lang":"C#"},{"s":"/**\n * @param {number[][]} grid\n * @return {number}\n */\nvar maxIncreaseKeepingSkyline = function(grid) {\n \n};","lang":"JavaScript"},{"s":"# @param {Integer[][]} grid\n# @return {Integer}\ndef max_increase_keeping_skyline(grid)\n \nend","lang":"Ruby"},{"s":"# @param {Integer[][]} grid\n# @return {Integer}\ndef max_increase_keeping_skyline(grid)\n \nend","lang":"Ruby"}],"page":"807/1581","h":"807. 保持城市天际线","d":"<div class=\"notranslate\"><p>在二维数组<code>grid</code>中，<code>grid[i][j]</code>代表位于某处的建筑物的高度。 我们被允许增加任何数量（不同建筑物的数量可能不同）的建筑物的高度。 高度 0 也被认为是建筑物。</p>\n\n<p>最后，从新数组的所有四个方向（即顶部，底部，左侧和右侧）观看的“天际线”必须与原始数组的天际线相同。 城市的天际线是从远处观看时，由所有建筑物形成的矩形的外部轮廓。 请看下面的例子。</p>\n\n<p>建筑物高度可以增加的最大总和是多少？</p>\n\n<pre><strong>例子：</strong>\n<strong>输入：</strong> grid = [[3,0,8,4],[2,4,5,7],[9,2,6,3],[0,3,1,0]]\n<strong>输出：</strong> 35\n<strong>解释：</strong> \nThe grid is:\n[ [3, 0, 8, 4], \n  [2, 4, 5, 7],\n  [9, 2, 6, 3],\n  [0, 3, 1, 0] ]\n\n从数组竖直方向（即顶部，底部）看“天际线”是：[9, 4, 8, 7]\n从水平水平方向（即左侧，右侧）看“天际线”是：[8, 7, 9, 3]\n\n在不影响天际线的情况下对建筑物进行增高后，新数组如下：\n\ngridNew = [ [8, 4, 8, 7],\n            [7, 4, 7, 7],\n            [9, 4, 8, 7],\n            [3, 3, 3, 3] ]\n</pre>\n\n<p><strong>说明: </strong></p>\n\n<ul>\n\t<li><code>1 &lt; grid.length = grid[0].length &lt;= 50</code>。</li>\n\t<li>&nbsp;<code>grid[i][j]</code> 的高度范围是： <code>[0, 100]</code>。</li>\n\t<li>一座建筑物占据一个<code>grid[i][j]</code>：换言之，它们是 <code>1 x 1 x grid[i][j]</code> 的长方体。</li>\n</ul>\n</div>","l":"中等","s":"class Solution {","lang":"PHP","href":"https://leetcode-cn.com/problems/max-increase-to-keep-city-skyline/","bb":{"x":445,"y":40,"w":116,"h":28}}

