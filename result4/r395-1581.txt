{"ls":[{"s":"class Solution {\n    public int longestSubstring(String s, int k) {\n \n    }\n}","lang":"Java"},{"s":"class Solution(object):\n    def longestSubstring(self, s, k):\n        \"\"\"\n        :type s: str\n        :type k: int\n        :rtype: int\n        \"\"\"","lang":"Python"},{"s":"class Solution:\n    def longestSubstring(self, s: str, k: int) -> \nint:","lang":"Python3"},{"s":"int longestSubstring(char * s, int k){\n \n}","lang":"C"},{"s":"public class Solution {\n    public int LongestSubstring(string s, int k) {\n \n    }\n}","lang":"C#"},{"s":"/**\n * @param {string} s\n * @param {number} k\n * @return {number}\n */\nvar longestSubstring = function(s, k) {\n \n};","lang":"JavaScript"},{"s":"# @param {String} s\n# @param {Integer} k\n# @return {Integer}\ndef longest_substring(s, k)\n \nend","lang":"Ruby"},{"s":"class Solution {\n    func longestSubstring(_ s: String, _ k: Int) -> \nInt {\n        \n    }\n}","lang":"Swift"},{"s":"func longestSubstring(s string, k int) int {\n \n}","lang":"Go"},{"s":"object Solution {\n    def longestSubstring(s: String, k: Int): Int = {\n \n    }\n}","lang":"Scala"},{"s":"class Solution {\n    fun longestSubstring(s: String, k: Int): Int {\n \n    }\n}","lang":"Kotlin"},{"s":"impl Solution {\n    pub fn longest_substring(s: String, k: i32) -> \ni32 {\n        \n    }\n}","lang":"Rust"},{"s":"class Solution {\n \n    /**\n     * @param String $s\n     * @param Integer $k\n     * @return Integer\n     */\n    function longestSubstring($s, $k) {\n        \n    }\n}","lang":"PHP"},{"s":"class Solution {\n \n    /**\n     * @param String $s\n     * @param Integer $k\n     * @return Integer\n     */\n    function longestSubstring($s, $k) {\n        \n    }\n}","lang":"PHP"}],"page":"395/1581","h":"395. 至少有K个重复字符的最长子串","d":"<div class=\"notranslate\"><p>找到给定字符串（由小写字符组成）中的最长子串 <strong><em>T</em></strong> ，&nbsp;要求&nbsp;<strong><em>T</em></strong>&nbsp;中的每一字符出现次数都不少于 <em>k</em> 。输出 <strong><em>T&nbsp;</em></strong>的长度。</p>\n\n<p><strong>示例 1:</strong></p>\n\n<pre>输入:\ns = \"aaabb\", k = 3\n\n输出:\n3\n\n最长子串为 \"aaa\" ，其中 'a' 重复了 3 次。\n</pre>\n\n<p><strong>示例 2:</strong></p>\n\n<pre>输入:\ns = \"ababbc\", k = 2\n\n输出:\n5\n\n最长子串为 \"ababb\" ，其中 'a' 重复了 2 次， 'b' 重复了 3 次。\n</pre>\n</div>","l":"中等","s":"# @param {String} s\n# @param {Integer} k\n# @return {Integer}\ndef longest_substring(s, k)\n \nend","lang":"Ruby","href":"https://leetcode-cn.com/problems/longest-substring-with-at-least-k-repeating-characters/","bb":{"x":445,"y":40,"w":116,"h":28}}

