{"ls":[{"s":"class Solution {\n    public int[] kthSmallestPrimeFraction(int[] A, \nint K) {\n \n    }\n}","lang":"Java"},{"s":"class Solution(object):\n    def kthSmallestPrimeFraction(self, A, K):\n        \"\"\"\n        :type A: List[int]\n        :type K: int\n        :rtype: List[int]\n        \"\"\"","lang":"Python"},{"s":"class Solution:\n    def kthSmallestPrimeFraction(self, A: List[int],\n K: int) -> List[int]:","lang":"Python3"},{"s":"/**\n * Note: The returned array must be malloced, \nassume caller calls free().\n */\nint* kthSmallestPrimeFraction(int* A, int ASize, \nint K, int* returnSize){\n \n}","lang":"C"},{"s":"public class Solution {\n    public int[] KthSmallestPrimeFraction(int[] A, \nint K) {\n \n    }\n}","lang":"C#"},{"s":"/**\n * @param {number[]} A\n * @param {number} K\n * @return {number[]}\n */\nvar kthSmallestPrimeFraction = function(A, K) {\n \n};","lang":"JavaScript"},{"s":"# @param {Integer[]} a\n# @param {Integer} k\n# @return {Integer[]}\ndef kth_smallest_prime_fraction(a, k)\n \nend","lang":"Ruby"},{"s":"class Solution {\n    func kthSmallestPrimeFraction(_ A: [Int], _ K: \nInt) -> [Int] {\n        \n    }\n}","lang":"Swift"},{"s":"func kthSmallestPrimeFraction(A []int, K int) []int \n{\n \n}","lang":"Go"},{"s":"object Solution {\n    def kthSmallestPrimeFraction(A: Array[Int], K: \nInt): Array[Int] = {\n \n    }\n}","lang":"Scala"},{"s":"class Solution {\n    fun kthSmallestPrimeFraction(A: IntArray, K: \nInt): IntArray {\n \n    }\n}","lang":"Kotlin"},{"s":"impl Solution {\n    pub fn kth_smallest_prime_fraction(a: Vec<i32>, \nk: i32) -> Vec<i32> {\n        \n    }\n}","lang":"Rust"},{"s":"class Solution {\n \n    /**\n     * @param Integer[] $A\n     * @param Integer $K\n     * @return Integer[]\n     */\n    function kthSmallestPrimeFraction($A, $K) {\n        \n    }\n}","lang":"PHP"},{"s":"class Solution {\n \n    /**\n     * @param Integer[] $A\n     * @param Integer $K\n     * @return Integer[]\n     */\n    function kthSmallestPrimeFraction($A, $K) {\n        \n    }\n}","lang":"PHP"}],"page":"786/1581","h":"786. 第 K 个最小的素数分数","d":"<div class=\"notranslate\"><p>一个已排序好的表&nbsp;<code>A</code>，其包含 1 和其他一些素数.&nbsp; 当列表中的每一个 p&lt;q 时，我们可以构造一个分数 p/q 。</p>\n\n<p>那么第&nbsp;<code>k</code>&nbsp;个最小的分数是多少呢?&nbsp; 以整数数组的形式返回你的答案, 这里&nbsp;<code>answer[0] = p</code>&nbsp;且&nbsp;<code>answer[1] = q</code>.</p>\n\n<pre><strong>示例:</strong>\n<strong>输入:</strong> A = [1, 2, 3, 5], K = 3\n<strong>输出:</strong> [2, 5]\n<strong>解释:</strong>\n已构造好的分数,排序后如下所示:\n1/5, 1/3, 2/5, 1/2, 3/5, 2/3.\n很明显第三个最小的分数是 2/5.\n\n<strong>输入:</strong> A = [1, 7], K = 1\n<strong>输出:</strong> [1, 7]\n</pre>\n\n<p><strong>注意:</strong></p>\n\n<ul>\n\t<li><code>A</code> 长度的取值范围在 <code>2</code> — <code>2000</code>.</li>\n\t<li>每个&nbsp;<code>A[i]</code> 的值在 <code>1</code> —<code>30000</code>.</li>\n\t<li><code>K</code> 取值范围为 <code>1</code> —<code>A.length * (A.length - 1) / 2</code></li>\n</ul>\n</div>","l":"困难","s":"# @param {Integer[]} a\n# @param {Integer} k\n# @return {Integer[]}\ndef kth_smallest_prime_fraction(a, k)\n \nend","lang":"Ruby","href":"https://leetcode-cn.com/problems/k-th-smallest-prime-fraction/","bb":{"x":445,"y":40,"w":116,"h":28}}

