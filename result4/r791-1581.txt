{"ls":[{"s":"# @param {String} s\n# @param {String} t\n# @return {String}\ndef custom_sort_string(s, t)\n \nend","lang":"Ruby"},{"s":"class Solution {\n    func customSortString(_ S: String, _ T: String) \n-> String {\n        \n    }\n}","lang":"Swift"},{"s":"func customSortString(S string, T string) string {\n \n}","lang":"Go"},{"s":"object Solution {\n    def customSortString(S: String, T: String): \nString = {\n \n    }\n}","lang":"Scala"},{"s":"class Solution {\n    fun customSortString(S: String, T: String): \nString {\n \n    }\n}","lang":"Kotlin"},{"s":"impl Solution {\n    pub fn custom_sort_string(s: String, t: String) \n-> String {\n        \n    }\n}","lang":"Rust"},{"s":"class Solution {\n    public String customSortString(String S, String \nT) {\n \n    }\n}","lang":"Java"},{"s":"class Solution(object):\n    def customSortString(self, S, T):\n        \"\"\"\n        :type S: str\n        :type T: str\n        :rtype: str\n        \"\"\"","lang":"Python"},{"s":"class Solution:\n    def customSortString(self, S: str, T: str) -> \nstr:","lang":"Python3"},{"s":"char * customSortString(char * S, char * T){\n \n}","lang":"C"},{"s":"public class Solution {\n    public string CustomSortString(string S, string \nT) {\n \n    }\n}","lang":"C#"},{"s":"/**\n * @param {string} S\n * @param {string} T\n * @return {string}\n */\nvar customSortString = function(S, T) {\n \n};","lang":"JavaScript"},{"s":"# @param {String} s\n# @param {String} t\n# @return {String}\ndef custom_sort_string(s, t)\n \nend","lang":"Ruby"},{"s":"# @param {String} s\n# @param {String} t\n# @return {String}\ndef custom_sort_string(s, t)\n \nend","lang":"Ruby"}],"page":"791/1581","h":"791. 自定义字符串排序","d":"<div class=\"notranslate\"><p>字符串<code>S</code>和 <code>T</code> 只包含小写字符。在<code>S</code>中，所有字符只会出现一次。</p>\n\n<p><code>S</code> 已经根据某种规则进行了排序。我们要根据<code>S</code>中的字符顺序对<code>T</code>进行排序。更具体地说，如果<code>S</code>中<code>x</code>在<code>y</code>之前出现，那么返回的字符串中<code>x</code>也应出现在<code>y</code>之前。</p>\n\n<p>返回任意一种符合条件的字符串<code>T</code>。</p>\n\n<pre><strong>示例:</strong>\n<strong>输入:</strong>\nS = \"cba\"\nT = \"abcd\"\n<strong>输出:</strong> \"cbad\"\n<strong>解释:</strong> \nS中出现了字符 \"a\", \"b\", \"c\", 所以 \"a\", \"b\", \"c\" 的顺序应该是 \"c\", \"b\", \"a\". \n由于 \"d\" 没有在S中出现, 它可以放在T的任意位置. \"dcba\", \"cdba\", \"cbda\" 都是合法的输出。\n</pre>\n\n<p><strong>注意:</strong></p>\n\n<ul>\n\t<li><code>S</code>的最大长度为<code>26</code>，其中没有重复的字符。</li>\n\t<li><code>T</code>的最大长度为<code>200</code>。</li>\n\t<li><code>S</code>和<code>T</code>只包含小写字符。</li>\n</ul>\n</div>","l":"中等","s":"class Solution {\n \n    /**\n     * @param String $S\n     * @param String $T\n     * @return String\n     */\n    function customSortString($S, $T) {\n        \n    }\n}","lang":"PHP","href":"https://leetcode-cn.com/problems/custom-sort-string/","bb":{"x":445,"y":40,"w":116,"h":28}}

