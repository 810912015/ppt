{"ls":[{"s":"# @param {Integer[]} a\n# @return {Integer}\ndef num_factored_binary_trees(a)\n \nend","lang":"Ruby"},{"s":"class Solution {\n    func numFactoredBinaryTrees(_ A: [Int]) -> Int {\n        \n    }\n}","lang":"Swift"},{"s":"func numFactoredBinaryTrees(A []int) int {\n \n}","lang":"Go"},{"s":"object Solution {\n    def numFactoredBinaryTrees(A: Array[Int]): Int \n= {\n \n    }\n}","lang":"Scala"},{"s":"class Solution {\n    fun numFactoredBinaryTrees(A: IntArray): Int {\n \n    }\n}","lang":"Kotlin"},{"s":"impl Solution {\n    pub fn num_factored_binary_trees(a: Vec<i32>) \n-> i32 {\n        \n    }\n}","lang":"Rust"},{"s":"class Solution {\n    public int numFactoredBinaryTrees(int[] A) {\n \n    }\n}","lang":"Java"},{"s":"class Solution(object):\n    def numFactoredBinaryTrees(self, A):\n        \"\"\"\n        :type A: List[int]\n        :rtype: int\n        \"\"\"","lang":"Python"},{"s":"class Solution:\n    def numFactoredBinaryTrees(self, A: List[int]) \n-> int:","lang":"Python3"},{"s":"int numFactoredBinaryTrees(int* A, int ASize){\n \n}","lang":"C"},{"s":"public class Solution {\n    public int NumFactoredBinaryTrees(int[] A) {\n \n    }\n}","lang":"C#"},{"s":"/**\n * @param {number[]} A\n * @return {number}\n */\nvar numFactoredBinaryTrees = function(A) {\n \n};","lang":"JavaScript"},{"s":"# @param {Integer[]} a\n# @return {Integer}\ndef num_factored_binary_trees(a)\n \nend","lang":"Ruby"},{"s":"# @param {Integer[]} a\n# @return {Integer}\ndef num_factored_binary_trees(a)\n \nend","lang":"Ruby"}],"page":"823/1581","h":"823. 带因子的二叉树","d":"<div class=\"notranslate\"><p>给出一个含有不重复整数元素的数组，每个整数均大于 1。</p>\n\n<p>我们用这些整数来构建二叉树，每个整数可以使用任意次数。</p>\n\n<p>其中：每个非叶结点的值应等于它的两个子结点的值的乘积。</p>\n\n<p>满足条件的二叉树一共有多少个？返回的结果应<strong>模除 10 ** 9 + 7</strong>。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1:</strong></p>\n\n<pre><strong>输入:</strong> <code>A = [2, 4]</code>\n<strong>输出:</strong> 3\n<strong>解释:</strong> 我们可以得到这些二叉树: <code>[2], [4], [4, 2, 2]</code></pre>\n\n<p><strong>示例 2:</strong></p>\n\n<pre><strong>输入:</strong> <code>A = [2, 4, 5, 10]</code>\n<strong>输出:</strong> <code>7</code>\n<strong>解释:</strong> 我们可以得到这些二叉树: <code>[2], [4], [5], [10], [4, 2, 2], [10, 2, 5], [10, 5, 2]</code>.</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示:</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= A.length &lt;=&nbsp;1000.</code></li>\n\t<li><code>2 &lt;=&nbsp;A[i]&nbsp;&lt;=&nbsp;10 ^ 9</code>.</li>\n</ol>\n</div>","l":"中等","s":"class Solution {\n \n    /**\n     * @param Integer[] $A\n     * @return Integer\n     */\n    function numFactoredBinaryTrees($A) {\n        \n    }\n}","lang":"PHP","href":"https://leetcode-cn.com/problems/binary-trees-with-factors/","bb":{"x":445,"y":40,"w":116,"h":28}}

