{"ls":[{"s":"class Solution {\n    public boolean isNumber(String s) {\n \n    }\n}","lang":"Java"},{"s":"class Solution(object):\n    def isNumber(self, s):\n        \"\"\"\n        :type s: str\n        :rtype: bool\n        \"\"\"","lang":"Python"},{"s":"class Solution:\n    def isNumber(self, s: str) -> bool:","lang":"Python3"},{"s":"bool isNumber(char * s){\n \n}","lang":"C"},{"s":"public class Solution {\n    public bool IsNumber(string s) {\n \n    }\n}","lang":"C#"},{"s":"/**\n * @param {string} s\n * @return {boolean}\n */\nvar isNumber = function(s) {\n \n};","lang":"JavaScript"},{"s":"# @param {String} s\n# @return {Boolean}\ndef is_number(s)\n \nend","lang":"Ruby"},{"s":"class Solution {\n    func isNumber(_ s: String) -> Bool {\n        \n    }\n}","lang":"Swift"},{"s":"func isNumber(s string) bool {\n \n}","lang":"Go"},{"s":"object Solution {\n    def isNumber(s: String): Boolean = {\n \n    }\n}","lang":"Scala"},{"s":"class Solution {\n    fun isNumber(s: String): Boolean {\n \n    }\n}","lang":"Kotlin"},{"s":"impl Solution {\n    pub fn is_number(s: String) -> bool {\n        \n    }\n}","lang":"Rust"},{"s":"class Solution {\n \n    /**\n     * @param String $s\n     * @return Boolean\n     */\n    function isNumber($s) {\n        \n    }\n}","lang":"PHP"},{"s":"class Solution {\n \n    /**\n     * @param String $s\n     * @return Boolean\n     */\n    function isNumber($s) {\n        \n    }\n}","lang":"PHP"}],"page":"65/1581","h":"65. 有效数字","d":"<div class=\"notranslate\"><p>验证给定的字符串是否可以解释为十进制数字。</p>\n\n<p>例如:</p>\n\n<p><code>\"0\"</code>&nbsp;=&gt;&nbsp;<code>true</code><br>\n<code>\" 0.1 \"</code>&nbsp;=&gt;&nbsp;<code>true</code><br>\n<code>\"abc\"</code>&nbsp;=&gt;&nbsp;<code>false</code><br>\n<code>\"1 a\"</code>&nbsp;=&gt;&nbsp;<code>false</code><br>\n<code>\"2e10\"</code>&nbsp;=&gt;&nbsp;<code>true</code><br>\n<code>\" -90e3&nbsp; &nbsp;\"</code>&nbsp;=&gt;&nbsp;<code>true</code><br>\n<code>\" 1e\"</code>&nbsp;=&gt;&nbsp;<code>false</code><br>\n<code>\"e3\"</code>&nbsp;=&gt;&nbsp;<code>false</code><br>\n<code>\" 6e-1\"</code>&nbsp;=&gt;&nbsp;<code>true</code><br>\n<code>\" 99e2.5&nbsp;\"</code>&nbsp;=&gt;&nbsp;<code>false</code><br>\n<code>\"53.5e93\"</code>&nbsp;=&gt;&nbsp;<code>true</code><br>\n<code>\" --6 \"</code>&nbsp;=&gt;&nbsp;<code>false</code><br>\n<code>\"-+3\"</code>&nbsp;=&gt;&nbsp;<code>false</code><br>\n<code>\"95a54e53\"</code>&nbsp;=&gt;&nbsp;<code>false</code></p>\n\n<p><strong>说明:</strong>&nbsp;我们有意将问题陈述地比较模糊。在实现代码之前，你应当事先思考所有可能的情况。这里给出一份可能存在于有效十进制数字中的字符列表：</p>\n\n<ul>\n\t<li>数字 0-9</li>\n\t<li>指数 - \"e\"</li>\n\t<li>正/负号 - \"+\"/\"-\"</li>\n\t<li>小数点 - \".\"</li>\n</ul>\n\n<p>当然，在输入中，这些字符的上下文也很重要。</p>\n\n<p><strong>更新于 2015-02-10:</strong><br>\n<code>C++</code>函数的形式已经更新了。如果你仍然看见你的函数接收&nbsp;<code>const char *</code> 类型的参数，请点击重载按钮重置你的代码。</p>\n</div>","l":"困难","s":"# @param {String} s","lang":"Ruby","href":"https://leetcode-cn.com/problems/valid-number/","bb":{"x":445,"y":40,"w":116,"h":28}}

