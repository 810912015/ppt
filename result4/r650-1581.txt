{"ls":[{"s":"# @param {Integer} n\n# @return {Integer}\ndef min_steps(n)\n \nend","lang":"Ruby"},{"s":"class Solution {\n    func minSteps(_ n: Int) -> Int {\n        \n    }\n}","lang":"Swift"},{"s":"func minSteps(n int) int {\n \n}","lang":"Go"},{"s":"object Solution {\n    def minSteps(n: Int): Int = {\n \n    }\n}","lang":"Scala"},{"s":"class Solution {\n    fun minSteps(n: Int): Int {\n \n    }\n}","lang":"Kotlin"},{"s":"impl Solution {\n    pub fn min_steps(n: i32) -> i32 {\n        \n    }\n}","lang":"Rust"},{"s":"class Solution {\n    public int minSteps(int n) {\n \n    }\n}","lang":"Java"},{"s":"class Solution(object):\n    def minSteps(self, n):\n        \"\"\"\n        :type n: int\n        :rtype: int\n        \"\"\"","lang":"Python"},{"s":"class Solution:\n    def minSteps(self, n: int) -> int:","lang":"Python3"},{"s":"int minSteps(int n){\n \n}","lang":"C"},{"s":"public class Solution {\n    public int MinSteps(int n) {\n \n    }\n}","lang":"C#"},{"s":"/**\n * @param {number} n\n * @return {number}\n */\nvar minSteps = function(n) {\n \n};","lang":"JavaScript"},{"s":"# @param {Integer} n\n# @return {Integer}\ndef min_steps(n)\n \nend","lang":"Ruby"},{"s":"# @param {Integer} n\n# @return {Integer}\ndef min_steps(n)\n \nend","lang":"Ruby"}],"page":"650/1581","h":"650. 只有两个键的键盘","d":"<div class=\"notranslate\"><p>最初在一个记事本上只有一个字符 'A'。你每次可以对这个记事本进行两种操作：</p>\n\n<ol>\n\t<li><code>Copy All</code> (复制全部) : 你可以复制这个记事本中的所有字符(部分的复制是不允许的)。</li>\n\t<li><code>Paste</code> (粘贴) : 你可以粘贴你<strong>上一次</strong>复制的字符。</li>\n</ol>\n\n<p>给定一个数字&nbsp;<code>n</code>&nbsp;。你需要使用最少的操作次数，在记事本中打印出<strong>恰好</strong>&nbsp;<code>n</code>&nbsp;个 'A'。输出能够打印出&nbsp;<code>n</code>&nbsp;个 'A' 的最少操作次数。</p>\n\n<p><strong>示例 1:</strong></p>\n\n<pre><strong>输入:</strong> 3\n<strong>输出:</strong> 3\n<strong>解释:</strong>\n最初, 我们只有一个字符 'A'。\n第 1 步, 我们使用 <strong>Copy All</strong> 操作。\n第 2 步, 我们使用 <strong>Paste </strong>操作来获得 'AA'。\n第 3 步, 我们使用 <strong>Paste</strong> 操作来获得 'AAA'。\n</pre>\n\n<p><strong>说明:</strong></p>\n\n<ol>\n\t<li><code>n</code>&nbsp;的取值范围是 [1, 1000] 。</li>\n</ol>\n</div>","l":"中等","s":"class Solution {\n \n    /**\n     * @param Integer $n\n     * @return Integer\n     */\n    function minSteps($n) {\n        \n    }\n}","lang":"PHP","href":"https://leetcode-cn.com/problems/2-keys-keyboard/","bb":{"x":445,"y":40,"w":116,"h":28}}

