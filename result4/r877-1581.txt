{"ls":[{"s":"class Solution {\n    public boolean stoneGame(int[] piles) {\n \n    }\n}","lang":"Java"},{"s":"class Solution(object):\n    def stoneGame(self, piles):\n        \"\"\"\n        :type piles: List[int]\n        :rtype: bool\n        \"\"\"","lang":"Python"},{"s":"class Solution:\n    def stoneGame(self, piles: List[int]) -> bool:","lang":"Python3"},{"s":"bool stoneGame(int* piles, int pilesSize){\n \n}","lang":"C"},{"s":"public class Solution {\n    public bool StoneGame(int[] piles) {\n \n    }\n}","lang":"C#"},{"s":"/**\n * @param {number[]} piles\n * @return {boolean}\n */\nvar stoneGame = function(piles) {\n \n};","lang":"JavaScript"},{"s":"# @param {Integer[]} piles\n# @return {Boolean}\ndef stone_game(piles)\n \nend","lang":"Ruby"},{"s":"class Solution {\n    func stoneGame(_ piles: [Int]) -> Bool {\n        \n    }\n}","lang":"Swift"},{"s":"func stoneGame(piles []int) bool {\n \n}","lang":"Go"},{"s":"object Solution {\n    def stoneGame(piles: Array[Int]): Boolean = {\n \n    }\n}","lang":"Scala"},{"s":"class Solution {\n    fun stoneGame(piles: IntArray): Boolean {\n \n    }\n}","lang":"Kotlin"},{"s":"impl Solution {\n    pub fn stone_game(piles: Vec<i32>) -> bool {\n        \n    }\n}","lang":"Rust"},{"s":"class Solution {\n \n    /**\n     * @param Integer[] $piles\n     * @return Boolean\n     */\n    function stoneGame($piles) {\n        \n    }\n}","lang":"PHP"},{"s":"class Solution {\n \n    /**\n     * @param Integer[] $piles\n     * @return Boolean\n     */\n    function stoneGame($piles) {\n        \n    }\n}","lang":"PHP"}],"page":"877/1581","h":"877. 石子游戏","d":"<div class=\"notranslate\"><p>亚历克斯和李用几堆石子在做游戏。偶数堆石子<strong>排成一行</strong>，每堆都有正整数颗石子&nbsp;<code>piles[i]</code>&nbsp;。</p>\n\n<p>游戏以谁手中的石子最多来决出胜负。石子的总数是奇数，所以没有平局。</p>\n\n<p>亚历克斯和李轮流进行，亚历克斯先开始。 每回合，玩家从行的开始或结束处取走整堆石头。 这种情况一直持续到没有更多的石子堆为止，此时手中石子最多的玩家获胜。</p>\n\n<p>假设亚历克斯和李都发挥出最佳水平，当亚历克斯赢得比赛时返回&nbsp;<code>true</code>&nbsp;，当李赢得比赛时返回&nbsp;<code>false</code>&nbsp;。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例：</strong></p>\n\n<pre><strong>输入：</strong>[5,3,4,5]\n<strong>输出：</strong>true\n<strong>解释：</strong>\n亚历克斯先开始，只能拿前 5 颗或后 5 颗石子 。\n假设他取了前 5 颗，这一行就变成了 [3,4,5] 。\n如果李拿走前 3 颗，那么剩下的是 [4,5]，亚历克斯拿走后 5 颗赢得 10 分。\n如果李拿走后 5 颗，那么剩下的是 [3,4]，亚历克斯拿走后 4 颗赢得 9 分。\n这表明，取前 5 颗石子对亚历克斯来说是一个胜利的举动，所以我们返回 true 。\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ol>\n\t<li><code>2 &lt;= piles.length &lt;= 500</code></li>\n\t<li><code>piles.length</code> 是偶数。</li>\n\t<li><code>1 &lt;= piles[i] &lt;= 500</code></li>\n\t<li><code>sum(piles)</code>&nbsp;是奇数。</li>\n</ol>\n</div>","l":"中等","s":"# @param {Integer[]} piles","lang":"Ruby","href":"https://leetcode-cn.com/problems/stone-game/","bb":{"x":445,"y":40,"w":116,"h":28}}

