{"ls":[{"s":"class Solution {\n    public String countAndSay(int n) {\n \n    }\n}","lang":"Java"},{"s":"class Solution(object):\n    def countAndSay(self, n):\n        \"\"\"\n        :type n: int\n        :rtype: str\n        \"\"\"","lang":"Python"},{"s":"class Solution:\n    def countAndSay(self, n: int) -> str:","lang":"Python3"},{"s":"char * countAndSay(int n){\n \n}","lang":"C"},{"s":"public class Solution {\n    public string CountAndSay(int n) {\n \n    }\n}","lang":"C#"},{"s":"/**\n * @param {number} n\n * @return {string}\n */\nvar countAndSay = function(n) {\n \n};","lang":"JavaScript"},{"s":"# @param {Integer} n\n# @return {String}\ndef count_and_say(n)\n \nend","lang":"Ruby"},{"s":"class Solution {\n    func countAndSay(_ n: Int) -> String {\n        \n    }\n}","lang":"Swift"},{"s":"func countAndSay(n int) string {\n \n}","lang":"Go"},{"s":"object Solution {\n    def countAndSay(n: Int): String = {\n \n    }\n}","lang":"Scala"},{"s":"class Solution {\n    fun countAndSay(n: Int): String {\n \n    }\n}","lang":"Kotlin"},{"s":"impl Solution {\n    pub fn count_and_say(n: i32) -> String {\n        \n    }\n}","lang":"Rust"},{"s":"class Solution {\n \n    /**\n     * @param Integer $n\n     * @return String\n     */\n    function countAndSay($n) {\n        \n    }\n}","lang":"PHP"},{"s":"class Solution {\n \n    /**\n     * @param Integer $n\n     * @return String\n     */\n    function countAndSay($n) {\n        \n    }\n}","lang":"PHP"}],"page":"38/1581","h":"38. 外观数列","d":"<div class=\"notranslate\"><p>「外观数列」是一个整数序列，从数字 1 开始，序列中的每一项都是对前一项的描述。前五项如下：</p>\n\n<pre>1.     1\n2.     11\n3.     21\n4.     1211\n5.     111221\n</pre>\n\n<p><code>1</code>&nbsp;被读作&nbsp;&nbsp;<code>\"one 1\"</code>&nbsp;&nbsp;(<code>\"一个一\"</code>) , 即&nbsp;<code>11</code>。<br>\n<code>11</code> 被读作&nbsp;<code>\"two 1s\"</code>&nbsp;(<code>\"两个一\"</code>）, 即&nbsp;<code>21</code>。<br>\n<code>21</code> 被读作&nbsp;<code>\"one 2\"</code>, &nbsp;\"<code>one 1\"</code>&nbsp;（<code>\"一个二\"</code>&nbsp;,&nbsp;&nbsp;<code>\"一个一\"</code>)&nbsp;, 即&nbsp;<code>1211</code>。</p>\n\n<p>给定一个正整数 <em>n</em>（1 ≤&nbsp;<em>n</em>&nbsp;≤ 30），输出外观数列的第 <em>n</em> 项。</p>\n\n<p>注意：整数序列中的每一项将表示为一个字符串。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例&nbsp;1:</strong></p>\n\n<pre><strong>输入:</strong> 1\n<strong>输出:</strong> \"1\"\n<strong>解释：</strong>这是一个基本样例。</pre>\n\n<p><strong>示例 2:</strong></p>\n\n<pre><strong>输入:</strong> 4\n<strong>输出:</strong> \"1211\"\n<strong>解释：</strong>当 n = 3 时，序列是 \"21\"，其中我们有 \"2\" 和 \"1\" 两组，\"2\" 可以读作 \"12\"，也就是出现频次 = 1 而 值 = 2；类似 \"1\" 可以读作 \"11\"。所以答案是 \"12\" 和 \"11\" 组合在一起，也就是 \"1211\"。</pre>\n</div>","l":"简单","s":"# @param {Integer} n","lang":"Ruby","href":"https://leetcode-cn.com/problems/count-and-say/","bb":{"x":445,"y":40,"w":116,"h":28}}

