{"ls":[{"s":"class Solution {\n    public void setZeroes(int[][] matrix) {\n \n    }\n}","lang":"Java"},{"s":"class Solution(object):\n    def setZeroes(self, matrix):\n        \"\"\"\n        :type matrix: List[List[int]]\n        :rtype: None Do not return anything, modify \nmatrix in-place instead.\n        \"\"\"","lang":"Python"},{"s":"class Solution:\n    def setZeroes(self, matrix: List[List[int]]) -> \nNone:\n        \"\"\"\n        Do not return anything, modify matrix \nin-place instead.\n        \"\"\"","lang":"Python3"},{"s":"void setZeroes(int** matrix, int matrixSize, int* \nmatrixColSize){\n \n}","lang":"C"},{"s":"public class Solution {\n    public void SetZeroes(int[][] matrix) {\n \n    }\n}","lang":"C#"},{"s":"/**\n * @param {number[][]} matrix\n * @return {void} Do not return anything, modify \nmatrix in-place instead.\n */\nvar setZeroes = function(matrix) {\n \n};","lang":"JavaScript"},{"s":"# @param {Integer[][]} matrix\n# @return {Void} Do not return anything, modify \nmatrix in-place instead.\ndef set_zeroes(matrix)\n \nend","lang":"Ruby"},{"s":"class Solution {\n    func setZeroes(_ matrix: inout [[Int]]) {\n        \n    }\n}","lang":"Swift"},{"s":"func setZeroes(matrix [][]int)  {\n \n}","lang":"Go"},{"s":"object Solution {\n    def setZeroes(matrix: Array[Array[Int]]): Unit \n= {\n \n    }\n}","lang":"Scala"},{"s":"class Solution {\n    fun setZeroes(matrix: Array<IntArray>): Unit {\n \n    }\n}","lang":"Kotlin"},{"s":"impl Solution {\n    pub fn set_zeroes(matrix: &mut Vec<Vec<i32>>) {\n        \n    }\n}","lang":"Rust"},{"s":"class Solution {\n \n    /**\n     * @param Integer[][] $matrix\n     * @return NULL\n     */\n    function setZeroes(&$matrix) {\n        \n    }\n}","lang":"PHP"},{"s":"class Solution {\n \n    /**\n     * @param Integer[][] $matrix\n     * @return NULL\n     */\n    function setZeroes(&$matrix) {\n        \n    }\n}","lang":"PHP"}],"page":"73/1581","h":"73. 矩阵置零","d":"<div class=\"notranslate\"><p>给定一个&nbsp;<em>m</em> x <em>n</em> 的矩阵，如果一个元素为 0，则将其所在行和列的所有元素都设为 0。请使用<strong><a href=\"http://baike.baidu.com/item/%E5%8E%9F%E5%9C%B0%E7%AE%97%E6%B3%95\">原地</a></strong>算法<strong>。</strong></p>\n\n<p><strong>示例&nbsp;1:</strong></p>\n\n<pre><strong>输入:</strong> \n[\n&nbsp; [1,1,1],\n&nbsp; [1,0,1],\n&nbsp; [1,1,1]\n]\n<strong>输出:</strong> \n[\n&nbsp; [1,0,1],\n&nbsp; [0,0,0],\n&nbsp; [1,0,1]\n]\n</pre>\n\n<p><strong>示例&nbsp;2:</strong></p>\n\n<pre><strong>输入:</strong> \n[\n&nbsp; [0,1,2,0],\n&nbsp; [3,4,5,2],\n&nbsp; [1,3,1,5]\n]\n<strong>输出:</strong> \n[\n&nbsp; [0,0,0,0],\n&nbsp; [0,4,5,0],\n&nbsp; [0,3,1,0]\n]</pre>\n\n<p><strong>进阶:</strong></p>\n\n<ul>\n\t<li>一个直接的解决方案是使用 &nbsp;O(<em>m</em><em>n</em>)&nbsp;的额外空间，但这并不是一个好的解决方案。</li>\n\t<li>一个简单的改进方案是使用 O(<em>m</em>&nbsp;+&nbsp;<em>n</em>) 的额外空间，但这仍然不是最好的解决方案。</li>\n\t<li>你能想出一个常数空间的解决方案吗？</li>\n</ul>\n</div>","l":"中等","s":"# @param {Integer[][]} matrix","lang":"Ruby","href":"https://leetcode-cn.com/problems/set-matrix-zeroes/","bb":{"x":445,"y":40,"w":116,"h":28}}

