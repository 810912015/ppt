{"ls":[{"s":"class Solution {\n    public boolean isNStraightHand(int[] hand, int \nW) {\n \n    }\n}","lang":"Java"},{"s":"class Solution(object):\n    def isNStraightHand(self, hand, W):\n        \"\"\"\n        :type hand: List[int]\n        :type W: int\n        :rtype: bool\n        \"\"\"","lang":"Python"},{"s":"class Solution:\n    def isNStraightHand(self, hand: List[int], W: \nint) -> bool:","lang":"Python3"},{"s":"bool isNStraightHand(int* hand, int handSize, int W)\n{\n \n}","lang":"C"},{"s":"public class Solution {\n    public bool IsNStraightHand(int[] hand, int W) {\n \n    }\n}","lang":"C#"},{"s":"/**\n * @param {number[]} hand\n * @param {number} W\n * @return {boolean}\n */\nvar isNStraightHand = function(hand, W) {\n \n};","lang":"JavaScript"},{"s":"# @param {Integer[]} hand\n# @param {Integer} w\n# @return {Boolean}\ndef is_n_straight_hand(hand, w)\n \nend","lang":"Ruby"},{"s":"class Solution {\n    func isNStraightHand(_ hand: [Int], _ W: Int) \n-> Bool {\n        \n    }\n}","lang":"Swift"},{"s":"func isNStraightHand(hand []int, W int) bool {\n \n}","lang":"Go"},{"s":"object Solution {\n    def isNStraightHand(hand: Array[Int], W: Int): \nBoolean = {\n \n    }\n}","lang":"Scala"},{"s":"class Solution {\n    fun isNStraightHand(hand: IntArray, W: Int): \nBoolean {\n \n    }\n}","lang":"Kotlin"},{"s":"impl Solution {\n    pub fn is_n_straight_hand(hand: Vec<i32>, w: \ni32) -> bool {\n        \n    }\n}","lang":"Rust"},{"s":"class Solution {\n \n    /**\n     * @param Integer[] $hand\n     * @param Integer $W\n     * @return Boolean\n     */\n    function isNStraightHand($hand, $W) {\n        \n    }\n}","lang":"PHP"},{"s":"class Solution {\n \n    /**\n     * @param Integer[] $hand\n     * @param Integer $W\n     * @return Boolean\n     */\n    function isNStraightHand($hand, $W) {\n        \n    }\n}","lang":"PHP"}],"page":"846/1581","h":"846. 一手顺子","d":"<div class=\"notranslate\"><p>爱丽丝有一手（<code>hand</code>）由整数数组给定的牌。&nbsp;</p>\n\n<p>现在她想把牌重新排列成组，使得每个组的大小都是 <code>W</code>，且由 <code>W</code> 张连续的牌组成。</p>\n\n<p>如果她可以完成分组就返回 <code>true</code>，否则返回 <code>false</code>。</p>\n\n<p>&nbsp;</p>\n\n<ol>\n</ol>\n\n<p><strong>示例 1：</strong></p>\n\n<pre><strong>输入：</strong>hand = [1,2,3,6,2,3,4,7,8], W = 3\n<strong>输出：</strong>true\n<strong>解释：</strong>爱丽丝的手牌可以被重新排列为 <code>[1,2,3]，[2,3,4]，[6,7,8]</code>。</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre><strong>输入：</strong>hand = [1,2,3,4,5], W = 4\n<strong>输出：</strong>false\n<strong>解释：</strong>爱丽丝的手牌无法被重新排列成几个大小为 4 的组。</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= hand.length &lt;= 10000</code></li>\n\t<li><code>0 &lt;= hand[i]&nbsp;&lt;= 10^9</code></li>\n\t<li><code>1 &lt;= W &lt;= hand.length</code></li>\n</ol>\n</div>","l":"中等","s":"# @param {Integer[]} hand","lang":"Ruby","href":"https://leetcode-cn.com/problems/hand-of-straights/","bb":{"x":445,"y":40,"w":116,"h":28}}

