{"ls":[{"s":"class Solution {\n    public int findLength(int[] A, int[] B) {\n \n    }\n}","lang":"Java"},{"s":"class Solution(object):\n    def findLength(self, A, B):\n        \"\"\"\n        :type A: List[int]\n        :type B: List[int]\n        :rtype: int\n        \"\"\"","lang":"Python"},{"s":"class Solution:\n    def findLength(self, A: List[int], B: List[int])\n -> int:","lang":"Python3"},{"s":"int findLength(int* A, int ASize, int* B, int BSize)\n{\n \n}","lang":"C"},{"s":"public class Solution {\n    public int FindLength(int[] A, int[] B) {\n \n    }\n}","lang":"C#"},{"s":"/**\n * @param {number[]} A\n * @param {number[]} B\n * @return {number}\n */\nvar findLength = function(A, B) {\n \n};","lang":"JavaScript"},{"s":"# @param {Integer[]} a\n# @param {Integer[]} b\n# @return {Integer}\ndef find_length(a, b)\n \nend","lang":"Ruby"},{"s":"class Solution {\n    func findLength(_ A: [Int], _ B: [Int]) -> Int {\n        \n    }\n}","lang":"Swift"},{"s":"func findLength(A []int, B []int) int {\n \n}","lang":"Go"},{"s":"object Solution {\n    def findLength(A: Array[Int], B: Array[Int]): \nInt = {\n \n    }\n}","lang":"Scala"},{"s":"class Solution {\n    fun findLength(A: IntArray, B: IntArray): Int {\n \n    }\n}","lang":"Kotlin"},{"s":"impl Solution {\n    pub fn find_length(a: Vec<i32>, b: Vec<i32>) -> \ni32 {\n        \n    }\n}","lang":"Rust"},{"s":"class Solution {\n \n    /**\n     * @param Integer[] $A\n     * @param Integer[] $B\n     * @return Integer\n     */\n    function findLength($A, $B) {\n        \n    }\n}","lang":"PHP"},{"s":"class Solution {\n \n    /**\n     * @param Integer[] $A\n     * @param Integer[] $B\n     * @return Integer\n     */\n    function findLength($A, $B) {\n        \n    }\n}","lang":"PHP"}],"page":"718/1581","h":"718. 最长重复子数组","d":"<div class=\"notranslate\"><p>给两个整数数组&nbsp;<code>A</code>&nbsp;和&nbsp;<code>B</code>&nbsp;，返回两个数组中公共的、长度最长的子数组的长度。</p>\n\n<p><strong>示例 1:</strong></p>\n\n<pre><strong>输入:</strong>\nA: [1,2,3,2,1]\nB: [3,2,1,4,7]\n<strong>输出:</strong> 3\n<strong>解释:</strong> \n长度最长的公共子数组是 [3, 2, 1]。\n</pre>\n\n<p><strong>说明:</strong></p>\n\n<ol>\n\t<li>1 &lt;= len(A), len(B) &lt;= 1000</li>\n\t<li>0 &lt;= A[i], B[i] &lt; 100</li>\n</ol>\n</div>","l":"中等","s":"# @param {Integer[]} a\n# @param {Integer[]} b\n# @return {Integer}\ndef find_length(a, b)\n \nend","lang":"Ruby","href":"https://leetcode-cn.com/problems/maximum-length-of-repeated-subarray/","bb":{"x":445,"y":40,"w":116,"h":28}}

