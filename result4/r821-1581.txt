{"ls":[{"s":"# @param {String} s\n# @param {Character} c\n# @return {Integer[]}\ndef shortest_to_char(s, c)\n \nend","lang":"Ruby"},{"s":"class Solution {\n    func shortestToChar(_ S: String, _ C: Character)\n -> [Int] {\n        \n    }\n}","lang":"Swift"},{"s":"func shortestToChar(S string, C byte) []int {\n \n}","lang":"Go"},{"s":"object Solution {\n    def shortestToChar(S: String, C: Char): Array\n[Int] = {\n \n    }\n}","lang":"Scala"},{"s":"class Solution {\n    fun shortestToChar(S: String, C: Char): \nIntArray {\n \n    }\n}","lang":"Kotlin"},{"s":"impl Solution {\n    pub fn shortest_to_char(s: String, c: char) -> \nVec<i32> {\n        \n    }\n}","lang":"Rust"},{"s":"class Solution {\n    public int[] shortestToChar(String S, char C) {\n \n    }\n}","lang":"Java"},{"s":"class Solution(object):\n    def shortestToChar(self, S, C):\n        \"\"\"\n        :type S: str\n        :type C: str\n        :rtype: List[int]\n        \"\"\"","lang":"Python"},{"s":"class Solution:\n    def shortestToChar(self, S: str, C: str) -> List\n[int]:","lang":"Python3"},{"s":"/**\n * Note: The returned array must be malloced, \nassume caller calls free().\n */\nint* shortestToChar(char * S, char C, int* \nreturnSize){\n \n}","lang":"C"},{"s":"public class Solution {\n    public int[] ShortestToChar(string S, char C) {\n \n    }\n}","lang":"C#"},{"s":"/**\n * @param {string} S\n * @param {character} C\n * @return {number[]}\n */\nvar shortestToChar = function(S, C) {\n \n};","lang":"JavaScript"},{"s":"# @param {String} s\n# @param {Character} c\n# @return {Integer[]}\ndef shortest_to_char(s, c)\n \nend","lang":"Ruby"},{"s":"# @param {String} s\n# @param {Character} c\n# @return {Integer[]}\ndef shortest_to_char(s, c)\n \nend","lang":"Ruby"}],"page":"821/1581","h":"821. 字符的最短距离","d":"<div class=\"notranslate\"><p>给定一个字符串&nbsp;<code>S</code>&nbsp;和一个字符&nbsp;<code>C</code>。返回一个代表字符串&nbsp;<code>S</code>&nbsp;中每个字符到字符串&nbsp;<code>S</code>&nbsp;中的字符&nbsp;<code>C</code>&nbsp;的最短距离的数组。</p>\n\n<p><strong>示例 1:</strong></p>\n\n<pre><strong>输入:</strong> S = \"loveleetcode\", C = 'e'\n<strong>输出:</strong> [3, 2, 1, 0, 1, 0, 0, 1, 2, 2, 1, 0]\n</pre>\n\n<p><strong>说明:</strong></p>\n\n<ol>\n\t<li>字符串&nbsp;<code>S</code>&nbsp;的长度范围为&nbsp;<code>[1, 10000]</code>。</li>\n\t<li><code>C</code>&nbsp;是一个单字符，且保证是字符串&nbsp;<code>S</code>&nbsp;里的字符。</li>\n\t<li><code>S</code>&nbsp;和&nbsp;<code>C</code>&nbsp;中的所有字母均为小写字母。</li>\n</ol>\n</div>","l":"简单","s":"class Solution {\n \n    /**\n     * @param String $S\n     * @param String $C\n     * @return Integer[]\n     */\n    function shortestToChar($S, $C) {\n        \n    }\n}","lang":"PHP","href":"https://leetcode-cn.com/problems/shortest-distance-to-a-character/","bb":{"x":445,"y":40,"w":116,"h":28}}

