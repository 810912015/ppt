{"ls":[{"s":"class Solution {\n    public String addBinary(String a, String b) {\n \n    }\n}","lang":"Java"},{"s":"class Solution(object):\n    def addBinary(self, a, b):\n        \"\"\"\n        :type a: str\n        :type b: str\n        :rtype: str\n        \"\"\"","lang":"Python"},{"s":"class Solution:\n    def addBinary(self, a: str, b: str) -> str:","lang":"Python3"},{"s":"char * addBinary(char * a, char * b){\n \n}","lang":"C"},{"s":"public class Solution {\n    public string AddBinary(string a, string b) {\n \n    }\n}","lang":"C#"},{"s":"/**\n * @param {string} a\n * @param {string} b\n * @return {string}\n */\nvar addBinary = function(a, b) {\n \n};","lang":"JavaScript"},{"s":"# @param {String} a\n# @param {String} b\n# @return {String}\ndef add_binary(a, b)\n \nend","lang":"Ruby"},{"s":"class Solution {\n    func addBinary(_ a: String, _ b: String) -> \nString {\n        \n    }\n}","lang":"Swift"},{"s":"func addBinary(a string, b string) string {\n \n}","lang":"Go"},{"s":"object Solution {\n    def addBinary(a: String, b: String): String = {\n \n    }\n}","lang":"Scala"},{"s":"class Solution {\n    fun addBinary(a: String, b: String): String {\n \n    }\n}","lang":"Kotlin"},{"s":"impl Solution {\n    pub fn add_binary(a: String, b: String) -> \nString {\n        \n    }\n}","lang":"Rust"},{"s":"class Solution {\n \n    /**\n     * @param String $a\n     * @param String $b\n     * @return String\n     */\n    function addBinary($a, $b) {\n        \n    }\n}","lang":"PHP"},{"s":"class Solution {\n \n    /**\n     * @param String $a\n     * @param String $b\n     * @return String\n     */\n    function addBinary($a, $b) {\n        \n    }\n}","lang":"PHP"}],"page":"67/1581","h":"67. 二进制求和","d":"<div class=\"notranslate\"><p>给定两个二进制字符串，返回他们的和（用二进制表示）。</p>\n\n<p>输入为<strong>非空</strong>字符串且只包含数字&nbsp;<code>1</code>&nbsp;和&nbsp;<code>0</code>。</p>\n\n<p><strong>示例&nbsp;1:</strong></p>\n\n<pre><strong>输入:</strong> a = \"11\", b = \"1\"\n<strong>输出:</strong> \"100\"</pre>\n\n<p><strong>示例&nbsp;2:</strong></p>\n\n<pre><strong>输入:</strong> a = \"1010\", b = \"1011\"\n<strong>输出:</strong> \"10101\"</pre>\n</div>","l":"简单","s":"# @param {String} a","lang":"Ruby","href":"https://leetcode-cn.com/problems/add-binary/","bb":{"x":445,"y":40,"w":116,"h":28}}

