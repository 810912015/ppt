{"ls":[{"s":"class Solution {\n    public int findShortestSubArray(int[] nums) {\n \n    }\n}","lang":"Java"},{"s":"class Solution(object):\n    def findShortestSubArray(self, nums):\n        \"\"\"\n        :type nums: List[int]\n        :rtype: int\n        \"\"\"","lang":"Python"},{"s":"class Solution:\n    def findShortestSubArray(self, nums: List[int]) \n-> int:","lang":"Python3"},{"s":"class Solution:\n    def findShortestSubArray(self, nums: List[int]) \n-> int:","lang":"Python3"},{"s":"public class Solution {\n    public int FindShortestSubArray(int[] nums) {\n \n    }\n}","lang":"C#"},{"s":"/**\n * @param {number[]} nums\n * @return {number}\n */\nvar findShortestSubArray = function(nums) {\n \n};","lang":"JavaScript"},{"s":"# @param {Integer[]} nums\n# @return {Integer}\ndef find_shortest_sub_array(nums)\n \nend","lang":"Ruby"},{"s":"class Solution {\n    func findShortestSubArray(_ nums: [Int]) -> Int \n{\n        \n    }\n}","lang":"Swift"},{"s":"func findShortestSubArray(nums []int) int {\n \n}","lang":"Go"},{"s":"object Solution {\n    def findShortestSubArray(nums: Array[Int]): Int \n= {\n \n    }\n}","lang":"Scala"},{"s":"class Solution {\n    fun findShortestSubArray(nums: IntArray): Int {\n \n    }\n}","lang":"Kotlin"},{"s":"impl Solution {\n    pub fn find_shortest_sub_array(nums: Vec<i32>) \n-> i32 {\n        \n    }\n}","lang":"Rust"},{"s":"class Solution {\n \n    /**\n     * @param Integer[] $nums\n     * @return Integer\n     */\n    function findShortestSubArray($nums) {\n        \n    }\n}","lang":"PHP"},{"s":"class Solution {\n \n    /**\n     * @param Integer[] $nums\n     * @return Integer\n     */\n    function findShortestSubArray($nums) {\n        \n    }\n}","lang":"PHP"}],"page":"697/1581","h":"697. 数组的度","d":"<div class=\"notranslate\"><p>给定一个非空且只包含非负数的整数数组&nbsp;<code>nums</code>, 数组的度的定义是指数组里任一元素出现频数的最大值。</p>\n\n<p>你的任务是找到与&nbsp;<code>nums</code>&nbsp;拥有相同大小的度的最短连续子数组，返回其长度。</p>\n\n<p><strong>示例 1:</strong></p>\n\n<pre><strong>输入:</strong> [1, 2, 2, 3, 1]\n<strong>输出:</strong> 2\n<strong>解释:</strong> \n输入数组的度是2，因为元素1和2的出现频数最大，均为2.\n连续子数组里面拥有相同度的有如下所示:\n[1, 2, 2, 3, 1], [1, 2, 2, 3], [2, 2, 3, 1], [1, 2, 2], [2, 2, 3], [2, 2]\n最短连续子数组[2, 2]的长度为2，所以返回2.\n</pre>\n\n<p><strong>示例 2:</strong></p>\n\n<pre><strong>输入:</strong> [1,2,2,3,1,4,2]\n<strong>输出:</strong> 6\n</pre>\n\n<p><strong>注意:</strong></p>\n\n<ul>\n\t<li><code>nums.length</code>&nbsp;在1到50,000区间范围内。</li>\n\t<li><code>nums[i]</code>&nbsp;是一个在0到49,999范围内的整数。</li>\n</ul>\n</div>","l":"简单","s":"# @param {Integer[]} nums","lang":"Ruby","href":"https://leetcode-cn.com/problems/degree-of-an-array/","bb":{"x":445,"y":40,"w":116,"h":28}}

