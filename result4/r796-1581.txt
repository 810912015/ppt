{"ls":[{"s":"class Solution {\n    public boolean rotateString(String A, String B) \n{\n \n    }\n}","lang":"Java"},{"s":"class Solution(object):\n    def rotateString(self, A, B):\n        \"\"\"\n        :type A: str\n        :type B: str\n        :rtype: bool\n        \"\"\"","lang":"Python"},{"s":"class Solution:\n    def rotateString(self, A: str, B: str) -> bool:","lang":"Python3"},{"s":"bool rotateString(char * A, char * B){\n \n}","lang":"C"},{"s":"public class Solution {\n    public bool RotateString(string A, string B) {\n \n    }\n}","lang":"C#"},{"s":"/**\n * @param {string} A\n * @param {string} B\n * @return {boolean}\n */\nvar rotateString = function(A, B) {\n \n};","lang":"JavaScript"},{"s":"# @param {String} a\n# @param {String} b\n# @return {Boolean}\ndef rotate_string(a, b)\n \nend","lang":"Ruby"},{"s":"class Solution {\n    func rotateString(_ A: String, _ B: String) -> \nBool {\n        \n    }\n}","lang":"Swift"},{"s":"func rotateString(A string, B string) bool {\n \n}","lang":"Go"},{"s":"object Solution {\n    def rotateString(A: String, B: String): Boolean \n= {\n \n    }\n}","lang":"Scala"},{"s":"class Solution {\n    fun rotateString(A: String, B: String): Boolean \n{\n \n    }\n}","lang":"Kotlin"},{"s":"impl Solution {\n    pub fn rotate_string(a: String, b: String) -> \nbool {\n        \n    }\n}","lang":"Rust"},{"s":"class Solution {\n \n    /**\n     * @param String $A\n     * @param String $B\n     * @return Boolean\n     */\n    function rotateString($A, $B) {\n        \n    }\n}","lang":"PHP"},{"s":"class Solution {\n \n    /**\n     * @param String $A\n     * @param String $B\n     * @return Boolean\n     */\n    function rotateString($A, $B) {\n        \n    }\n}","lang":"PHP"}],"page":"796/1581","h":"796. 旋转字符串","d":"<div class=\"notranslate\"><p>给定两个字符串, <code>A</code>&nbsp;和&nbsp;<code>B</code>。</p>\n\n<p><code>A</code>&nbsp;的旋转操作就是将&nbsp;<code>A</code> 最左边的字符移动到最右边。&nbsp;例如, 若&nbsp;<code>A = 'abcde'</code>，在移动一次之后结果就是<code>'bcdea'</code>&nbsp;。如果在若干次旋转操作之后，<code>A</code>&nbsp;能变成<code>B</code>，那么返回<code>True</code>。</p>\n\n<pre><strong>示例 1:</strong>\n<strong>输入:</strong> A = 'abcde', B = 'cdeab'\n<strong>输出:</strong> true\n\n<strong>示例 2:</strong>\n<strong>输入:</strong> A = 'abcde', B = 'abced'\n<strong>输出:</strong> false</pre>\n\n<p><strong>注意：</strong></p>\n\n<ul>\n\t<li><code>A</code> 和&nbsp;<code>B</code>&nbsp;长度不超过&nbsp;<code>100</code>。</li>\n</ul>\n</div>","l":"简单","s":"# @param {String} a\n# @param {String} b\n# @return {Boolean}\ndef rotate_string(a, b)\n \nend","lang":"Ruby","href":"https://leetcode-cn.com/problems/rotate-string/","bb":{"x":445,"y":40,"w":116,"h":28}}

