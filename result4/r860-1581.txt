{"ls":[{"s":"class Solution {\n    public boolean lemonadeChange(int[] bills) {\n \n    }\n}","lang":"Java"},{"s":"class Solution(object):\n    def lemonadeChange(self, bills):\n        \"\"\"\n        :type bills: List[int]\n        :rtype: bool\n        \"\"\"","lang":"Python"},{"s":"class Solution:\n    def lemonadeChange(self, bills: List[int]) -> \nbool:","lang":"Python3"},{"s":"bool lemonadeChange(int* bills, int billsSize){\n \n}","lang":"C"},{"s":"public class Solution {\n    public bool LemonadeChange(int[] bills) {\n \n    }\n}","lang":"C#"},{"s":"/**\n * @param {number[]} bills\n * @return {boolean}\n */\nvar lemonadeChange = function(bills) {\n \n};","lang":"JavaScript"},{"s":"# @param {Integer[]} bills\n# @return {Boolean}\ndef lemonade_change(bills)\n \nend","lang":"Ruby"},{"s":"# @param {Integer[]} bills\n# @return {Boolean}\ndef lemonade_change(bills)\n \nend","lang":"Ruby"},{"s":"func lemonadeChange(bills []int) bool {\n \n}","lang":"Go"},{"s":"object Solution {\n    def lemonadeChange(bills: Array[Int]): Boolean \n= {\n \n    }\n}","lang":"Scala"},{"s":"class Solution {\n    fun lemonadeChange(bills: IntArray): Boolean {\n \n    }\n}","lang":"Kotlin"},{"s":"impl Solution {\n    pub fn lemonade_change(bills: Vec<i32>) -> bool \n{\n        \n    }\n}","lang":"Rust"},{"s":"class Solution {\n \n    /**\n     * @param Integer[] $bills\n     * @return Boolean\n     */\n    function lemonadeChange($bills) {\n        \n    }\n}","lang":"PHP"},{"s":"class Solution {\n \n    /**\n     * @param Integer[] $bills\n     * @return Boolean\n     */\n    function lemonadeChange($bills) {\n        \n    }\n}","lang":"PHP"}],"page":"860/1581","h":"860. 柠檬水找零","d":"<div class=\"notranslate\"><p>在柠檬水摊上，每一杯柠檬水的售价为&nbsp;<code>5</code>&nbsp;美元。</p>\n\n<p>顾客排队购买你的产品，（按账单 <code>bills</code> 支付的顺序）一次购买一杯。</p>\n\n<p>每位顾客只买一杯柠檬水，然后向你付 <code>5</code> 美元、<code>10</code> 美元或 <code>20</code> 美元。你必须给每个顾客正确找零，也就是说净交易是每位顾客向你支付 <code>5</code> 美元。</p>\n\n<p>注意，一开始你手头没有任何零钱。</p>\n\n<p>如果你能给每位顾客正确找零，返回&nbsp;<code>true</code>&nbsp;，否则返回 <code>false</code>&nbsp;。</p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre><strong>输入：</strong>[5,5,5,10,20]\n<strong>输出：</strong>true\n<strong>解释：\n</strong>前 3 位顾客那里，我们按顺序收取 3 张 5 美元的钞票。\n第 4 位顾客那里，我们收取一张 10 美元的钞票，并返还 5 美元。\n第 5 位顾客那里，我们找还一张 10 美元的钞票和一张 5 美元的钞票。\n由于所有客户都得到了正确的找零，所以我们输出 true。\n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre><strong>输入：</strong>[5,5,10]\n<strong>输出：</strong>true\n</pre>\n\n<p><strong>示例 3：</strong></p>\n\n<pre><strong>输入：</strong>[10,10]\n<strong>输出：</strong>false\n</pre>\n\n<p><strong>示例 4：</strong></p>\n\n<pre><strong>输入：</strong>[5,5,10,10,20]\n<strong>输出：</strong>false\n<strong>解释：</strong>\n前 2 位顾客那里，我们按顺序收取 2 张 5 美元的钞票。\n对于接下来的 2 位顾客，我们收取一张 10 美元的钞票，然后返还 5 美元。\n对于最后一位顾客，我们无法退回 15 美元，因为我们现在只有两张 10 美元的钞票。\n由于不是每位顾客都得到了正确的找零，所以答案是 false。\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n\t<li><code>0 &lt;= bills.length &lt;= 10000</code></li>\n\t<li><code>bills[i]</code>&nbsp;不是&nbsp;<code>5</code>&nbsp;就是&nbsp;<code>10</code>&nbsp;或是&nbsp;<code>20</code>&nbsp;</li>\n</ul>\n</div>","l":"简单","s":"# @param {Integer[]} bills","lang":"Ruby","href":"https://leetcode-cn.com/problems/lemonade-change/","bb":{"x":445,"y":40,"w":116,"h":28}}

