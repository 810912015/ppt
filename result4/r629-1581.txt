{"ls":[{"s":"# @param {Integer} n\n# @param {Integer} k\n# @return {Integer}\ndef k_inverse_pairs(n, k)\n \nend","lang":"Ruby"},{"s":"class Solution {\n    func kInversePairs(_ n: Int, _ k: Int) -> Int {\n        \n    }\n}","lang":"Swift"},{"s":"func kInversePairs(n int, k int) int {\n \n}","lang":"Go"},{"s":"object Solution {\n    def kInversePairs(n: Int, k: Int): Int = {\n \n    }\n}","lang":"Scala"},{"s":"class Solution {\n    fun kInversePairs(n: Int, k: Int): Int {\n \n    }\n}","lang":"Kotlin"},{"s":"impl Solution {\n    pub fn k_inverse_pairs(n: i32, k: i32) -> i32 {\n        \n    }\n}","lang":"Rust"},{"s":"class Solution {\n    public int kInversePairs(int n, int k) {\n \n    }\n}","lang":"Java"},{"s":"class Solution(object):\n    def kInversePairs(self, n, k):\n        \"\"\"\n        :type n: int\n        :type k: int\n        :rtype: int\n        \"\"\"","lang":"Python"},{"s":"class Solution:\n    def kInversePairs(self, n: int, k: int) -> int:","lang":"Python3"},{"s":"int kInversePairs(int n, int k){\n \n}","lang":"C"},{"s":"int kInversePairs(int n, int k){\n \n}","lang":"C"},{"s":"/**\n * @param {number} n\n * @param {number} k\n * @return {number}\n */\nvar kInversePairs = function(n, k) {\n \n};","lang":"JavaScript"},{"s":"# @param {Integer} n\n# @param {Integer} k\n# @return {Integer}\ndef k_inverse_pairs(n, k)\n \nend","lang":"Ruby"},{"s":"# @param {Integer} n\n# @param {Integer} k\n# @return {Integer}\ndef k_inverse_pairs(n, k)\n \nend","lang":"Ruby"}],"page":"629/1581","h":"629. K个逆序对数组","d":"<div class=\"notranslate\"><p>给出两个整数&nbsp;<code>n</code>&nbsp;和&nbsp;<code>k</code>，找出所有包含从&nbsp;<code>1</code>&nbsp;到&nbsp;<code>n</code>&nbsp;的数字，且恰好拥有&nbsp;<code>k</code>&nbsp;个逆序对的不同的数组的个数。</p>\n\n<p>逆序对的定义如下：对于数组的第<code>i</code>个和第&nbsp;<code>j</code>个元素，如果满<code>i</code>&nbsp;&lt;&nbsp;<code>j</code>且&nbsp;<code>a[i]</code>&nbsp;&gt;&nbsp;<code>a[j]</code>，则其为一个逆序对；否则不是。</p>\n\n<p>由于答案可能很大，只需要返回 答案 mod 10<sup>9</sup>&nbsp;+ 7 的值。</p>\n\n<p><strong>示例 1:</strong></p>\n\n<pre><strong>输入:</strong> n = 3, k = 0\n<strong>输出:</strong> 1\n<strong>解释:</strong> \n只有数组 [1,2,3] 包含了从1到3的整数并且正好拥有 0 个逆序对。\n</pre>\n\n<p><strong>示例 2:</strong></p>\n\n<pre><strong>输入:</strong> n = 3, k = 1\n<strong>输出:</strong> 2\n<strong>解释:</strong> \n数组 [1,3,2] 和 [2,1,3] 都有 1 个逆序对。\n</pre>\n\n<p><strong>说明:</strong></p>\n\n<ol>\n\t<li>&nbsp;<code>n</code>&nbsp;的范围是 [1, 1000] 并且 <code>k</code> 的范围是 [0, 1000]。</li>\n</ol>\n</div>","l":"困难","s":"class Solution {\n \n    /**\n     * @param Integer $n\n     * @param Integer $k\n     * @return Integer\n     */\n    function kInversePairs($n, $k) {\n        \n    }\n}","lang":"PHP","href":"https://leetcode-cn.com/problems/k-inverse-pairs-array/","bb":{"x":445,"y":40,"w":116,"h":28}}

