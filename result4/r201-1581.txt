{"ls":[{"s":"# @param {Integer} m\n# @param {Integer} n\n# @return {Integer}\ndef range_bitwise_and(m, n)\n \nend","lang":"Ruby"},{"s":"class Solution {\n    func rangeBitwiseAnd(_ m: Int, _ n: Int) -> Int \n{\n \n    }\n}","lang":"Swift"},{"s":"func rangeBitwiseAnd(m int, n int) int {\n \n}","lang":"Go"},{"s":"object Solution {\n    def rangeBitwiseAnd(m: Int, n: Int): Int = {\n \n    }\n}","lang":"Scala"},{"s":"class Solution {\n    fun rangeBitwiseAnd(m: Int, n: Int): Int {\n \n    }\n}","lang":"Kotlin"},{"s":"impl Solution {\n    pub fn range_bitwise_and(m: i32, n: i32) -> i32 \n{\n \n    }\n}","lang":"Rust"},{"s":"class Solution {\n    public int rangeBitwiseAnd(int m, int n) {\n \n    }\n}","lang":"Java"},{"s":"class Solution(object):\n    def rangeBitwiseAnd(self, m, n):\n        \"\"\"\n        :type m: int\n        :type n: int\n        :rtype: int\n        \"\"\"","lang":"Python"},{"s":"class Solution:\n    def rangeBitwiseAnd(self, m: int, n: int) -> \nint:","lang":"Python3"},{"s":"int rangeBitwiseAnd(int m, int n){\n \n}","lang":"C"},{"s":"public class Solution {\n    public int RangeBitwiseAnd(int m, int n) {\n \n    }\n}","lang":"C#"},{"s":"/**\n * @param {number} m\n * @param {number} n\n * @return {number}\n */\nvar rangeBitwiseAnd = function(m, n) {\n \n};","lang":"JavaScript"},{"s":"# @param {Integer} m\n# @param {Integer} n\n# @return {Integer}\ndef range_bitwise_and(m, n)\n \nend","lang":"Ruby"},{"s":"# @param {Integer} m\n# @param {Integer} n\n# @return {Integer}\ndef range_bitwise_and(m, n)\n \nend","lang":"Ruby"}],"page":"201/1581","h":"201. 数字范围按位与","d":"<div class=\"notranslate\"><p>给定范围 [m, n]，其中 0 &lt;= m &lt;= n &lt;= 2147483647，返回此范围内所有数字的按位与（包含 m, n 两端点）。</p>\n\n<p><strong>示例 1:&nbsp;</strong></p>\n\n<pre><strong>输入:</strong> [5,7]\n<strong>输出:</strong> 4</pre>\n\n<p><strong>示例 2:</strong></p>\n\n<pre><strong>输入:</strong> [0,1]\n<strong>输出:</strong> 0</pre>\n</div>","l":"中等","s":"class Solution {\n \n    /**\n     * @param Integer $m\n     * @param Integer $n\n     * @return Integer\n     */\n    function rangeBitwiseAnd($m, $n) {\n \n    }\n}","lang":"PHP","href":"https://leetcode-cn.com/problems/bitwise-and-of-numbers-range/","bb":{"x":445,"y":40,"w":116,"h":28}}

