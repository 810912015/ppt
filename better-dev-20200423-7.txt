{"l":"https://web.stanford.edu/class/cs253/","n":"Stanford: CS 253 Web Security","html":"\n    <div class=\"content\">\n      <a href=\"https://cs253.stanford.edu\" class=\"logo\">\n        <img src=\"stanford.svg\" alt=\"Stanford\">\n        <h1>CS 253 Web Security</h1>\n      </a>\n\n      <h2>Fall 2019</h2>\n<p>This course is a comprehensive overview of web security. The goal is to build an understanding of the most common web attacks and their countermeasures. Given the pervasive insecurity of the modern web landscape, there is a pressing need for programmers and system designers to improve their understanding of web security issues.</p>\n<p>We'll be covering the fundamentals as well as the state-of-the-art in web security.</p>\n<p>Topics include: Principles of web security, attacks and countermeasures, the browser security model, web app vulnerabilities, injection, denial-of-service, TLS attacks, privacy, fingerprinting, same-origin policy, cross site scripting, authentication, JavaScript security, emerging threats, defense-in-depth, and techniques for writing secure code. Course projects include writing security exploits, defending insecure web apps, and implementing emerging web standards.</p>\n<h2>Meeting time and place</h2>\n<p>Tuesdays and Thursdays, 1:30 PM - 2:50 PM in classroom <a href=\"https://campus-map.stanford.edu/?srch=380-380Y\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">380-380Y</a></p>\n<h2>Course Staff</h2>\n<h3>Instructor</h3>\n<p>Feross Aboukhadijeh (<a href=\"mailto:feross@cs.stanford.edu\">feross@cs.stanford.edu</a>)</p>\n<h3>Teaching Assistant</h3>\n<p>Esther Goldstein (<a href=\"mailto:egolds@stanford.edu\">egolds@stanford.edu</a>)</p>\n<h3>Office Hours</h3>\n<ul>\n<li>Feross: Thursday 3-5pm, Gates 323</li>\n<li>Esther: Monday 3-5pm, Wednesday 3-5pm, Huang Basement</li>\n</ul>\n<h2>Course Policies</h2>\n<h3>Communication</h3>\n<p>We will primarily use <a href=\"https://piazza.com/stanford/fall2019/cs253\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Piazza</a> for sending out course announcements and answering questions. Please make sure to <a href=\"https://piazza.com/stanford/fall2019/cs253\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">sign up</a>.</p>\n<p>We use <a href=\"https://gradescope.com\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Gradescope</a> for assignment submissions. Enroll with the code <code>97BGZB</code>.</p>\n<p>To submit anonymous feedback to us at any point during the quarter, you may use <a href=\"https://forms.gle/WqKuxA2m7oycRuTt7\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">this form</a>.</p>\n<h3>Prerequisites</h3>\n<p>CS 142, or an equivalent amount of web development experience, is a prerequisite. You should also be curious about web security and excited to learn clever attacks, defenses, and techniques for writing secure code.</p>\n<p>An introductory security course, such as CS 155, is not a formal prerequisite. The material in this course is focused specifically on the web, while CS 155 covers security more broadly.</p>\n<h3>Attendence</h3>\n<p>Attendance at lectures is mandatory. Do not enroll in this course if you are taking another course that meets at the same time.</p>\n<h3>Grading</h3>\n<ul>\n<li>Assignments (75%)</li>\n<li>Final Exam (25%)</li>\n</ul>\n<p>Each assignment is worth 15%. There is no midterm.</p>\n<h3>Final Exam</h3>\n<ul>\n<li>Tuesday, December 10, 3:30pm - 6:30pm in <a href=\"https://campus-map.stanford.edu/?srch=200-305\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">200-305</a></li>\n</ul>\n<h3>Previous Final Exams</h3>\n<ul>\n<li><a href=\"cs253-final-2019.pdf\">Final Exam 2019</a> (<a href=\"cs253-final-2019-solutions.pdf\">Solutions</a>)</li>\n<li><a href=\"cs253-sample-final.pdf\">More Sample Final Exam Questions</a> (<a href=\"cs253-sample-final-solutions.pdf\">Solutions</a>)</li>\n</ul>\n<h3>Collaboration Policy</h3>\n<p>You may discuss the assignments with other students and you may work together to come up with solutions to the problems. If you do so, you must list the name of your collaborators in the submission. Each student must write up their solutions independently.</p>\n<h3>Late Submissions</h3>\n<p>You get three “late days” in total during the quarter. You may use a late day to submit an assignment after the deadline. You can use at most three late days for any single assignment, and you may only use late days in one-day increments (no partial late days).</p>\n<p>If you submit an assignment more than 72 hours after the deadline, or if you submit an assignment late after running out of late days, you will receive <strong>no credit</strong> for the submission. Please submit your assignments on time and save your late days for extraordinary situations.</p>\n<p>If you have questions about these policies, please ask us.</p>\n<h2>Schedule</h2>\n<h3>Sep 24: What is Web Security? HTML &amp; JavaScript Review</h3>\n<ul>\n<li><a href=\"lectures/Lecture%2001.pdf\">Slides</a></li>\n<li><a href=\"https://www.youtube.com/watch?v=5JJrJGZ_LjM\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Video</a></li>\n<li>Reading<ul>\n<li><a href=\"https://developers.google.com/web/updates/2018/09/inside-browser-part1\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Inside look at modern web browser (part 1)</a></li>\n<li><a href=\"https://developers.google.com/web/updates/2018/09/inside-browser-part2\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Inside look at modern web browser (part 2)</a></li>\n<li><a href=\"https://developers.google.com/web/updates/2018/09/inside-browser-part3\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Inside look at modern web browser (part 3)</a></li>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/A_re-introduction_to_JavaScript\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">A Re-Introduction to JavaScript</a></li>\n</ul></li>\n</ul>\n<h3>Sep 26: HTTP, Cookies, Sessions</h3>\n<ul>\n<li><a href=\"lectures/Lecture%2002.pdf\">Slides</a></li>\n<li><a href=\"https://www.youtube.com/watch?v=zhnQFQ2qFtA\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Video</a></li>\n<li>Reading<ul>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Overview\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">An overview of HTTP</a></li>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Cookies\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">HTTP Cookies</a></li>\n<li>Skim: <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">HTTP headers</a></li>\n</ul></li>\n</ul>\n<h3>Oct 01: Session Attacks</h3>\n<ul>\n<li><a href=\"lectures/Lecture%2003.pdf\">Slides</a></li>\n<li><a href=\"https://www.youtube.com/watch?v=QuhgjXKzfI8\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Video</a></li>\n<li>Reading<ul>\n<li><a href=\"https://web.dev/samesite-cookies-explained/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">SameSite Cookies Explained</a></li>\n<li><a href=\"https://tools.ietf.org/html/draft-west-cookie-incrementalism-00#section-4.1\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Incrementally Better Cookies</a></li>\n<li><a href=\"https://scotthelme.co.uk/csrf-is-dead/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">CSRF Is Dead</a></li>\n</ul></li>\n</ul>\n<h3>Oct 03: Cross-Site Request Forgery, Same Origin Policy</h3>\n<ul>\n<li><a href=\"lectures/Lecture%2004.pdf\">Slides</a></li>\n<li><a href=\"https://www.youtube.com/watch?v=0-q69vAYSwo\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Video</a></li>\n<li>Reading<ul>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/Security/Same-origin_policy\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Same Origin policy</a></li>\n<li><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Cross-Site_Request_Forgery_Prevention_Cheat_Sheet.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Cross-Site Request Forgery Prevention</a></li>\n</ul></li>\n</ul>\n<h3>Oct 08: Exceptions to the Same Origin Policy, Cross-Site Script Inclusion</h3>\n<ul>\n<li><a href=\"lectures/Lecture%2005.pdf\">Slides</a></li>\n<li><a href=\"https://www.youtube.com/watch?v=ud9cVQDte3A\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Video</a></li>\n</ul>\n<h3>Oct 10: Cross-Site Scripting (XSS)</h3>\n<ul>\n<li><a href=\"lectures/Lecture%2006.pdf\">Slides</a></li>\n<li><a href=\"https://www.youtube.com/watch?v=XTcqlOFhpPI\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Video</a></li>\n<li>Reading<ul>\n<li><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Cross_Site_Scripting_Prevention_Cheat_Sheet.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Cross Site Scripting Prevention Cheat Sheet</a></li>\n<li><a href=\"https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">XSS Filter Evasion Cheat Sheet</a></li>\n</ul></li>\n</ul>\n<h3>Oct 15: Cross-Site Scripting Defenses</h3>\n<ul>\n<li><a href=\"lectures/Lecture%2007.pdf\">Slides</a></li>\n<li><a href=\"https://www.youtube.com/watch?v=PlXzrtheQGc\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Video</a></li>\n<li>Reading<ul>\n<li><a href=\"http://research.sidstamm.com/papers/csp-www2010.pdf\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Reining in the Web with Content Security Policy</a></li>\n<li><a href=\"https://storage.googleapis.com/pub-tools-public-publication-data/pdf/45542.pdf\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">CSP is Dead: Long Live CSP</a></li>\n<li><a href=\"https://developers.google.com/web/updates/2019/02/trusted-types\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Trusted Types</a></li>\n<li><a href=\"https://fastmail.blog/2015/12/20/sanitising-html-the-dom-clobbering-issue/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Sanitising HTML: the DOM clobbering issue</a></li>\n</ul></li>\n</ul>\n<h3>Oct 17: Fingerprinting and Privacy on the Web</h3>\n<ul>\n<li><strong>Guest Lecture by Pete Snyder (<a href=\"https://brave.com\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Brave Software</a>)</strong></li>\n<li><a href=\"lectures/Lecture%2008.pdf\">Slides</a></li>\n<li><a href=\"https://www.youtube.com/watch?v=OVh0oHbmla0\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Video</a></li>\n<li>Reading<ul>\n<li><a href=\"https://chromium.woolyss.com/f/OpenWPM-1-million-site-tracking-measurement.pdf\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Online tracking: A 1-million-site measurement and analysis</a></li>\n<li><a href=\"https://arxiv.org/pdf/1708.08510\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Most websites don't need to vibrate: A cost-benefit approach to improving browser security</a></li>\n<li><a href=\"https://blog.torproject.org/browser-fingerprinting-introduction-and-challenges-ahead\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Browser Fingerprinting: An Introduction and the Challenges Ahead</a></li>\n<li><a href=\"https://webkit.org/blog/8943/privacy-preserving-ad-click-attribution-for-the-web/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">WebKit Ad Click Attribution</a></li>\n<li><a href=\"https://crypto.stanford.edu/safecache/sameorigin.pdf\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Protecting Browser State from Web Privacy Attacks</a></li>\n<li>Skim: <a href=\"https://webkit.org/tracking-prevention-policy/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">WebKit Tracking Prevention Policy</a></li>\n</ul></li>\n</ul>\n<h3>Oct 22: Denial-of-service, Phishing, Side Channels</h3>\n<ul>\n<li><a href=\"lectures/Lecture%2009.pdf\">Slides</a></li>\n<li><a href=\"https://www.youtube.com/watch?v=RfC_PzVmk4w\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Video</a></li>\n<li>Reading<ul>\n<li><a href=\"https://www.usenix.org/system/files/conference/usenixsecurity13/sec13-paper_akhawe.pdf\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Alice in Warningland: A Large-Scale Field Study of Browser Security</a></li>\n<li><a href=\"http://www.sectheory.com/clickjacking.htm\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Clickjacking</a></li>\n<li><a href=\"https://www.adambarth.com/papers/2009/barth-weinberger-song.pdf\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Cross-Origin JavaScript Capability Leaks: Detection, Exploitation, and Defense</a></li>\n</ul></li>\n</ul>\n<h3>Oct 24: Code Injection</h3>\n<ul>\n<li><a href=\"lectures/Lecture%2010.pdf\">Slides</a></li>\n<li><a href=\"https://www.youtube.com/watch?v=mR7yvqWmE0M\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Video</a></li>\n<li>Reading<ul>\n<li>None</li>\n</ul></li>\n</ul>\n<h3>Oct 29: Transport Layer Security</h3>\n<ul>\n<li><a href=\"lectures/Lecture%2011.pdf\">Slides</a></li>\n<li><a href=\"https://www.youtube.com/watch?v=S8-rnPHjyxs\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Video</a></li>\n<li>Reading<ul>\n<li><a href=\"https://blog.cryptographyengineering.com/2019/09/24/looking-back-at-the-snowden-revelations/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Looking back at the Snowden revelations</a></li>\n<li><a href=\"https://transparencyreport.google.com/https/overview\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">HTTPS encryption on the web</a></li>\n</ul></li>\n</ul>\n<h3>Oct 31: HTTPS in the Real World: A Spooky Tale</h3>\n<ul>\n<li><strong>Guest Lecture by Emily Stark &amp; Chris Palmer (<a href=\"https://www.google.com/chrome/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Google Chrome</a>)</strong></li>\n<li><a href=\"lectures/Lecture%2012.pdf\">Slides</a></li>\n<li><a href=\"https://www.youtube.com/watch?v=jN26N8QS5Os\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Video</a></li>\n<li>Reading<ul>\n<li><a href=\"https://en.wikipedia.org/wiki/DigiNotar\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">DigiNotar on Wikipedia</a></li>\n<li><a href=\"https://noncombatant.org/2015/05/01/about-http-public-key-pinning/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">About Public Key Pinning</a></li>\n<li><a href=\"https://noncombatant.org/2015/11/24/what-is-hpkp-for/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">What Is HPKP For?</a></li>\n<li><a href=\"https://developers.google.com/web/updates/2015/09/HPKP-reporting-with-chrome-46\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Rolling out Public Key Pinning with HPKP Reporting</a></li>\n</ul></li>\n</ul>\n<h3>Nov 05: Authentication</h3>\n<ul>\n<li><a href=\"lectures/Lecture%2013.pdf\">Slides</a></li>\n<li><a href=\"https://www.youtube.com/watch?v=lgmGSYwJc20\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Video</a></li>\n<li>Reading<ul>\n<li><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Authentication_Cheat_Sheet.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Authentication Cheat Sheet</a></li>\n</ul></li>\n</ul>\n<h3>Nov 07: WebAuthn - The future of user authentication on the web 🤞</h3>\n<ul>\n<li><strong>Guest Lecture by Lucas Garron (<a href=\"https://github.com\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">GitHub</a>)</strong></li>\n<li><a href=\"lectures/Lecture%2014.pdf\">Slides</a></li>\n<li><a href=\"https://www.youtube.com/watch?v=_nPk2HgNpjE\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Video</a></li>\n<li>Reading<ul>\n<li><a href=\"https://webauthn.guide/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Guide to Web Authentication</a></li>\n</ul></li>\n</ul>\n<h3>Nov 12: No class</h3>\n<h3>Nov 14: Managing security concerns in a large Open Source project</h3>\n<ul>\n<li><strong>Guest Lecture by Myles Borins (<a href=\"https://nodejs.org/en/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Node.js</a> technical steering committee, <a href=\"https://www.google.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Google</a>)</strong></li>\n<li><a href=\"https://kni.sh/oss-security\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Slides</a></li>\n<li><a href=\"https://www.youtube.com/watch?v=lX6KLL0sVTU\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Video</a></li>\n<li>Reading<ul>\n<li><a href=\"https://gruss.cc/files/fantastictimers.pdf\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Fantastic Timers and Where to Find Them: High-Resolution Microarchitectural Attacks in JavaScript</a></li>\n<li><a href=\"https://nodesecroadmap.fyi\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">A Roadmap for Node.js Security</a></li>\n</ul></li>\n</ul>\n<h3>Nov 19: Server security, Safe coding practices</h3>\n<ul>\n<li><a href=\"lectures/Lecture%2017.pdf\">Slides</a></li>\n<li><a href=\"https://www.youtube.com/watch?v=Ox15IMOvWfA\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Video</a></li>\n<li>Reading<ul>\n<li><a href=\"https://snyk.io/blog/exploiting-buffer/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Exploiting Buffer</a></li>\n</ul></li>\n</ul>\n<h3>Nov 21: Local HTTP server security</h3>\n<ul>\n<li><a href=\"lectures/Lecture%2018.pdf\">Slides</a></li>\n<li><a href=\"https://www.youtube.com/watch?v=wLgcb4jZwGM\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Video</a></li>\n<li>Reading<ul>\n<li>None</li>\n</ul></li>\n</ul>\n<h3>Dec 03: DNS rebinding attacks</h3>\n<ul>\n<li><a href=\"lectures/Lecture%2019.pdf\">Slides</a></li>\n<li><a href=\"https://www.youtube.com/watch?v=bZW_55LIz0w\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Video</a></li>\n<li>Reading<ul>\n<li><a href=\"https://www.wired.com/story/chromecast-roku-sonos-dns-rebinding-vulnerability/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Millions of Streaming Devices Are Vulnerable to a Retro Web Attack</a></li>\n<li><a href=\"https://crypto.stanford.edu/dns/dns-rebinding.pdf\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Protecting Browsers from DNS Rebinding Attacks</a></li>\n</ul></li>\n</ul>\n<h3>Dec 05: Browser architecture, Writing secure code</h3>\n<ul>\n<li><a href=\"lectures/Lecture%2020.pdf\">Slides</a></li>\n<li><a href=\"https://www.youtube.com/watch?v=5aguccOpGes\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Video</a></li>\n<li>Reading<ul>\n<li><a href=\"https://seclab.stanford.edu/websec/chromium/chromium-security-architecture.pdf\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">The Security Architecture of the Chromium Browser</a></li>\n<li><a href=\"https://www.chromium.org/Home/chromium-security/corb-for-developers\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Cross-Origin Read Blocking (CORB) primer</a></li>\n<li>Skim: <a href=\"https://chromium.googlesource.com/chromium/src/+/master/services/network/cross_origin_read_blocking_explainer.md\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Cross-Origin Read Blocking (CORB) explainer</a></li>\n<li><a href=\"https://diracdeltas.github.io/blog/backdooring-js/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Backdooring Your JavaScript Using Minifier Bugs</a></li>\n<li><a href=\"https://medium.com/hackernoon/im-harvesting-credit-card-numbers-and-passwords-from-your-site-here-s-how-9a8cb347c5b5\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">I’m harvesting credit card numbers and passwords from your site. Here’s how.</a></li>\n<li><a href=\"https://shkspr.mobi/blog/2018/11/major-sites-running-unauthenticated-javascript-on-their-payment-pages/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Major sites running unauthenticated JavaScript on their payment pages</a></li>\n</ul></li>\n</ul>\n<h2>Assignments</h2>\n<h3><a href=\"assign0\">Assignment 0 – Web Programming Adventure ✈️</a></h3>\n<ul>\n<li>Assigned: Tuesday, September 24</li>\n<li>Due: Friday, October 4 at 5:00pm</li>\n</ul>\n<h3><a href=\"assign1\">Assignment 1 – Journey to the Dark Side 🌘</a></h3>\n<ul>\n<li>Assigned: Tuesday, October 8</li>\n<li>Due: Friday, October 18 at 5:00pm</li>\n</ul>\n<h3><a href=\"assign2\">Assignment 2 – Oh What a Tangled Web We Weave 🕸</a></h3>\n<ul>\n<li>Assigned: Saturday, October 26</li>\n<li>Due: Thursday, November 7 at 11:59pm</li>\n</ul>\n<h3>Assignment 3 – See Piazza</h3>\n<ul>\n<li>Assigned: Tuesday, November 12</li>\n<li>Due: Friday, November 22 at 5:00pm</li>\n</ul>\n<h3>Assignment 4 – See Piazza</h3>\n<ul>\n<li>Assigned: Mon, November 25</li>\n<li>Due: Friday, December 6 at 5:00pm</li>\n</ul>\n<br>\n<br>\n<br>\n<p>Website design by <a href=\"https://feross.org\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Feross Aboukhadijeh</a>.</p>\n\n    </div>\n  \n\n","text":"CS 253 Web Security Fall 2019\nThis course is a comprehensive overview of web security. The goal is to build an understanding of the most common web attacks and their countermeasures. Given the pervasive insecurity of the modern web landscape, there is a pressing need for programmers and system designers to improve their understanding of web security issues.\nWe'll be covering the fundamentals as well as the state-of-the-art in web security.\nTopics include: Principles of web security, attacks and countermeasures, the browser security model, web app vulnerabilities, injection, denial-of-service, TLS attacks, privacy, fingerprinting, same-origin policy, cross site scripting, authentication, JavaScript security, emerging threats, defense-in-depth, and techniques for writing secure code. Course projects include writing security exploits, defending insecure web apps, and implementing emerging web standards.\nMeeting time and place\nTuesdays and Thursdays, 1:30 PM - 2:50 PM in classroom 380-380Y\nCourse Staff Instructor\nFeross Aboukhadijeh (feross@cs.stanford.edu)\nTeaching Assistant\nEsther Goldstein (egolds@stanford.edu)\nOffice Hours\nFeross: Thursday 3-5pm, Gates 323\nEsther: Monday 3-5pm, Wednesday 3-5pm, Huang Basement\nCourse Policies Communication\nWe will primarily use Piazza for sending out course announcements and answering questions. Please make sure to sign up.\nWe use Gradescope for assignment submissions. Enroll with the code 97BGZB.\nTo submit anonymous feedback to us at any point during the quarter, you may use this form.\nPrerequisites\nCS 142, or an equivalent amount of web development experience, is a prerequisite. You should also be curious about web security and excited to learn clever attacks, defenses, and techniques for writing secure code.\nAn introductory security course, such as CS 155, is not a formal prerequisite. The material in this course is focused specifically on the web, while CS 155 covers security more broadly.\nAttendence\nAttendance at lectures is mandatory. Do not enroll in this course if you are taking another course that meets at the same time.\nGrading\nAssignments (75%)\nFinal Exam (25%)\nEach assignment is worth 15%. There is no midterm.\nFinal Exam\nTuesday, December 10, 3:30pm - 6:30pm in 200-305\nPrevious Final Exams\nFinal Exam 2019 (Solutions)\nMore Sample Final Exam Questions (Solutions)\nCollaboration Policy\nYou may discuss the assignments with other students and you may work together to come up with solutions to the problems. If you do so, you must list the name of your collaborators in the submission. Each student must write up their solutions independently.\nLate Submissions\nYou get three “late days” in total during the quarter. You may use a late day to submit an assignment after the deadline. You can use at most three late days for any single assignment, and you may only use late days in one-day increments (no partial late days).\nIf you submit an assignment more than 72 hours after the deadline, or if you submit an assignment late after running out of late days, you will receive no credit for the submission. Please submit your assignments on time and save your late days for extraordinary situations.\nIf you have questions about these policies, please ask us.\nSchedule Sep 24: What is Web Security? HTML &amp; JavaScript Review\nSlides\nVideo\nReading\nInside look at modern web browser (part 1)\nInside look at modern web browser (part 2)\nInside look at modern web browser (part 3)\nA Re-Introduction to JavaScript\nSep 26: HTTP, Cookies, Sessions\nSlides\nVideo\nReading\nAn overview of HTTP\nHTTP Cookies\nSkim: HTTP headers\nOct 01: Session Attacks\nSlides\nVideo\nReading\nSameSite Cookies Explained\nIncrementally Better Cookies\nCSRF Is Dead\nOct 03: Cross-Site Request Forgery, Same Origin Policy\nSlides\nVideo\nReading\nSame Origin policy\nCross-Site Request Forgery Prevention\nOct 08: Exceptions to the Same Origin Policy, Cross-Site Script Inclusion\nSlides\nVideo\nOct 10: Cross-Site Scripting (XSS)\nSlides\nVideo\nReading\nCross Site Scripting Prevention Cheat Sheet\nXSS Filter Evasion Cheat Sheet\nOct 15: Cross-Site Scripting Defenses\nSlides\nVideo\nReading\nReining in the Web with Content Security Policy\nCSP is Dead: Long Live CSP\nTrusted Types\nSanitising HTML: the DOM clobbering issue\nOct 17: Fingerprinting and Privacy on the Web\nGuest Lecture by Pete Snyder (Brave Software)\nSlides\nVideo\nReading\nOnline tracking: A 1-million-site measurement and analysis\nMost websites don't need to vibrate: A cost-benefit approach to improving browser security\nBrowser Fingerprinting: An Introduction and the Challenges Ahead\nWebKit Ad Click Attribution\nProtecting Browser State from Web Privacy Attacks\nSkim: WebKit Tracking Prevention Policy\nOct 22: Denial-of-service, Phishing, Side Channels\nSlides\nVideo\nReading\nAlice in Warningland: A Large-Scale Field Study of Browser Security\nClickjacking\nCross-Origin JavaScript Capability Leaks: Detection, Exploitation, and Defense\nOct 24: Code Injection\nSlides\nVideo\nReading\nNone\nOct 29: Transport Layer Security\nSlides\nVideo\nReading\nLooking back at the Snowden revelations\nHTTPS encryption on the web\nOct 31: HTTPS in the Real World: A Spooky Tale\nGuest Lecture by Emily Stark &amp; Chris Palmer (Google Chrome)\nSlides\nVideo\nReading\nDigiNotar on Wikipedia\nAbout Public Key Pinning\nWhat Is HPKP For?\nRolling out Public Key Pinning with HPKP Reporting\nNov 05: Authentication\nSlides\nVideo\nReading\nAuthentication Cheat Sheet\nNov 07: WebAuthn - The future of user authentication on the web 🤞\nGuest Lecture by Lucas Garron (GitHub)\nSlides\nVideo\nReading\nGuide to Web Authentication\nNov 12: No class Nov 14: Managing security concerns in a large Open Source project\nGuest Lecture by Myles Borins (Node.js technical steering committee, Google)\nSlides\nVideo\nReading\nFantastic Timers and Where to Find Them: High-Resolution Microarchitectural Attacks in JavaScript\nA Roadmap for Node.js Security\nNov 19: Server security, Safe coding practices\nSlides\nVideo\nReading\nExploiting Buffer\nNov 21: Local HTTP server security\nSlides\nVideo\nReading\nNone\nDec 03: DNS rebinding attacks\nSlides\nVideo\nReading\nMillions of Streaming Devices Are Vulnerable to a Retro Web Attack\nProtecting Browsers from DNS Rebinding Attacks\nDec 05: Browser architecture, Writing secure code\nSlides\nVideo\nReading\nThe Security Architecture of the Chromium Browser\nCross-Origin Read Blocking (CORB) primer\nSkim: Cross-Origin Read Blocking (CORB) explainer\nBackdooring Your JavaScript Using Minifier Bugs\nI’m harvesting credit card numbers and passwords from your site. Here’s how.\nMajor sites running unauthenticated JavaScript on their payment pages\nAssignments Assignment 0 – Web Programming Adventure ✈️\nAssigned: Tuesday, September 24\nDue: Friday, October 4 at 5:00pm\nAssignment 1 – Journey to the Dark Side 🌘\nAssigned: Tuesday, October 8\nDue: Friday, October 18 at 5:00pm\nAssignment 2 – Oh What a Tangled Web We Weave 🕸\nAssigned: Saturday, October 26\nDue: Thursday, November 7 at 11:59pm\nAssignment 3 – See Piazza\nAssigned: Tuesday, November 12\nDue: Friday, November 22 at 5:00pm\nAssignment 4 – See Piazza\nAssigned: Mon, November 25\nDue: Friday, December 6 at 5:00pm\nWebsite design by Feross Aboukhadijeh.","ctext":"CS 253网络安全秋季2019\n本课程是网络安全的全面概述。 目的是加深对最常见的Web攻击及其对策的理解。 鉴于现代Web领域普遍存在的不安全因素，迫切需要程序员和系统设计人员提高对Web安全问题的理解。\n我们将介绍Web安全的基础知识和最新技术。\n主题包括：网络安全原理，攻击和对策，浏览器安全模型，网络应用漏洞，注入，拒绝服务，TLS攻击，隐私，指纹识别，同源策略，跨站点脚本，身份验证，JavaScript安全， 新兴的威胁，纵深防御以及编写安全代码的技术。 课程项目包括编写安全漏洞，防御不安全的Web应用程序以及实现新兴的Web标准。\n会议时间和地点\n星期二和星期四，1:30 PM-2:50 PM在教室380-380Y\n课程教员\n阿布·哈迪贾（Abu Khadija）的机会（@ X. Stanford.Member的机会）\n教学助手\nEsther Goldstein（egolds@stanford.edu）\n工作时间\nFeross：星期四3-5pm，盖茨323\n以斯帖：星期一3-5pm，星期三3-5pm，黄地下室\n课程政策交流\n我们将主要使用Piazza发出课程公告和回答问题。 请确保注册。\n我们使用Gradescope提交作业。 注册代码为97BGZB。\n要在本季度的任何时候向我们提交匿名反馈，您可以使用此表格。\n先决条件\n先决条件是CS 142或同等的Web开发经验。 您还应该对Web安全感到好奇，并乐于学习聪明的攻击，防御措施和编写安全代码的技术。\n入门级安全课程，例如CS 155，不是正式的先决条件。 本课程中的材料专门针对Web，而CS 155涵盖了更广泛的安全性。\n出席人数\n必须参加讲座。 如果您要同时修读另一门课程，请不要注册该课程。\n等级\n作业（75％）\n期末考试（25％）\n每项作业的价值为15％。 没有期中考试。\n期末考试\n200-305年12月10日，星期二，下午3:30-下午6:30\n以前的期末考试\n2019年期末考试（解决方案）\n更多期末考试样题（解决方案）\n合作政策\n您可以与其他学生讨论作业，也可以一起提出问题的解决方案。 如果这样做，则必须在提交中列出协作者的姓名。 每个学生必须独立编写他们的解决方案。\n逾期提交\n在该季度中，您总共有3个“后期”。 您可以在截止日期之后用较晚的时间提交作业。 您一次最多只能使用三天的延迟时间，并且只能以一天的增量使用延迟的时间（不能部分延迟）。\n如果您在截止日期后超过72小时提交作业，或者如果您在迟到的工作日后提交作业，您将不会获得任何信用。 请准时提交作业，并在特殊情况下节省您的延迟时间。\n如果您对这些政策有疑问，请询问我们。\n如果您对这些政策有疑问，请询问我们。...\n滑梯\n视频\n阅读\n深入了解现代Web浏览器（第1部分）\n深入了解现代Web浏览器（第2部分）\n深入了解现代Web浏览器（第3部分）\nJavaScript的重新介绍\n9月26日：HTTP，Cookie，会话\n滑梯\n视频\n阅读\nHTTP概述\nHTTP Cookie\n略读：HTTP标头\n10月1日：会话攻击\n滑梯\n视频\n阅读\nSameSite Cookies解释\n逐步改善Cookie\nCSRF已死\n10月3日：跨站点请求伪造，同源策略\n滑梯\n视频\n阅读\n同源政策\n跨站请求伪造预防\n10月8日：相同起源策略的例外，跨站点脚本包含\n滑梯\n视频\n10月10日：跨站脚本（XSS）\n滑梯\n视频\n阅读\n跨站点脚本防护备忘单\nXSS过滤器规避速查表\n10月15日：跨站脚本防护\n滑梯\n视频\n阅读\n通过内容安全策略控制Web\nCSP已死：CSP万岁\n可信类型\n清理HTML：DOM破坏问题\n10月17日：网络上的指纹和隐私\nPete Snyder的客座演讲（勇敢的软件）\n滑梯\n视频\n阅读\n在线跟踪：一百万个站点的测量和分析\n大多数网站不需要振动：一种提高浏览器安全性的成本效益方法\n浏览器指纹：简介和未来的挑战\nWebKit广告点击归因\n保护浏览器状态免受Web隐私攻击\n略读：WebKit跟踪预防策略\n10月22日：拒绝服务，网络钓鱼，侧边渠道\n滑梯\n视频\n阅读\n爱丽丝梦游仙境：浏览器安全性的大规模实地研究\n点击劫持\n跨域JavaScript功能泄漏：检测，利用和防御\n10月24日：代码注入\n滑梯\n视频\n阅读\n没有\n10月29日：传输层安全性\n滑梯\n视频\n阅读\n回顾斯诺登的启示\n网络上的HTTPS加密\n10月31日：真实世界中的HTTPS：诡异的故事\n10月31日：真实世界中的HTTPS：诡异的故事...\n滑梯\n视频\n阅读\n维基百科上的DigiNotar\n关于公钥固定\nHPKP的用途是什么？\n通过HPKP报告推出公钥固定\n11月5日：身份验证\n滑梯\n视频\n阅读\n认证备忘单\n11月7日：WebAuthn-网络上用户身份验证的未来\nLucas Garron的客座演讲（GitHub）\n滑梯\n视频\n阅读\nWeb认证指南\n11月12日：不上课11月14日：管理大型开源项目中的安全问题\nMyles Borins的客座演讲（Node.js技术指导委员会，Google）\n滑梯\n视频\n阅读\n奇妙的计时器以及在哪里找到它们：JavaScript中的高分辨率微体系结构攻击\nNode.js安全路线图\n11月19日：服务器安全性，安全的编码做法\n滑梯\n视频\n阅读\n开发缓冲区\n11月21日：本地HTTP服务器安全性\n滑梯\n视频\n阅读\n没有\n12月3日：DNS重新绑定攻击\n滑梯\n视频\n阅读\n成千上万的流媒体设备容易遭受复古Web攻击\n保护浏览器免受DNS重新绑定攻击\n12月5日：浏览器架构，编写安全代码\n滑梯\n视频\n阅读\nChromium浏览器的安全架构\n跨域读取阻止（CORB）底漆\n略读：跨域读取阻止（CORB）解释器\n使用Minifier错误对JavaScript进行后门操作\n我正在从您的网站中获取信用卡号和密码。 就是这样。\n主要网站在其付款页面上运行未经身份验证的JavaScript\n作业作业0 – Web编程冒险✈️\n分配：9月24日，星期二\n截止时间：10月4日，星期五，下午5:00\n作业1 –黑暗之旅Side\n分配：10月8日，星期二\n截止时间：10月18日，星期五，下午5:00\n作业2 –哦，我们编织的网有多纠结🕸\n分配：10月26日，星期六\n截止日期：11月7日，星期四，晚上11:59\n作业3-见广场\n分配：11月12日，星期二\n截止日期：11月22日，星期五，下午5:00\n作业4-见广场\n指派：11月25日，星期一\n截止日期：12月6日，星期五，下午5:00\n网站设计由Feross Aboukhadijeh设计。\n"}

