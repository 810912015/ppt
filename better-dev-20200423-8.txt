{"l":"https://web.stanford.edu/class/cs253/","n":"Stanford: CS 253 Web Security","html":"\n    <div class=\"content\">\n      <a href=\"https://cs253.stanford.edu\" class=\"logo\">\n        <img src=\"stanford.svg\" alt=\"Stanford\">\n        <h1>CS 253 Web Security</h1>\n      </a>\n\n      <h2>Fall 2019</h2>\n<p>This course is a comprehensive overview of web security. The goal is to build an understanding of the most common web attacks and their countermeasures. Given the pervasive insecurity of the modern web landscape, there is a pressing need for programmers and system designers to improve their understanding of web security issues.</p>\n<p>We'll be covering the fundamentals as well as the state-of-the-art in web security.</p>\n<p>Topics include: Principles of web security, attacks and countermeasures, the browser security model, web app vulnerabilities, injection, denial-of-service, TLS attacks, privacy, fingerprinting, same-origin policy, cross site scripting, authentication, JavaScript security, emerging threats, defense-in-depth, and techniques for writing secure code. Course projects include writing security exploits, defending insecure web apps, and implementing emerging web standards.</p>\n<h2>Meeting time and place</h2>\n<p>Tuesdays and Thursdays, 1:30 PM - 2:50 PM in classroom <a href=\"https://campus-map.stanford.edu/?srch=380-380Y\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">380-380Y</a></p>\n<h2>Course Staff</h2>\n<h3>Instructor</h3>\n<p>Feross Aboukhadijeh (<a href=\"mailto:feross@cs.stanford.edu\">feross@cs.stanford.edu</a>)</p>\n<h3>Teaching Assistant</h3>\n<p>Esther Goldstein (<a href=\"mailto:egolds@stanford.edu\">egolds@stanford.edu</a>)</p>\n<h3>Office Hours</h3>\n<ul>\n<li>Feross: Thursday 3-5pm, Gates 323</li>\n<li>Esther: Monday 3-5pm, Wednesday 3-5pm, Huang Basement</li>\n</ul>\n<h2>Course Policies</h2>\n<h3>Communication</h3>\n<p>We will primarily use <a href=\"https://piazza.com/stanford/fall2019/cs253\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Piazza</a> for sending out course announcements and answering questions. Please make sure to <a href=\"https://piazza.com/stanford/fall2019/cs253\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">sign up</a>.</p>\n<p>We use <a href=\"https://gradescope.com\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Gradescope</a> for assignment submissions. Enroll with the code <code>97BGZB</code>.</p>\n<p>To submit anonymous feedback to us at any point during the quarter, you may use <a href=\"https://forms.gle/WqKuxA2m7oycRuTt7\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">this form</a>.</p>\n<h3>Prerequisites</h3>\n<p>CS 142, or an equivalent amount of web development experience, is a prerequisite. You should also be curious about web security and excited to learn clever attacks, defenses, and techniques for writing secure code.</p>\n<p>An introductory security course, such as CS 155, is not a formal prerequisite. The material in this course is focused specifically on the web, while CS 155 covers security more broadly.</p>\n<h3>Attendence</h3>\n<p>Attendance at lectures is mandatory. Do not enroll in this course if you are taking another course that meets at the same time.</p>\n<h3>Grading</h3>\n<ul>\n<li>Assignments (75%)</li>\n<li>Final Exam (25%)</li>\n</ul>\n<p>Each assignment is worth 15%. There is no midterm.</p>\n<h3>Final Exam</h3>\n<ul>\n<li>Tuesday, December 10, 3:30pm - 6:30pm in <a href=\"https://campus-map.stanford.edu/?srch=200-305\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">200-305</a></li>\n</ul>\n<h3>Previous Final Exams</h3>\n<ul>\n<li><a href=\"cs253-final-2019.pdf\">Final Exam 2019</a> (<a href=\"cs253-final-2019-solutions.pdf\">Solutions</a>)</li>\n<li><a href=\"cs253-sample-final.pdf\">More Sample Final Exam Questions</a> (<a href=\"cs253-sample-final-solutions.pdf\">Solutions</a>)</li>\n</ul>\n<h3>Collaboration Policy</h3>\n<p>You may discuss the assignments with other students and you may work together to come up with solutions to the problems. If you do so, you must list the name of your collaborators in the submission. Each student must write up their solutions independently.</p>\n<h3>Late Submissions</h3>\n<p>You get three “late days” in total during the quarter. You may use a late day to submit an assignment after the deadline. You can use at most three late days for any single assignment, and you may only use late days in one-day increments (no partial late days).</p>\n<p>If you submit an assignment more than 72 hours after the deadline, or if you submit an assignment late after running out of late days, you will receive <strong>no credit</strong> for the submission. Please submit your assignments on time and save your late days for extraordinary situations.</p>\n<p>If you have questions about these policies, please ask us.</p>\n<h2>Schedule</h2>\n<h3>Sep 24: What is Web Security? HTML &amp; JavaScript Review</h3>\n<ul>\n<li><a href=\"lectures/Lecture%2001.pdf\">Slides</a></li>\n<li><a href=\"https://www.youtube.com/watch?v=5JJrJGZ_LjM\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Video</a></li>\n<li>Reading<ul>\n<li><a href=\"https://developers.google.com/web/updates/2018/09/inside-browser-part1\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Inside look at modern web browser (part 1)</a></li>\n<li><a href=\"https://developers.google.com/web/updates/2018/09/inside-browser-part2\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Inside look at modern web browser (part 2)</a></li>\n<li><a href=\"https://developers.google.com/web/updates/2018/09/inside-browser-part3\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Inside look at modern web browser (part 3)</a></li>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/A_re-introduction_to_JavaScript\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">A Re-Introduction to JavaScript</a></li>\n</ul></li>\n</ul>\n<h3>Sep 26: HTTP, Cookies, Sessions</h3>\n<ul>\n<li><a href=\"lectures/Lecture%2002.pdf\">Slides</a></li>\n<li><a href=\"https://www.youtube.com/watch?v=zhnQFQ2qFtA\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Video</a></li>\n<li>Reading<ul>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Overview\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">An overview of HTTP</a></li>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Cookies\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">HTTP Cookies</a></li>\n<li>Skim: <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">HTTP headers</a></li>\n</ul></li>\n</ul>\n<h3>Oct 01: Session Attacks</h3>\n<ul>\n<li><a href=\"lectures/Lecture%2003.pdf\">Slides</a></li>\n<li><a href=\"https://www.youtube.com/watch?v=QuhgjXKzfI8\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Video</a></li>\n<li>Reading<ul>\n<li><a href=\"https://web.dev/samesite-cookies-explained/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">SameSite Cookies Explained</a></li>\n<li><a href=\"https://tools.ietf.org/html/draft-west-cookie-incrementalism-00#section-4.1\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Incrementally Better Cookies</a></li>\n<li><a href=\"https://scotthelme.co.uk/csrf-is-dead/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">CSRF Is Dead</a></li>\n</ul></li>\n</ul>\n<h3>Oct 03: Cross-Site Request Forgery, Same Origin Policy</h3>\n<ul>\n<li><a href=\"lectures/Lecture%2004.pdf\">Slides</a></li>\n<li><a href=\"https://www.youtube.com/watch?v=0-q69vAYSwo\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Video</a></li>\n<li>Reading<ul>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/Security/Same-origin_policy\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Same Origin policy</a></li>\n<li><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Cross-Site_Request_Forgery_Prevention_Cheat_Sheet.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Cross-Site Request Forgery Prevention</a></li>\n</ul></li>\n</ul>\n<h3>Oct 08: Exceptions to the Same Origin Policy, Cross-Site Script Inclusion</h3>\n<ul>\n<li><a href=\"lectures/Lecture%2005.pdf\">Slides</a></li>\n<li><a href=\"https://www.youtube.com/watch?v=ud9cVQDte3A\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Video</a></li>\n</ul>\n<h3>Oct 10: Cross-Site Scripting (XSS)</h3>\n<ul>\n<li><a href=\"lectures/Lecture%2006.pdf\">Slides</a></li>\n<li><a href=\"https://www.youtube.com/watch?v=XTcqlOFhpPI\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Video</a></li>\n<li>Reading<ul>\n<li><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Cross_Site_Scripting_Prevention_Cheat_Sheet.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Cross Site Scripting Prevention Cheat Sheet</a></li>\n<li><a href=\"https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">XSS Filter Evasion Cheat Sheet</a></li>\n</ul></li>\n</ul>\n<h3>Oct 15: Cross-Site Scripting Defenses</h3>\n<ul>\n<li><a href=\"lectures/Lecture%2007.pdf\">Slides</a></li>\n<li><a href=\"https://www.youtube.com/watch?v=PlXzrtheQGc\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Video</a></li>\n<li>Reading<ul>\n<li><a href=\"http://research.sidstamm.com/papers/csp-www2010.pdf\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Reining in the Web with Content Security Policy</a></li>\n<li><a href=\"https://storage.googleapis.com/pub-tools-public-publication-data/pdf/45542.pdf\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">CSP is Dead: Long Live CSP</a></li>\n<li><a href=\"https://developers.google.com/web/updates/2019/02/trusted-types\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Trusted Types</a></li>\n<li><a href=\"https://fastmail.blog/2015/12/20/sanitising-html-the-dom-clobbering-issue/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Sanitising HTML: the DOM clobbering issue</a></li>\n</ul></li>\n</ul>\n<h3>Oct 17: Fingerprinting and Privacy on the Web</h3>\n<ul>\n<li><strong>Guest Lecture by Pete Snyder (<a href=\"https://brave.com\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Brave Software</a>)</strong></li>\n<li><a href=\"lectures/Lecture%2008.pdf\">Slides</a></li>\n<li><a href=\"https://www.youtube.com/watch?v=OVh0oHbmla0\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Video</a></li>\n<li>Reading<ul>\n<li><a href=\"https://chromium.woolyss.com/f/OpenWPM-1-million-site-tracking-measurement.pdf\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Online tracking: A 1-million-site measurement and analysis</a></li>\n<li><a href=\"https://arxiv.org/pdf/1708.08510\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Most websites don't need to vibrate: A cost-benefit approach to improving browser security</a></li>\n<li><a href=\"https://blog.torproject.org/browser-fingerprinting-introduction-and-challenges-ahead\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Browser Fingerprinting: An Introduction and the Challenges Ahead</a></li>\n<li><a href=\"https://webkit.org/blog/8943/privacy-preserving-ad-click-attribution-for-the-web/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">WebKit Ad Click Attribution</a></li>\n<li><a href=\"https://crypto.stanford.edu/safecache/sameorigin.pdf\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Protecting Browser State from Web Privacy Attacks</a></li>\n<li>Skim: <a href=\"https://webkit.org/tracking-prevention-policy/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">WebKit Tracking Prevention Policy</a></li>\n</ul></li>\n</ul>\n<h3>Oct 22: Denial-of-service, Phishing, Side Channels</h3>\n<ul>\n<li><a href=\"lectures/Lecture%2009.pdf\">Slides</a></li>\n<li><a href=\"https://www.youtube.com/watch?v=RfC_PzVmk4w\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Video</a></li>\n<li>Reading<ul>\n<li><a href=\"https://www.usenix.org/system/files/conference/usenixsecurity13/sec13-paper_akhawe.pdf\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Alice in Warningland: A Large-Scale Field Study of Browser Security</a></li>\n<li><a href=\"http://www.sectheory.com/clickjacking.htm\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Clickjacking</a></li>\n<li><a href=\"https://www.adambarth.com/papers/2009/barth-weinberger-song.pdf\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Cross-Origin JavaScript Capability Leaks: Detection, Exploitation, and Defense</a></li>\n</ul></li>\n</ul>\n<h3>Oct 24: Code Injection</h3>\n<ul>\n<li><a href=\"lectures/Lecture%2010.pdf\">Slides</a></li>\n<li><a href=\"https://www.youtube.com/watch?v=mR7yvqWmE0M\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Video</a></li>\n<li>Reading<ul>\n<li>None</li>\n</ul></li>\n</ul>\n<h3>Oct 29: Transport Layer Security</h3>\n<ul>\n<li><a href=\"lectures/Lecture%2011.pdf\">Slides</a></li>\n<li><a href=\"https://www.youtube.com/watch?v=S8-rnPHjyxs\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Video</a></li>\n<li>Reading<ul>\n<li><a href=\"https://blog.cryptographyengineering.com/2019/09/24/looking-back-at-the-snowden-revelations/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Looking back at the Snowden revelations</a></li>\n<li><a href=\"https://transparencyreport.google.com/https/overview\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">HTTPS encryption on the web</a></li>\n</ul></li>\n</ul>\n<h3>Oct 31: HTTPS in the Real World: A Spooky Tale</h3>\n<ul>\n<li><strong>Guest Lecture by Emily Stark &amp; Chris Palmer (<a href=\"https://www.google.com/chrome/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Google Chrome</a>)</strong></li>\n<li><a href=\"lectures/Lecture%2012.pdf\">Slides</a></li>\n<li><a href=\"https://www.youtube.com/watch?v=jN26N8QS5Os\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Video</a></li>\n<li>Reading<ul>\n<li><a href=\"https://en.wikipedia.org/wiki/DigiNotar\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">DigiNotar on Wikipedia</a></li>\n<li><a href=\"https://noncombatant.org/2015/05/01/about-http-public-key-pinning/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">About Public Key Pinning</a></li>\n<li><a href=\"https://noncombatant.org/2015/11/24/what-is-hpkp-for/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">What Is HPKP For?</a></li>\n<li><a href=\"https://developers.google.com/web/updates/2015/09/HPKP-reporting-with-chrome-46\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Rolling out Public Key Pinning with HPKP Reporting</a></li>\n</ul></li>\n</ul>\n<h3>Nov 05: Authentication</h3>\n<ul>\n<li><a href=\"lectures/Lecture%2013.pdf\">Slides</a></li>\n<li><a href=\"https://www.youtube.com/watch?v=lgmGSYwJc20\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Video</a></li>\n<li>Reading<ul>\n<li><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Authentication_Cheat_Sheet.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Authentication Cheat Sheet</a></li>\n</ul></li>\n</ul>\n<h3>Nov 07: WebAuthn - The future of user authentication on the web 🤞</h3>\n<ul>\n<li><strong>Guest Lecture by Lucas Garron (<a href=\"https://github.com\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">GitHub</a>)</strong></li>\n<li><a href=\"lectures/Lecture%2014.pdf\">Slides</a></li>\n<li><a href=\"https://www.youtube.com/watch?v=_nPk2HgNpjE\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Video</a></li>\n<li>Reading<ul>\n<li><a href=\"https://webauthn.guide/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Guide to Web Authentication</a></li>\n</ul></li>\n</ul>\n<h3>Nov 12: No class</h3>\n<h3>Nov 14: Managing security concerns in a large Open Source project</h3>\n<ul>\n<li><strong>Guest Lecture by Myles Borins (<a href=\"https://nodejs.org/en/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Node.js</a> technical steering committee, <a href=\"https://www.google.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Google</a>)</strong></li>\n<li><a href=\"https://kni.sh/oss-security\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Slides</a></li>\n<li><a href=\"https://www.youtube.com/watch?v=lX6KLL0sVTU\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Video</a></li>\n<li>Reading<ul>\n<li><a href=\"https://gruss.cc/files/fantastictimers.pdf\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Fantastic Timers and Where to Find Them: High-Resolution Microarchitectural Attacks in JavaScript</a></li>\n<li><a href=\"https://nodesecroadmap.fyi\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">A Roadmap for Node.js Security</a></li>\n</ul></li>\n</ul>\n<h3>Nov 19: Server security, Safe coding practices</h3>\n<ul>\n<li><a href=\"lectures/Lecture%2017.pdf\">Slides</a></li>\n<li><a href=\"https://www.youtube.com/watch?v=Ox15IMOvWfA\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Video</a></li>\n<li>Reading<ul>\n<li><a href=\"https://snyk.io/blog/exploiting-buffer/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Exploiting Buffer</a></li>\n</ul></li>\n</ul>\n<h3>Nov 21: Local HTTP server security</h3>\n<ul>\n<li><a href=\"lectures/Lecture%2018.pdf\">Slides</a></li>\n<li><a href=\"https://www.youtube.com/watch?v=wLgcb4jZwGM\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Video</a></li>\n<li>Reading<ul>\n<li>None</li>\n</ul></li>\n</ul>\n<h3>Dec 03: DNS rebinding attacks</h3>\n<ul>\n<li><a href=\"lectures/Lecture%2019.pdf\">Slides</a></li>\n<li><a href=\"https://www.youtube.com/watch?v=bZW_55LIz0w\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Video</a></li>\n<li>Reading<ul>\n<li><a href=\"https://www.wired.com/story/chromecast-roku-sonos-dns-rebinding-vulnerability/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Millions of Streaming Devices Are Vulnerable to a Retro Web Attack</a></li>\n<li><a href=\"https://crypto.stanford.edu/dns/dns-rebinding.pdf\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Protecting Browsers from DNS Rebinding Attacks</a></li>\n</ul></li>\n</ul>\n<h3>Dec 05: Browser architecture, Writing secure code</h3>\n<ul>\n<li><a href=\"lectures/Lecture%2020.pdf\">Slides</a></li>\n<li><a href=\"https://www.youtube.com/watch?v=5aguccOpGes\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Video</a></li>\n<li>Reading<ul>\n<li><a href=\"https://seclab.stanford.edu/websec/chromium/chromium-security-architecture.pdf\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">The Security Architecture of the Chromium Browser</a></li>\n<li><a href=\"https://www.chromium.org/Home/chromium-security/corb-for-developers\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Cross-Origin Read Blocking (CORB) primer</a></li>\n<li>Skim: <a href=\"https://chromium.googlesource.com/chromium/src/+/master/services/network/cross_origin_read_blocking_explainer.md\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Cross-Origin Read Blocking (CORB) explainer</a></li>\n<li><a href=\"https://diracdeltas.github.io/blog/backdooring-js/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Backdooring Your JavaScript Using Minifier Bugs</a></li>\n<li><a href=\"https://medium.com/hackernoon/im-harvesting-credit-card-numbers-and-passwords-from-your-site-here-s-how-9a8cb347c5b5\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">I’m harvesting credit card numbers and passwords from your site. Here’s how.</a></li>\n<li><a href=\"https://shkspr.mobi/blog/2018/11/major-sites-running-unauthenticated-javascript-on-their-payment-pages/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Major sites running unauthenticated JavaScript on their payment pages</a></li>\n</ul></li>\n</ul>\n<h2>Assignments</h2>\n<h3><a href=\"assign0\">Assignment 0 – Web Programming Adventure ✈️</a></h3>\n<ul>\n<li>Assigned: Tuesday, September 24</li>\n<li>Due: Friday, October 4 at 5:00pm</li>\n</ul>\n<h3><a href=\"assign1\">Assignment 1 – Journey to the Dark Side 🌘</a></h3>\n<ul>\n<li>Assigned: Tuesday, October 8</li>\n<li>Due: Friday, October 18 at 5:00pm</li>\n</ul>\n<h3><a href=\"assign2\">Assignment 2 – Oh What a Tangled Web We Weave 🕸</a></h3>\n<ul>\n<li>Assigned: Saturday, October 26</li>\n<li>Due: Thursday, November 7 at 11:59pm</li>\n</ul>\n<h3>Assignment 3 – See Piazza</h3>\n<ul>\n<li>Assigned: Tuesday, November 12</li>\n<li>Due: Friday, November 22 at 5:00pm</li>\n</ul>\n<h3>Assignment 4 – See Piazza</h3>\n<ul>\n<li>Assigned: Mon, November 25</li>\n<li>Due: Friday, December 6 at 5:00pm</li>\n</ul>\n<br>\n<br>\n<br>\n<p>Website design by <a href=\"https://feross.org\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Feross Aboukhadijeh</a>.</p>\n\n    </div>\n  \n\n","text":"CS 253 Web Security Fall 2019\nThis course is a comprehensive overview of web security. The goal is to build an understanding of the most common web attacks and their countermeasures. Given the pervasive insecurity of the modern web landscape, there is a pressing need for programmers and system designers to improve their understanding of web security issues.\nWe'll be covering the fundamentals as well as the state-of-the-art in web security.\nTopics include: Principles of web security, attacks and countermeasures, the browser security model, web app vulnerabilities, injection, denial-of-service, TLS attacks, privacy, fingerprinting, same-origin policy, cross site scripting, authentication, JavaScript security, emerging threats, defense-in-depth, and techniques for writing secure code. Course projects include writing security exploits, defending insecure web apps, and implementing emerging web standards.\nMeeting time and place\nTuesdays and Thursdays, 1:30 PM - 2:50 PM in classroom 380-380Y\nCourse Staff Instructor\nFeross Aboukhadijeh (feross@cs.stanford.edu)\nTeaching Assistant\nEsther Goldstein (egolds@stanford.edu)\nOffice Hours\nFeross: Thursday 3-5pm, Gates 323\nEsther: Monday 3-5pm, Wednesday 3-5pm, Huang Basement\nCourse Policies Communication\nWe will primarily use Piazza for sending out course announcements and answering questions. Please make sure to sign up.\nWe use Gradescope for assignment submissions. Enroll with the code 97BGZB.\nTo submit anonymous feedback to us at any point during the quarter, you may use this form.\nPrerequisites\nCS 142, or an equivalent amount of web development experience, is a prerequisite. You should also be curious about web security and excited to learn clever attacks, defenses, and techniques for writing secure code.\nAn introductory security course, such as CS 155, is not a formal prerequisite. The material in this course is focused specifically on the web, while CS 155 covers security more broadly.\nAttendence\nAttendance at lectures is mandatory. Do not enroll in this course if you are taking another course that meets at the same time.\nGrading\nAssignments (75%)\nFinal Exam (25%)\nEach assignment is worth 15%. There is no midterm.\nFinal Exam\nTuesday, December 10, 3:30pm - 6:30pm in 200-305\nPrevious Final Exams\nFinal Exam 2019 (Solutions)\nMore Sample Final Exam Questions (Solutions)\nCollaboration Policy\nYou may discuss the assignments with other students and you may work together to come up with solutions to the problems. If you do so, you must list the name of your collaborators in the submission. Each student must write up their solutions independently.\nLate Submissions\nYou get three “late days” in total during the quarter. You may use a late day to submit an assignment after the deadline. You can use at most three late days for any single assignment, and you may only use late days in one-day increments (no partial late days).\nIf you submit an assignment more than 72 hours after the deadline, or if you submit an assignment late after running out of late days, you will receive no credit for the submission. Please submit your assignments on time and save your late days for extraordinary situations.\nIf you have questions about these policies, please ask us.\nSchedule Sep 24: What is Web Security? HTML &amp; JavaScript Review\nSlides\nVideo\nReading\nInside look at modern web browser (part 1)\nInside look at modern web browser (part 2)\nInside look at modern web browser (part 3)\nA Re-Introduction to JavaScript\nSep 26: HTTP, Cookies, Sessions\nSlides\nVideo\nReading\nAn overview of HTTP\nHTTP Cookies\nSkim: HTTP headers\nOct 01: Session Attacks\nSlides\nVideo\nReading\nSameSite Cookies Explained\nIncrementally Better Cookies\nCSRF Is Dead\nOct 03: Cross-Site Request Forgery, Same Origin Policy\nSlides\nVideo\nReading\nSame Origin policy\nCross-Site Request Forgery Prevention\nOct 08: Exceptions to the Same Origin Policy, Cross-Site Script Inclusion\nSlides\nVideo\nOct 10: Cross-Site Scripting (XSS)\nSlides\nVideo\nReading\nCross Site Scripting Prevention Cheat Sheet\nXSS Filter Evasion Cheat Sheet\nOct 15: Cross-Site Scripting Defenses\nSlides\nVideo\nReading\nReining in the Web with Content Security Policy\nCSP is Dead: Long Live CSP\nTrusted Types\nSanitising HTML: the DOM clobbering issue\nOct 17: Fingerprinting and Privacy on the Web\nGuest Lecture by Pete Snyder (Brave Software)\nSlides\nVideo\nReading\nOnline tracking: A 1-million-site measurement and analysis\nMost websites don't need to vibrate: A cost-benefit approach to improving browser security\nBrowser Fingerprinting: An Introduction and the Challenges Ahead\nWebKit Ad Click Attribution\nProtecting Browser State from Web Privacy Attacks\nSkim: WebKit Tracking Prevention Policy\nOct 22: Denial-of-service, Phishing, Side Channels\nSlides\nVideo\nReading\nAlice in Warningland: A Large-Scale Field Study of Browser Security\nClickjacking\nCross-Origin JavaScript Capability Leaks: Detection, Exploitation, and Defense\nOct 24: Code Injection\nSlides\nVideo\nReading\nNone\nOct 29: Transport Layer Security\nSlides\nVideo\nReading\nLooking back at the Snowden revelations\nHTTPS encryption on the web\nOct 31: HTTPS in the Real World: A Spooky Tale\nGuest Lecture by Emily Stark &amp; Chris Palmer (Google Chrome)\nSlides\nVideo\nReading\nDigiNotar on Wikipedia\nAbout Public Key Pinning\nWhat Is HPKP For?\nRolling out Public Key Pinning with HPKP Reporting\nNov 05: Authentication\nSlides\nVideo\nReading\nAuthentication Cheat Sheet\nNov 07: WebAuthn - The future of user authentication on the web 🤞\nGuest Lecture by Lucas Garron (GitHub)\nSlides\nVideo\nReading\nGuide to Web Authentication\nNov 12: No class Nov 14: Managing security concerns in a large Open Source project\nGuest Lecture by Myles Borins (Node.js technical steering committee, Google)\nSlides\nVideo\nReading\nFantastic Timers and Where to Find Them: High-Resolution Microarchitectural Attacks in JavaScript\nA Roadmap for Node.js Security\nNov 19: Server security, Safe coding practices\nSlides\nVideo\nReading\nExploiting Buffer\nNov 21: Local HTTP server security\nSlides\nVideo\nReading\nNone\nDec 03: DNS rebinding attacks\nSlides\nVideo\nReading\nMillions of Streaming Devices Are Vulnerable to a Retro Web Attack\nProtecting Browsers from DNS Rebinding Attacks\nDec 05: Browser architecture, Writing secure code\nSlides\nVideo\nReading\nThe Security Architecture of the Chromium Browser\nCross-Origin Read Blocking (CORB) primer\nSkim: Cross-Origin Read Blocking (CORB) explainer\nBackdooring Your JavaScript Using Minifier Bugs\nI’m harvesting credit card numbers and passwords from your site. Here’s how.\nMajor sites running unauthenticated JavaScript on their payment pages\nAssignments Assignment 0 – Web Programming Adventure ✈️\nAssigned: Tuesday, September 24\nDue: Friday, October 4 at 5:00pm\nAssignment 1 – Journey to the Dark Side 🌘\nAssigned: Tuesday, October 8\nDue: Friday, October 18 at 5:00pm\nAssignment 2 – Oh What a Tangled Web We Weave 🕸\nAssigned: Saturday, October 26\nDue: Thursday, November 7 at 11:59pm\nAssignment 3 – See Piazza\nAssigned: Tuesday, November 12\nDue: Friday, November 22 at 5:00pm\nAssignment 4 – See Piazza\nAssigned: Mon, November 25\nDue: Friday, December 6 at 5:00pm\nWebsite design by Feross Aboukhadijeh.","ctext":"CS 253网络安全秋季2019\n本课程是网络安全的全面概述。 目的是加深对最常见的Web攻击及其对策的理解。 鉴于现代Web领域普遍存在的不安全因素，迫切需要程序员和系统设计人员提高对Web安全问题的理解。\n我们将介绍Web安全的基础知识和最新技术。\n主题包括：网络安全原理，攻击和对策，浏览器安全模型，网络应用漏洞，注入，拒绝服务，TLS攻击，隐私，指纹识别，同源策略，跨站点脚本，身份验证，JavaScript安全， 新兴的威胁，纵深防御以及编写安全代码的技术。 课程项目包括编写安全漏洞，防御不安全的Web应用程序以及实现新兴的Web标准。\n会议时间和地点\n星期二和星期四，1:30 PM-2:50 PM在教室380-380Y\n课程教员\n阿布·哈迪贾（Abu Khadija）的机会（@ X. Stanford.Member的机会）\n教学助手\nEsther Goldstein（egolds@stanford.edu）\n工作时间\nFeross：星期四3-5pm，盖茨323\n以斯帖：星期一3-5pm，星期三3-5pm，黄地下室\n课程政策交流\n我们将主要使用Piazza发出课程公告和回答问题。 请确保注册。\n我们使用Gradescope提交作业。 注册代码为97BGZB。\n要在本季度的任何时候向我们提交匿名反馈，您可以使用此表格。\n先决条件\n先决条件是CS 142或同等的Web开发经验。 您还应该对Web安全感到好奇，并乐于学习聪明的攻击，防御措施和编写安全代码的技术。\n入门级安全课程，例如CS 155，不是正式的先决条件。 本课程中的材料专门针对Web，而CS 155涵盖了更广泛的安全性。\n出席人数\n必须参加讲座。 如果您要同时修读另一门课程，请不要注册该课程。\n等级\n作业（75％）\n期末考试（25％）\n每项作业的价值为15％。 没有期中考试。\n期末考试\n200-305年12月10日，星期二，下午3:30-下午6:30\n以前的期末考试\n2019年期末考试（解决方案）\n更多期末考试样题（解决方案）\n合作政策\n您可以与其他学生讨论作业，也可以一起提出问题的解决方案。 如果这样做，则必须在提交中列出协作者的姓名。 每个学生必须独立编写他们的解决方案。\n逾期提交\n在该季度中，您总共有3个“后期”。 您可以在截止日期之后用较晚的时间提交作业。 您一次最多只能使用三天的延迟时间，并且只能以一天的增量使用延迟的时间（不能部分延迟）。\n如果您在截止日期后超过72小时提交作业，或者如果您在迟到的工作日后提交作业，您将不会获得任何信用。 请准时提交作业，并在特殊情况下节省您的延迟时间。\n如果您对这些政策有疑问，请询问我们。\n如果您对这些政策有疑问，请询问我们。...\n滑梯\n视频\n阅读\n深入了解现代Web浏览器（第1部分）\n深入了解现代Web浏览器（第2部分）\n深入了解现代Web浏览器（第3部分）\nJavaScript的重新介绍\n9月26日：HTTP，Cookie，会话\n滑梯\n视频\n阅读\nHTTP概述\nHTTP Cookie\n略读：HTTP标头\n10月1日：会话攻击\n滑梯\n视频\n阅读\nSameSite Cookies解释\n逐步改善Cookie\nCSRF已死\n10月3日：跨站点请求伪造，同源策略\n滑梯\n视频\n阅读\n同源政策\n跨站请求伪造预防\n10月8日：相同起源策略的例外，跨站点脚本包含\n滑梯\n视频\n10月10日：跨站脚本（XSS）\n滑梯\n视频\n阅读\n跨站点脚本防护备忘单\nXSS过滤器规避速查表\n10月15日：跨站脚本防护\n滑梯\n视频\n阅读\n通过内容安全策略控制Web\nCSP已死：CSP万岁\n可信类型\n清理HTML：DOM破坏问题\n10月17日：网络上的指纹和隐私\nPete Snyder的客座演讲（勇敢的软件）\n滑梯\n视频\n阅读\n在线跟踪：一百万个站点的测量和分析\n大多数网站不需要振动：一种提高浏览器安全性的成本效益方法\n浏览器指纹：简介和未来的挑战\nWebKit广告点击归因\n保护浏览器状态免受Web隐私攻击\n略读：WebKit跟踪预防策略\n10月22日：拒绝服务，网络钓鱼，侧边渠道\n滑梯\n视频\n阅读\n爱丽丝梦游仙境：浏览器安全性的大规模实地研究\n点击劫持\n跨域JavaScript功能泄漏：检测，利用和防御\n10月24日：代码注入\n滑梯\n视频\n阅读\n没有\n10月29日：传输层安全性\n滑梯\n视频\n阅读\n回顾斯诺登的启示\n网络上的HTTPS加密\n10月31日：真实世界中的HTTPS：诡异的故事\n10月31日：真实世界中的HTTPS：诡异的故事...\n滑梯\n视频\n阅读\n维基百科上的DigiNotar\n关于公钥固定\nHPKP的用途是什么？\n通过HPKP报告推出公钥固定\n11月5日：身份验证\n滑梯\n视频\n阅读\n认证备忘单\n11月7日：WebAuthn-网络上用户身份验证的未来\nLucas Garron的客座演讲（GitHub）\n滑梯\n视频\n阅读\nWeb认证指南\n11月12日：不上课11月14日：管理大型开源项目中的安全问题\nMyles Borins的客座演讲（Node.js技术指导委员会，Google）\n滑梯\n视频\n阅读\n奇妙的计时器以及在哪里找到它们：JavaScript中的高分辨率微体系结构攻击\nNode.js安全路线图\n11月19日：服务器安全性，安全的编码做法\n滑梯\n视频\n阅读\n开发缓冲区\n11月21日：本地HTTP服务器安全性\n滑梯\n视频\n阅读\n没有\n12月3日：DNS重新绑定攻击\n滑梯\n视频\n阅读\n成千上万的流媒体设备容易遭受复古Web攻击\n保护浏览器免受DNS重新绑定攻击\n12月5日：浏览器架构，编写安全代码\n滑梯\n视频\n阅读\nChromium浏览器的安全架构\n跨域读取阻止（CORB）底漆\n略读：跨域读取阻止（CORB）解释器\n使用Minifier错误对JavaScript进行后门操作\n我正在从您的网站中获取信用卡号和密码。 就是这样。\n主要网站在其付款页面上运行未经身份验证的JavaScript\n作业作业0 – Web编程冒险✈️\n分配：9月24日，星期二\n截止时间：10月4日，星期五，下午5:00\n作业1 –黑暗之旅Side\n分配：10月8日，星期二\n截止时间：10月18日，星期五，下午5:00\n作业2 –哦，我们编织的网有多纠结🕸\n分配：10月26日，星期六\n截止日期：11月7日，星期四，晚上11:59\n作业3-见广场\n分配：11月12日，星期二\n截止日期：11月22日，星期五，下午5:00\n作业4-见广场\n指派：11月25日，星期一\n截止日期：12月6日，星期五，下午5:00\n网站设计由Feross Aboukhadijeh设计。\n"}

{"l":"https://thoughtbot.com/blog/reading-an-explain-analyze-query-plan","n":"Reading a Postgres EXPLAIN ANALYZE Query Plan","html":"\n<nav class=\"site-nav\">\n<a class=\"site-nav-skip-link\" href=\"#main-content\">Skip to main content</a>\n<a class=\"site-nav-logo-link line-height-zero\" href=\"/blog\"><svg xmlns=\"http://www.w3.org/2000/svg\" role=\"img\" width=\"146\" height=\"35\" viewBox=\"0 0 146 35\" aria-labelledby=\"aof9gw1w01kkttj86vfkhnjhlraupbm4\" class=\"site-nav-logo\"><title id=\"aof9gw1w01kkttj86vfkhnjhlraupbm4\">Blog home</title><g><path d=\"M25.077 25.778l-.432-.43c.235-.18.387-.463.387-.78 0-.543-.44-.982-.983-.982-.544 0-.983.44-.983.98 0 .32.154.606.392.785l-.433.432c-.348-.29-.57-.785-.57-1.273 0-.392.145-.534.38-1.085h-.193v-4.96h-.277v10.557l.277.267v.75h-4.97v-.75l.67-.353h.157V25.63h-1.655v3.392l.552.267v.846l-4.695.008v-.855l.455-.337-.006-10.488h-.448v4.96h-.256c.236.55.38.692.38 1.084 0 .486-.22.95-.57 1.243l-.43-.418c.237-.18.39-.456.39-.777 0-.542-.44-.977-.98-.977-.544 0-.984.442-.984.983 0 .318.152.602.387.78l-.433.433c-.345-.292-.605-.726-.605-1.212 0-.39.34-.75.34-1.027v-7.695c0-.296.295-.533.59-.533h14.09c.297 0 .507.238.507.534v7.695c.55.276.445.635.445 1.027 0 .484-.153.92-.498 1.21zM14.05 9.094h7.183c.296 0 .582.132.582.427v4.677c0 .294-.286.685-.582.685H14.05c-.293 0-.52-.39-.52-.685V9.52c0-.294.227-.426.52-.426zm6.446-1.52l-.433.616c-.548-.525-1.437-.874-2.418-.874-.985 0-1.877.35-2.425.88l-.432-.617c.684-.616 1.71-1.006 2.857-1.006 1.143 0 2.167.388 2.85 1zm-.007-.96c-.745-.563-1.746-.872-2.818-.872-1.073 0-2.073.31-2.817.87-.176.134-.33.276-.465.427l-.436-.622C14.794 5.558 16.147 5 17.672 5c1.49 0 2.813.532 3.658 1.358l-.434.618c-.12-.128-.256-.25-.407-.363zM17.644 3.49c1.846 0 3.488.662 4.53 1.69l-.43.612c-.894-.94-2.398-1.56-4.1-1.56-1.706 0-3.214.62-4.107 1.566l-.43-.614c1.042-1.03 2.686-1.694 4.537-1.694zM17.642.077C8.022.077.225 7.857.225 17.46c0 9.598 7.798 17.38 17.417 17.38 9.62 0 17.417-7.782 17.417-17.38C35.06 7.857 27.26.076 17.64.076z\"></path><path d=\"M15.812 11.97c-.257 0-.467-.21-.467-.467 0-.26.21-.467.467-.467.26 0 .47.208.47.467 0 .258-.21.467-.47.467zm0-1.38c-.504 0-.913.41-.913.913 0 .503.408.913.912.913.505 0 .915-.41.915-.913 0-.504-.41-.913-.915-.913zM19.483 11.97c-.258 0-.467-.21-.467-.467 0-.26.21-.467.467-.467.258 0 .47.208.47.467 0 .258-.212.467-.47.467zm0-1.38c-.506 0-.916.41-.916.913 0 .503.41.913.916.913.505 0 .915-.41.915-.913 0-.504-.41-.913-.915-.913z\"></path></g><g><path d=\"M61.728 23.69h-2.406v-5.67c0-1.06-.17-1.832-.51-2.313-.34-.482-.916-.722-1.725-.722-.965 0-1.71.346-2.236 1.04v7.665h-2.405V7.765h2.406v6.116c.74-.622 1.563-.934 2.47-.934 2.94 0 4.408 1.692 4.408 5.075v5.67M63.45 18.425c0-.765.126-1.483.374-2.156s.603-1.253 1.065-1.742c.46-.488 1.02-.874 1.68-1.157.66-.282 1.395-.424 2.204-.424.81 0 1.54.142 2.193.425.653.284 1.21.673 1.672 1.17.46.494.818 1.075 1.074 1.74.256.665.383 1.38.383 2.145 0 .764-.124 1.48-.372 2.144-.25.664-.604 1.245-1.065 1.74-.46.496-1.022.885-1.682 1.168-.66.283-1.395.425-2.204.425-.823 0-1.56-.142-2.214-.425-.653-.283-1.21-.67-1.67-1.157-.463-.488-.818-1.065-1.066-1.73-.248-.665-.373-1.387-.373-2.165zm2.47 0c0 1.06.253 1.903.757 2.526.504.624 1.203.935 2.097.935.895 0 1.594-.31 2.098-.934.503-.622.755-1.464.755-2.525 0-1.062-.252-1.9-.755-2.517-.504-.615-1.203-.923-2.098-.923-.894 0-1.593.308-2.097.923-.504.616-.756 1.455-.756 2.517zM84.975 23.69H82.76l-.105-.785c-.71.665-1.555.998-2.534.998-2.866 0-4.3-1.65-4.3-4.948v-5.818h2.406v5.648c0 1.062.178 1.837.532 2.326.355.49.916.733 1.682.733.937 0 1.647-.325 2.13-.977v-7.73h2.405V23.69M91.546 29c-.824 0-1.547-.086-2.172-.256-.625-.17-1.143-.4-1.554-.69-.412-.29-.724-.623-.937-.998-.213-.375-.32-.775-.32-1.2 0-1.033.597-1.82 1.79-2.357-.668-.37-1.002-.857-1.002-1.466 0-.637.37-1.132 1.108-1.486-1.12-.78-1.682-1.918-1.682-3.42 0-.593.1-1.15.3-1.665.197-.517.48-.96.85-1.328.37-.368.82-.658 1.352-.87.532-.212 1.132-.32 1.8-.32.95 0 1.78.228 2.49.68.682-.34 1.47-.51 2.364-.51h.532l-.19 1.55h-.81c-.242 0-.512.022-.81.065.497.693.745 1.486.745 2.378 0 .566-.096 1.1-.288 1.603-.19.504-.472.946-.84 1.328-.37.382-.82.683-1.353.903-.533.22-1.133.33-1.8.33-.44 0-.852-.043-1.235-.128-.213.113-.32.255-.32.425 0 .127.047.234.14.318.09.085.244.163.457.234.213.07.5.137.862.2.362.065.82.132 1.374.202.468.07.95.163 1.447.277.497.112.95.282 1.363.508.412.227.752.524 1.022.892s.42.842.447 1.422c0 1.02-.447 1.837-1.34 2.453-.896.616-2.16.924-3.79.924zm-.47-14.228c-.68 0-1.202.213-1.564.637-.362.424-.543.997-.543 1.72 0 .72.184 1.295.553 1.72.37.424.894.636 1.576.636.68 0 1.202-.216 1.563-.647.362-.433.544-1.01.544-1.732s-.185-1.292-.554-1.71c-.37-.417-.894-.626-1.576-.626zm.576 9.534l-1.47-.212c-.453.14-.822.346-1.106.615-.284.268-.426.587-.426.955 0 .48.25.867.745 1.157.497.29 1.193.436 2.087.436.894 0 1.614-.142 2.16-.425.547-.283.82-.65.82-1.104 0-.412-.24-.72-.723-.925-.484-.205-1.18-.37-2.088-.5zM121.32 23.903c-1.092 0-2.03-.347-2.81-1.04l-.085.827h-2.235V7.765h2.406v6.094c.695-.61 1.604-.914 2.725-.914.767 0 1.463.142 2.088.425.624.284 1.156.67 1.596 1.158.44.49.78 1.07 1.022 1.74.242.674.362 1.392.362 2.157 0 .764-.117 1.48-.35 2.144-.235.664-.572 1.245-1.012 1.74-.44.496-.973.885-1.597 1.168-.626.283-1.328.425-2.11.425zm-.19-8.918c-.824 0-1.47.304-1.938.913-.47.608-.703 1.45-.703 2.527 0 1.104.233 1.957.702 2.558.468.602 1.114.902 1.937.902.85 0 1.53-.32 2.033-.966.504-.645.755-1.476.755-2.495 0-1.02-.248-1.848-.745-2.485-.496-.637-1.178-.955-2.044-.955zM107.016 23.69h-2.406v-5.67c0-1.06-.17-1.832-.51-2.313-.342-.482-.917-.722-1.726-.722-.965 0-1.71.346-2.235 1.04v7.665h-2.407V7.765h2.406v6.116c.737-.622 1.56-.934 2.47-.934 2.937 0 4.406 1.692 4.406 5.075v5.67M114.393 21.928l-.213 1.975h-1.83c-.47 0-.88-.07-1.236-.213-.355-.14-.65-.332-.884-.573-.234-.24-.408-.524-.52-.85-.115-.325-.172-.68-.172-1.06V15.09h-1.597l.214-1.953h1.384V10l2.406-.254v3.39h2.47v1.955h-2.47v5.012c0 .44.014.782.043 1.03.028.247.1.428.213.54.113.115.29.185.532.213.24.03.575.043 1 .043h.66M127.674 18.425c0-.765.124-1.483.373-2.156.248-.673.603-1.253 1.064-1.742.463-.488 1.023-.874 1.683-1.157.66-.282 1.395-.424 2.204-.424.81 0 1.54.142 2.193.425.653.284 1.21.673 1.67 1.17.463.494.82 1.075 1.077 1.74.255.665.383 1.38.383 2.145 0 .764-.124 1.48-.373 2.144-.248.664-.603 1.245-1.064 1.74-.46.496-1.022.885-1.682 1.168-.66.283-1.394.425-2.203.425-.823 0-1.56-.142-2.214-.425-.653-.283-1.21-.67-1.672-1.157-.46-.488-.815-1.065-1.063-1.73-.25-.665-.373-1.387-.373-2.165zm2.47 0c0 1.06.252 1.903.756 2.526.504.624 1.203.935 2.097.935.894 0 1.593-.31 2.097-.934.504-.622.756-1.464.756-2.525 0-1.062-.252-1.9-.756-2.517-.504-.615-1.203-.923-2.097-.923-.894 0-1.593.308-2.097.923-.504.616-.756 1.455-.756 2.517zM145.09 21.928l-.213 1.975h-1.83c-.47 0-.88-.07-1.236-.213-.354-.14-.65-.332-.883-.573-.234-.24-.408-.524-.52-.85-.115-.325-.172-.68-.172-1.06V15.09h-1.597l.213-1.953h1.385V10l2.406-.254v3.39h2.47v1.955h-2.47v5.012c0 .44.015.782.044 1.03.028.247.1.428.213.54.113.115.29.185.532.213.24.03.574.043 1 .043h.66M50.723 21.928l-.213 1.975h-1.83c-.47 0-.88-.07-1.236-.213-.355-.14-.65-.332-.884-.573-.234-.24-.408-.524-.522-.85-.113-.325-.17-.68-.17-1.06V15.09H44.27l.214-1.953h1.384V10l2.406-.254v3.39h2.47v1.955h-2.47v5.012c0 .44.014.782.043 1.03.028.247.1.428.213.54.113.115.29.185.532.213.24.03.575.043 1 .043h.66\"></path></g></svg>\n\n</a><ul class=\"site-nav-links\">\n<li>\n<a class=\"site-nav-link\" href=\"/blog/tags\">All Topics</a>\n</li>\n<li>\n<a class=\"site-nav-link\" href=\"/blog/design\">Design</a>\n</li>\n<li>\n<a class=\"site-nav-link\" href=\"/blog/web\">Web</a>\n</li>\n<li>\n<a class=\"site-nav-link\" href=\"/blog/ios\">iOS</a>\n</li>\n<li>\n<a class=\"site-nav-link\" href=\"/blog/android\">Android</a>\n</li>\n<li>\n<a class=\"site-nav-link\" href=\"/blog/search\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"512\" height=\"512\" viewBox=\"0 0 310.42 310.42\" role=\"img\" aria-labelledby=\"a6829wmpdakb4vop7qipdboxohs5o5ny\"><title id=\"a6829wmpdakb4vop7qipdboxohs5o5ny\">Search</title>\n  <path d=\"M273.587 214.965c49.11-49.11 49.11-129.02 0-178.132-49.11-49.11-129.02-49.11-178.13 0C53.793 78.497 47.483 140.463 76.51 188.85c0 0 2.085 3.498-.73 6.312-16.066 16.064-64.264 64.263-64.264 64.263-12.79 12.79-15.836 30.675-4.493 42.02l1.953 1.95c11.343 11.346 29.23 8.302 42.02-4.49l64.127-64.127c2.95-2.95 6.448-.866 6.448-.866 48.39 29.026 110.356 22.717 152.02-18.947zM118.71 191.71c-36.287-36.288-36.286-95.332.002-131.62 36.288-36.287 95.332-36.288 131.62 0 36.287 36.287 36.287 95.332 0 131.62-36.29 36.286-95.332 36.286-131.62 0z\" fill=\"#454547\"></path>\n  <path d=\"M126.75 118.424c-1.69 0-3.406-.332-5.06-1.03-6.612-2.8-9.705-10.427-6.907-17.04 17.586-41.558 65.703-61.06 107.26-43.475 6.612 2.794 9.705 10.422 6.907 17.034-2.8 6.612-10.425 9.703-17.04 6.906-28.353-11.997-61.185 1.31-73.182 29.664-2.1 4.96-6.913 7.938-11.978 7.938z\" fill=\"#454547\"></path>\n</svg>\n\n</a></li>\n</ul>\n<a class=\"hiring-cta\" onclick=\"analytics.track('Blog Hiring Button', { category: 'Click' });\" href=\"/jobs\">We're hiring!</a>\n</nav>\n\n<div class=\"container\">\n\n<article class=\"post text\" data-url=\"/blog/reading-an-explain-analyze-query-plan\" id=\"main-content\" itemscope=\"\" itemtype=\"https://schema.org/CreativeWork\" role=\"main\">\n<header>\n<h1 class=\"title\">\nReading a Postgres EXPLAIN ANALYZE Query Plan\n</h1>\n<div class=\"meta\">\n<div class=\"meta-author\">\n<a href=\"/blog/authors/caleb-hearth\">Caleb Hearth</a>\n</div>\n<time class=\"meta-date\" datetime=\"2020-03-31T21:16:07Z\" itemprop=\"dateModified\">\nJuly 26, 2016\n<span class=\"meta-updated\">updated on</span>\nMarch 31, 2020\n</time>\n<ul class=\"meta-tag-list\">\n<li class=\"meta-tag-item\">\n<a href=\"/blog/tags/postgres\">postgres</a>\n</li>\n<li class=\"meta-tag-item\">\n<a href=\"/blog/tags/performance\">performance</a>\n</li>\n<li class=\"meta-tag-item\">\n<a href=\"/blog/tags/data\">data</a>\n</li>\n<li class=\"meta-tag-item\">\n<a href=\"/blog/tags/sql\">sql</a>\n</li>\n</ul>\n\n</div>\n\n</header>\n<div class=\"post-body\">\n<p>The most powerful tool at our disposal for understanding and optimizing SQL\nqueries is <a href=\"https://www.postgresql.org/docs/9.5/static/sql-explain.html\"><code>EXPLAIN ANALYZE</code></a>, which is a Postgres command that accepts a\nstatement such as <code>SELECT ...</code>, <code>UPDATE ...</code>, or <code>DELETE ...</code>, executes the\nstatement, and instead of returning the data provides a query plan detailing\nwhat approach the planner took to executing the statement provided.</p>\n\n<p>Here’s a query pulled from the <a href=\"https://www.postgresql.org/docs/9.5/static/using-explain.html\">Postgres Using EXPLAIN page</a>:</p>\n<div class=\"highlight\"><pre class=\"highlight sql\"><code><span class=\"k\">EXPLAIN</span> <span class=\"k\">ANALYZE</span> <span class=\"k\">SELECT</span> <span class=\"o\">*</span>\n<span class=\"k\">FROM</span> <span class=\"n\">tenk1</span> <span class=\"n\">t1</span><span class=\"p\">,</span> <span class=\"n\">tenk2</span> <span class=\"n\">t2</span>\n<span class=\"k\">WHERE</span> <span class=\"n\">t1</span><span class=\"p\">.</span><span class=\"n\">unique1</span> <span class=\"o\">&lt;</span> <span class=\"mi\">100</span> <span class=\"k\">AND</span> <span class=\"n\">t1</span><span class=\"p\">.</span><span class=\"n\">unique2</span> <span class=\"o\">=</span> <span class=\"n\">t2</span><span class=\"p\">.</span><span class=\"n\">unique2</span>\n<span class=\"k\">ORDER</span> <span class=\"k\">BY</span> <span class=\"n\">t1</span><span class=\"p\">.</span><span class=\"n\">fivethous</span><span class=\"p\">;</span>\n</code></pre></div>\n<p>And the query plan it generates:</p>\n<div class=\"highlight\"><pre class=\"highlight plaintext\"><code>                                                                 QUERY PLAN\n--------------------------------------------------------------------------------------------------------------------------------------------\n Sort  (cost=717.34..717.59 rows=101 width=488) (actual time=7.761..7.774 rows=100 loops=1)\n   Sort Key: t1.fivethous\n   Sort Method: quicksort  Memory: 77kB\n   -&gt;  Hash Join  (cost=230.47..713.98 rows=101 width=488) (actual time=0.711..7.427 rows=100 loops=1)\n         Hash Cond: (t2.unique2 = t1.unique2)\n         -&gt;  Seq Scan on tenk2 t2  (cost=0.00..445.00 rows=10000 width=244) (actual time=0.007..2.583 rows=10000 loops=1)\n         -&gt;  Hash  (cost=229.20..229.20 rows=101 width=244) (actual time=0.659..0.659 rows=100 loops=1)\n               Buckets: 1024  Batches: 1  Memory Usage: 28kB\n               -&gt;  Bitmap Heap Scan on tenk1 t1  (cost=5.07..229.20 rows=101 width=244) (actual time=0.080..0.526 rows=100 loops=1)\n                     Recheck Cond: (unique1 &lt; 100)\n                     -&gt;  Bitmap Index Scan on tenk1_unique1  (cost=0.00..5.04 rows=101 width=0) (actual time=0.049..0.049 rows=100 loops=1)\n                           Index Cond: (unique1 &lt; 100)\n Planning time: 0.194 ms\n Execution time: 8.008 ms\n</code></pre></div>\n<p>Postgres builds a tree structure of plan nodes representing the different\nactions taken, with the root and each <code>-&gt;</code> pointing to one of them. In some\ncases <code>EXPLAIN ANALYZE</code> provides additional execution statistics beyond the\nexecution times and row counts, such as <code>Sort</code> and <code>Hash</code> above. Any line other\nthan the first without an <code>-&gt;</code> is such information, so the structure of the\nquery is:</p>\n<div class=\"highlight\"><pre class=\"highlight plaintext\"><code>Sort\n└── Hash Join\n    ├── Seq Scan\n    └── Hash\n        └── Bitmap Heap Scan\n            └── Bitmap Index Scan\n</code></pre></div>\n<p>Each tree’s branches represent sub-actions, and you’d work inside-out to\ndetermine what’s happening “first” (though the order of nodes at the same level\ncould be different).</p>\n\n<p>The first thing done is a <code>Bitmap Index Scan</code> on the <code>tenk_unique1</code> index:</p>\n<div class=\"highlight\"><pre class=\"highlight plaintext\"><code>-&gt;  Bitmap Index Scan on tenk1_unique1  (cost=0.00..5.04 rows=101 width=0) (actual time=0.049..0.049 rows=100 loops=1)\n      Index Cond: (unique1 &lt; 100)\n</code></pre></div>\n<p>This corresponds to the SQL <code>WHERE t1.unique1 &lt; 100</code>. Postgres is finding the\nlocations of the rows matching the index condition <code>unique1 &lt; 100</code>. The rows\nthemselves aren’t being returned here. The cost estimate <code>(cost=0.00..5.04\nrows=101 width=0)</code> means that Postgres expects that it will “cost” 5.04 of an <u title=\"The estimated cost is computed as (disk pages read * seq_page_cost) +\n(rows scanned * cpu_tuple_cost).\">arbitrary unit of computation</u> to find\nthese values. The 0.00 is the cost at which this node can begin working (in this\ncase, just startup time for the query). <code>rows</code> is the estimated number of rows\nthis Index Scan will return, and <code>width</code> is the estimated size in bytes of the\nreturned rows (0 because we only care about the location, not the content of the\nrows).</p>\n\n<p>Because we ran <code>EXPLAIN</code> with the <code>ANALYZE</code> option, the query was actually\nexecuted and timing information was captured. <code>(actual time=0.049..0.049\nrows=100 loops=1)</code> means that the index scan was executed 1 time (the <code>loops</code>\nvalue), that it returned 100 rows, and that the actual time was 0.. In the case\nof a node executed more than once, the actual time is an average of each\niteration and you would multiply the value by the number of loops to get real\ntime. The range values may also differ which gives an idea of min/max times\nspent. This establishes a ratio for the costs that each cost unit of <span style=\"white-space: nowrap\">0.049ms / 5.04 units ≈ 0.01ms/unit</span> for this\nquery.</p>\n\n<p>The results of the Index Scan are passed up to a <code>Bitmap Heap Scan</code> action. In\nthis node, Postgres is taking the locations of the rows in the tenk1 table,\naliased as t1, where <code>unique1 &lt; 100</code> and fetching the rows from the table\nitself.</p>\n<div class=\"highlight\"><pre class=\"highlight plaintext\"><code>-&gt;  Bitmap Heap Scan on tenk1 t1  (cost=5.07..229.20 rows=101 width=244) (actual time=0.080..0.526 rows=100 loops=1)\n      Recheck Cond: (unique1 &lt; 100)\n</code></pre></div>\n<p>We can see that the cost expectations, when multiplied by the 0.01 value we\ncalculated, would mean a rough expected time of <span style=\"white-space:\nnowrap\">(229.20 - 5.07) * 0.01 ≈ 2.24ms</span>, and we see an actual time of\n0.526ms per row, which is off by a factor of 4. This may be because the cost\nestimate is an upper bound and not all rows needed to be read, or because the\nrecheck condition is always true.</p>\n\n<p>The combination of <code>Bitmap Index Scan</code> and <code>Bitmap Heap Scan</code> is much more\nexpensive than reading the rows sequentially from the table (a <code>Seq Scan</code>), but\nbecause relatively few rows need to be visited in this case the two step process\nends up being faster. This is further sped by sorting the rows into physical\norder before fetching them, which minimizes the cost of separate fetches. The\n“bitmap” in the node names does the sorting.</p>\n\n<p>The results of the heap scan, those rows from tenk1 for which <code>unique1 &lt; 100</code> is\ntrue, are inserted into an in-memory Hash table as they are read. As we can see\nby the costs, this takes no time at all.</p>\n<div class=\"highlight\"><pre class=\"highlight plaintext\"><code>-&gt;  Hash  (cost=229.20..229.20 rows=101 width=244) (actual time=0.659..0.659 rows=100 loops=1)\n      Buckets: 1024  Batches: 1  Memory Usage: 28kB\n</code></pre></div>\n<p>The Hash node includes information about number of hash buckets and batches, as\nwell as peak memory usage. If Batches &gt; 1 there’s also disk usage involved, but\nthat is not shown. The memory usage makes sense at <span style=\"white-space:\nnowrap\">100 rows * 244 bytes = 24.4 kB</span>, which is close enough to the\n28kB for our purposes that we can assume it’s the memory taken by the Hash keys\nthemselves.</p>\n\n<p>Next, Postgres reads all 10000 rows from tenk2 (aliased as t2) and checks them\nagainst the Hash of tenk1 rows. Hash Join means that the rows of one table are\nentered into an in-memory hash (which we’ve built up to so far), after which the\nrows of another table is scanned and its values probed against the hash table\nfor matches. We see the conditions of the “match” on the second line, <code>Hash\nCond: (t2.unique2 = t1.unique2)</code>. Note that because the query is selecting all\nvalues from both tenk1 and tenk2, the width of each row doubles during the Hash\nJoin.</p>\n<div class=\"highlight\"><pre class=\"highlight plaintext\"><code>-&gt;  Hash Join  (cost=230.47..713.98 rows=101 width=488) (actual time=0.711..7.427 rows=100 loops=1)\n      Hash Cond: (t2.unique2 = t1.unique2)\n      -&gt;  Seq Scan on tenk2 t2  (cost=0.00..445.00 rows=10000 width=244) (actual time=0.007..2.583 rows=10000 loops=1)\n</code></pre></div>\n<p>Now that all rows that meet our conditions have been collected, we can sort the\nresult set by the <code>Sort Key: t1.fivethous</code>.</p>\n<div class=\"highlight\"><pre class=\"highlight plaintext\"><code>Sort  (cost=717.34..717.59 rows=101 width=488) (actual time=7.761..7.774 rows=100 loops=1)\n  Sort Key: t1.fivethous\n  Sort Method: quicksort  Memory: 77kB\n</code></pre></div>\n<p>The Sort node includes information about the algorithm used to sort,\n<code>quicksort</code>, whether the sort was done in memory or on disk (which greatly\neffects speed), and the amount of memory/disk space needed.</p>\n\n<p>Understanding how to read query plans is great for optimizing queries. For\nexample, Seq Scan nodes often indicate an opportunity for an index to be added,\nwhich is much faster to read. Familiarizing yourself with these plans will make\nyou a better database engineer. For more examples of query plans, read <a href=\"https://www.postgresql.org/docs/9.5/static/using-explain.html\">Using\n<code>EXPLAIN</code></a> from which this example was taken.</p>\n\n<p>Now that you’re able to read a query plan, <a href=\"https://thoughtbot.com/blog/advanced-postgres-performance-tips\" title=\"Advanced Postgres Performance Tips\">learn to optimize performance</a>.</p>\n\n</div>\n<aside class=\"related-articles\">\n<h2>If you enjoyed this post, you might also like:</h2>\n<ol>\n<li>\n<a href=\"/blog/ordering-within-a-sql-group-by-clause\">Finding the Oldest/Youngest Records Within a Group</a>\n</li>\n<li>\n<a href=\"/blog/postgresql-performance-considerations\">PostgreSQL Performance Considerations</a>\n</li>\n<li>\n<a href=\"/blog/postgres-index-types\">Postgres Index Types</a>\n</li>\n</ol>\n</aside>\n</article>\n\n</div>\n<section class=\"container\">\n<div id=\"promoted\">\n<div class=\"ads\">\n<img alt=\"Developer working on a Code Audit at their desk\" class=\"ads__image\" src=\"https://thoughtbot.com/blog/assets/article-ads/code-audit-29b1862f214a72e74c82707e6f8d765b62c59c735d8f2135f768729c4b9360ea.jpg\">\n<div class=\"ads__body\">\n<h3 class=\"ads__title\">\nUpgrade your codebase with a Code Audit\n</h3>\n<p>\nLearn how we can help you understand the current state of your code\nquality, speed up delivery times, improve developer happiness, and level\nup your user experience\n</p>\n<a class=\"button\" href=\"https://thoughtbot.com/services/code-audit\">Learn more about a Code Audit</a>\n</div>\n</div>\n\n\n</div>\n\n</section>\n<div class=\"global-footer\">\n<div class=\"container container-wide\">\n<nav class=\"global-footer-link-section\">\n<ul class=\"global-footer-link-list\">\n<li>\n<a href=\"https://thoughtbot.com/services\">Services\n</a></li>\n<li>\n<a href=\"https://thoughtbot.com/case-studies\">Case Studies\n</a></li>\n<li>\n<a href=\"https://thoughtbot.com/resources\">Resources\n</a></li>\n<li>\n<a href=\"https://thoughtbot.com/hire-us\">Hire Us\n</a></li>\n</ul>\n<ul class=\"global-footer-link-list\">\n<li>\n<a href=\"https://thoughtbot.com/our-company\">Our Company\n</a></li>\n<li>\n<a href=\"https://thoughtbot.com/purpose\">Purpose\n</a></li>\n<li>\n<a href=\"https://thoughtbot.com/blog\">Blog\n</a></li>\n<li>\n<a href=\"https://thoughtbot.com/jobs\">Join our team\n</a></li>\n</ul>\n<ul class=\"global-footer-link-list\">\n<li>\n<a href=\"https://twitter.com/thoughtbot\">Twitter\n</a></li>\n<li>\n<a href=\"https://github.com/thoughtbot\">GitHub\n</a></li>\n<li>\n<a href=\"https://dribbble.com/thoughtbot\">Dribbble\n</a></li>\n<li>\n<a href=\"https://www.instagram.com/thoughtbot/\">Instagram\n</a></li>\n</ul>\n</nav>\n<footer class=\"global-footer-copywright-section\">\n<p class=\"global-footer-copywright-prose\">\n© 2020\n<a href=\"https://thoughtbot.com\">thoughtbot, inc.</a>\nThe design of a robot and thoughtbot are registered trademarks of\nthoughtbot, inc.\n<a href=\"//www.iubenda.com/privacy-policy/7827608\">Privacy Policy</a>\n</p>\n</footer>\n</div>\n</div>\n\n\n  <script type=\"text/javascript\" async=\"\" src=\"https://js.hs-analytics.net/analytics/1587651000000/5257758.js\" id=\"hs-analytics\"></script><script type=\"text/javascript\" async=\"\" src=\"https://www.google-analytics.com/analytics.js\"></script><script type=\"text/javascript\" async=\"\" src=\"https://cdn.segment.com/analytics.js/v1/wperrhev8f/analytics.min.js\"></script><script>\n    !function(){var analytics=window.analytics=window.analytics||[];if(!analytics.initialize)if(analytics.invoked)window.console&&console.error&&console.error(\"Segment snippet included twice.\");else{analytics.invoked=!0;analytics.methods=[\"trackSubmit\",\"trackClick\",\"trackLink\",\"trackForm\",\"pageview\",\"identify\",\"reset\",\"group\",\"track\",\"ready\",\"alias\",\"debug\",\"page\",\"once\",\"off\",\"on\"];analytics.factory=function(t){return function(){var e=Array.prototype.slice.call(arguments);e.unshift(t);analytics.push(e);return analytics}};for(var t=0;t<analytics.methods.length;t++){var e=analytics.methods[t];analytics[e]=analytics.factory(e)}analytics.load=function(t){var e=document.createElement(\"script\");e.type=\"text/javascript\";e.async=!0;e.src=(\"https:\"===document.location.protocol?\"https://\":\"http://\")+\"cdn.segment.com/analytics.js/v1/\"+t+\"/analytics.min.js\";var n=document.getElementsByTagName(\"script\")[0];n.parentNode.insertBefore(e,n)};analytics.SNIPPET_VERSION=\"4.0.0\";\n    analytics.load(\"wperrhev8f\");\n    analytics.page();\n    }}();\n  </script>\n\n\n\n\n","text":"Skip to main content Blog home\nAll Topics\nDesign\nWeb\niOS\nAndroid\nSearch\nWe're hiring!\nReading a Postgres EXPLAIN ANALYZE Query Plan\nCaleb Hearth\nJuly 26, 2016\nupdated on\nMarch 31, 2020\npostgres\nperformance\ndata\nsql\nThe most powerful tool at our disposal for understanding and optimizing SQL\nqueries is EXPLAIN ANALYZE, which is a Postgres command that accepts a\nstatement such as SELECT ..., UPDATE ..., or DELETE ..., executes the\nstatement, and instead of returning the data provides a query plan detailing\nwhat approach the planner took to executing the statement provided.\nHere’s a query pulled from the Postgres Using EXPLAIN page:\n<code><span class=\"k\">EXPLAIN</span> <span class=\"k\">ANALYZE</span> <span class=\"k\">SELECT</span> <span class=\"o\">*</span>\n<span class=\"k\">FROM</span> <span class=\"n\">tenk1</span> <span class=\"n\">t1</span><span class=\"p\">,</span> <span class=\"n\">tenk2</span> <span class=\"n\">t2</span>\n<span class=\"k\">WHERE</span> <span class=\"n\">t1</span><span class=\"p\">.</span><span class=\"n\">unique1</span> <span class=\"o\">&lt;</span> <span class=\"mi\">100</span> <span class=\"k\">AND</span> <span class=\"n\">t1</span><span class=\"p\">.</span><span class=\"n\">unique2</span> <span class=\"o\">=</span> <span class=\"n\">t2</span><span class=\"p\">.</span><span class=\"n\">unique2</span>\n<span class=\"k\">ORDER</span> <span class=\"k\">BY</span> <span class=\"n\">t1</span><span class=\"p\">.</span><span class=\"n\">fivethous</span><span class=\"p\">;</span>\n</code>\nAnd the query plan it generates:\n<code> QUERY PLAN\n-------------------------------------------------------------------------------------------------------------------------------------------- Sort (cost=717.34..717.59 rows=101 width=488) (actual time=7.761..7.774 rows=100 loops=1) Sort Key: t1.fivethous Sort Method: quicksort Memory: 77kB -&gt; Hash Join (cost=230.47..713.98 rows=101 width=488) (actual time=0.711..7.427 rows=100 loops=1) Hash Cond: (t2.unique2 = t1.unique2) -&gt; Seq Scan on tenk2 t2 (cost=0.00..445.00 rows=10000 width=244) (actual time=0.007..2.583 rows=10000 loops=1) -&gt; Hash (cost=229.20..229.20 rows=101 width=244) (actual time=0.659..0.659 rows=100 loops=1) Buckets: 1024 Batches: 1 Memory Usage: 28kB -&gt; Bitmap Heap Scan on tenk1 t1 (cost=5.07..229.20 rows=101 width=244) (actual time=0.080..0.526 rows=100 loops=1) Recheck Cond: (unique1 &lt; 100) -&gt; Bitmap Index Scan on tenk1_unique1 (cost=0.00..5.04 rows=101 width=0) (actual time=0.049..0.049 rows=100 loops=1) Index Cond: (unique1 &lt; 100) Planning time: 0.194 ms Execution time: 8.008 ms\n</code>\nPostgres builds a tree structure of plan nodes representing the different\nactions taken, with the root and each -&gt; pointing to one of them. In some\ncases EXPLAIN ANALYZE provides additional execution statistics beyond the\nexecution times and row counts, such as Sort and Hash above. Any line other\nthan the first without an -&gt; is such information, so the structure of the\nquery is:\n<code>Sort\n└── Hash Join ├── Seq Scan └── Hash └── Bitmap Heap Scan └── Bitmap Index Scan\n</code>\nEach tree’s branches represent sub-actions, and you’d work inside-out to\ndetermine what’s happening “first” (though the order of nodes at the same level\ncould be different).\nThe first thing done is a Bitmap Index Scan on the tenk_unique1 index:\n<code>-&gt; Bitmap Index Scan on tenk1_unique1 (cost=0.00..5.04 rows=101 width=0) (actual time=0.049..0.049 rows=100 loops=1) Index Cond: (unique1 &lt; 100)\n</code>\nThis corresponds to the SQL WHERE t1.unique1 &lt; 100. Postgres is finding the\nlocations of the rows matching the index condition unique1 &lt; 100. The rows\nthemselves aren’t being returned here. The cost estimate (cost=0.00..5.04\nrows=101 width=0) means that Postgres expects that it will “cost” 5.04 of an arbitrary unit of computation to find\nthese values. The 0.00 is the cost at which this node can begin working (in this\ncase, just startup time for the query). rows is the estimated number of rows\nthis Index Scan will return, and width is the estimated size in bytes of the\nreturned rows (0 because we only care about the location, not the content of the\nrows).\nBecause we ran EXPLAIN with the ANALYZE option, the query was actually\nexecuted and timing information was captured. (actual time=0.049..0.049\nrows=100 loops=1) means that the index scan was executed 1 time (the loops\nvalue), that it returned 100 rows, and that the actual time was 0.. In the case\nof a node executed more than once, the actual time is an average of each\niteration and you would multiply the value by the number of loops to get real\ntime. The range values may also differ which gives an idea of min/max times\nspent. This establishes a ratio for the costs that each cost unit of 0.049ms / 5.04 units ≈ 0.01ms/unit for this\nquery.\nThe results of the Index Scan are passed up to a Bitmap Heap Scan action. In\nthis node, Postgres is taking the locations of the rows in the tenk1 table,\naliased as t1, where unique1 &lt; 100 and fetching the rows from the table\nitself.\n<code>-&gt; Bitmap Heap Scan on tenk1 t1 (cost=5.07..229.20 rows=101 width=244) (actual time=0.080..0.526 rows=100 loops=1) Recheck Cond: (unique1 &lt; 100)\n</code>\nWe can see that the cost expectations, when multiplied by the 0.01 value we\ncalculated, would mean a rough expected time of (229.20 - 5.07) * 0.01 ≈ 2.24ms, and we see an actual time of\n0.526ms per row, which is off by a factor of 4. This may be because the cost\nestimate is an upper bound and not all rows needed to be read, or because the\nrecheck condition is always true.\nThe combination of Bitmap Index Scan and Bitmap Heap Scan is much more\nexpensive than reading the rows sequentially from the table (a Seq Scan), but\nbecause relatively few rows need to be visited in this case the two step process\nends up being faster. This is further sped by sorting the rows into physical\norder before fetching them, which minimizes the cost of separate fetches. The\n“bitmap” in the node names does the sorting.\nThe results of the heap scan, those rows from tenk1 for which unique1 &lt; 100 is\ntrue, are inserted into an in-memory Hash table as they are read. As we can see\nby the costs, this takes no time at all.\n<code>-&gt; Hash (cost=229.20..229.20 rows=101 width=244) (actual time=0.659..0.659 rows=100 loops=1) Buckets: 1024 Batches: 1 Memory Usage: 28kB\n</code>\nThe Hash node includes information about number of hash buckets and batches, as\nwell as peak memory usage. If Batches &gt; 1 there’s also disk usage involved, but\nthat is not shown. The memory usage makes sense at 100 rows * 244 bytes = 24.4 kB, which is close enough to the\n28kB for our purposes that we can assume it’s the memory taken by the Hash keys\nthemselves.\nNext, Postgres reads all 10000 rows from tenk2 (aliased as t2) and checks them\nagainst the Hash of tenk1 rows. Hash Join means that the rows of one table are\nentered into an in-memory hash (which we’ve built up to so far), after which the\nrows of another table is scanned and its values probed against the hash table\nfor matches. We see the conditions of the “match” on the second line, Hash\nCond: (t2.unique2 = t1.unique2). Note that because the query is selecting all\nvalues from both tenk1 and tenk2, the width of each row doubles during the Hash\nJoin.\n<code>-&gt; Hash Join (cost=230.47..713.98 rows=101 width=488) (actual time=0.711..7.427 rows=100 loops=1) Hash Cond: (t2.unique2 = t1.unique2) -&gt; Seq Scan on tenk2 t2 (cost=0.00..445.00 rows=10000 width=244) (actual time=0.007..2.583 rows=10000 loops=1)\n</code>\nNow that all rows that meet our conditions have been collected, we can sort the\nresult set by the Sort Key: t1.fivethous.\n<code>Sort (cost=717.34..717.59 rows=101 width=488) (actual time=7.761..7.774 rows=100 loops=1) Sort Key: t1.fivethous Sort Method: quicksort Memory: 77kB\n</code>\nThe Sort node includes information about the algorithm used to sort,\nquicksort, whether the sort was done in memory or on disk (which greatly\neffects speed), and the amount of memory/disk space needed.\nUnderstanding how to read query plans is great for optimizing queries. For\nexample, Seq Scan nodes often indicate an opportunity for an index to be added,\nwhich is much faster to read. Familiarizing yourself with these plans will make\nyou a better database engineer. For more examples of query plans, read Using\nEXPLAIN from which this example was taken.\nNow that you’re able to read a query plan, learn to optimize performance.\nIf you enjoyed this post, you might also like:\nFinding the Oldest/Youngest Records Within a Group\nPostgreSQL Performance Considerations\nPostgres Index Types\nUpgrade your codebase with a Code Audit\nLearn how we can help you understand the current state of your code\nquality, speed up delivery times, improve developer happiness, and level\nup your user experience\nLearn more about a Code Audit\nServices\nCase Studies\nResources\nHire Us\nOur Company\nPurpose\nBlog\nJoin our team\nTwitter\nGitHub\nDribbble\nInstagram\n© 2020\nthoughtbot, inc.\nThe design of a robot and thoughtbot are registered trademarks of\nthoughtbot, inc.\nPrivacy Policy","ctext":"跳到主要内容博客主页\n全部话题\n设计\n网页\n的iOS\n安卓系统\n搜索\n我们正在招聘！\n阅读Postgres EXPLAIN ANALYZE查询计划\n迦勒·壁炉斯\n2016年7月26日\n更新于\n2020年3月31日\nPostgres的\n性能\n数据\nsql\n我们可以使用的功能最强大的工具，用于了解和优化SQL\n查询是EXPLAIN ANALYZE，它是一个Postgres命令，接受一个\n诸如SELECT ...，UPDATE ...或DELETE ...之类的语句执行\n语句，而不是返回数据，而是提供查询计划详细信息\n计划者采用何种方式执行所提供的语句。\n这是从Postgres使用说明页面提取的查询：\n<code><span class=\"k\">EXPLAIN</span> <span class=\"k\">ANALYZE</span> <span class=\"k\">SELECT</span> <span class=\"o\">*</span>\n<span class=\"k\">FROM</span> <span class=\"n\">tenk1</span> <span class=\"n\">t1</span><span class=\"p\">,</span> <span class=\"n\">tenk2</span> <span class=\"n\">t2</span>\n<span class=\"k\">WHERE</span> <span class=\"n\">t1</span><span class=\"p\">.</span><span class=\"n\">unique1</span> <span class=\"o\">&lt;</span> <span class=\"mi\">100</span> <span class=\"k\">AND</span> <span class=\"n\">t1</span><span class=\"p\">.</span><span class=\"n\">unique2</span> <span class=\"o\">=</span> <span class=\"n\">t2</span><span class=\"p\">.</span><span class=\"n\">unique2</span>\n<span class=\"k\">ORDER</span> <span class=\"k\">BY</span> <span class=\"n\">t1</span><span class=\"p\">.</span><span class=\"n\">fivethous</span><span class=\"p\">;</span>\n</code>\n并生成查询计划：\n<code> QUERY PLAN\n-------------------------------------------------------------------------------------------------------------------------------------------- Sort (cost=717.34..717.59 rows=101 width=488) (actual time=7.761..7.774 rows=100 loops=1) Sort Key: t1.fivethous Sort Method: quicksort Memory: 77kB -&gt; Hash Join (cost=230.47..713.98 rows=101 width=488) (actual time=0.711..7.427 rows=100 loops=1) Hash Cond: (t2.unique2 = t1.unique2) -&gt; Seq Scan on tenk2 t2 (cost=0.00..445.00 rows=10000 width=244) (actual time=0.007..2.583 rows=10000 loops=1) -&gt; Hash (cost=229.20..229.20 rows=101 width=244) (actual time=0.659..0.659 rows=100 loops=1) Buckets: 1024 Batches: 1 Memory Usage: 28kB -&gt; Bitmap Heap Scan on tenk1 t1 (cost=5.07..229.20 rows=101 width=244) (actual time=0.080..0.526 rows=100 loops=1) Recheck Cond: (unique1 &lt; 100) -&gt; Bitmap Index Scan on tenk1_unique1 (cost=0.00..5.04 rows=101 width=0) (actual time=0.049..0.049 rows=100 loops=1) Index Cond: (unique1 &lt; 100) Planning time: 0.194 ms Execution time: 8.008 ms\n</code>\nPostgres构建表示不同节点的计划节点的树形结构\nPostgres构建表示不同节点的计划节点的树形结构...\n在EXPLAIN ANALYZE的情况下，除了\n执行时间和行计数，例如上面的Sort和Hash。 其他任何行\n执行时间和行计数，例如上面的Sort和Hash。 其他任何行...\n查询是：\n<code>Sort\n└── Hash Join ├── Seq Scan └── Hash └── Bitmap Heap Scan └── Bitmap Index Scan\n</code>\n每棵树的分支代表子操作，您可以由内而外地\n确定“第一”发生了什么（尽管节点在同一级别的顺序\n可能会有所不同）。\n首先要做的是对tenk_unique1索引进行位图索引扫描：\n<code>-&gt; Bitmap Index Scan on tenk1_unique1 (cost=0.00..5.04 rows=101 width=0) (actual time=0.049..0.049 rows=100 loops=1) Index Cond: (unique1 &lt; 100)\n</code>\n首先要做的是对tenk_unique1索引进行位图索引扫描：...\n首先要做的是对tenk_unique1索引进行位图索引扫描：......\n自己不会返回这里。 费用估算（费用= 0.00..5.04\nrows = 101 width = 0）意味着Postgres期望“花费” 5.04的任意计算单位来查找\n这些值。 0.00是该节点可以开始工作的成本（在此情况下，\n情况下，只需查询的启动时间即可）。 行是估计的行数\n此索引扫描将返回，并且width是估计的字节大小\n返回的行（0，因为我们只关心位置，而不关心\n行）。\n因为我们使用ANALYZE选项运行EXPLAIN，所以查询实际上是\n执行并捕获定时信息。 （实际时间= 0.049..0.049\nrows = 100 loops = 1）表示索引扫描已执行1次（循环\n值），则返回100行，而实际时间为0。\n一个节点被多次执行的时间，实际时间是每个节点的平均值\n迭代，您可以将值乘以循环数以获得实数\n时间。 范围值也可能有所不同，这给出了最小/最大时间的概念\n花费。 这样就确定了成本比率，为此，每个成本单位为0.049ms / 5.04单位≈0.01ms /单位\n查询。\n索引扫描的结果将传递到位图堆扫描操作。 在\n在这个节点上，Postgres正在获取tenk1表中的行的位置，\n在这个节点上，Postgres正在获取tenk1表中的行的位置，...\n本身。\n<code>-&gt; Bitmap Heap Scan on tenk1 t1 (cost=5.07..229.20 rows=101 width=244) (actual time=0.080..0.526 rows=100 loops=1) Recheck Cond: (unique1 &lt; 100)\n</code>\n我们可以看到，将成本预期值乘以0.01值后，\n计算得出，这意味着（229.20-5.07）* 0.01≈2.24ms的大致预期时间，而我们看到的实际时间为\n每行0.526ms，相差4倍。这可能是因为成本\n估计值是一个上限，并非所有行都需要读取，或者因为\n重新检查条件始终为真。\n位图索引扫描和位图堆扫描的结合更多\n比从表中顺序读取行（Seq扫描）要昂贵，但是\n因为在这种情况下两步过程需要访问的行相对较少\n最终变得更快。 通过将行分类为物理行可以进一步加速\n在提取它们之前先进行订购，这样可以最大程度地减少单独提取的成本。 的\n节点名称中的“位图”进行排序。\n节点名称中的“位图”进行排序。...\ntrue，将在读取时插入到内存中的哈希表中。 如我们所见\n从成本上来说，这根本不需要时间。\n<code>-&gt; Hash (cost=229.20..229.20 rows=101 width=244) (actual time=0.659..0.659 rows=100 loops=1) Buckets: 1024 Batches: 1 Memory Usage: 28kB\n</code>\n哈希节点包含有关哈希桶和批次数量的信息，如下所示\n哈希节点包含有关哈希桶和批次数量的信息，如下所示...\n没有显示。 内存使用量在100行* 244字节= 24.4 kB时才有意义，足够接近\n出于我们的目的，我们可以假设它是28kB，是哈希键占用的内存\n他们自己。\n接下来，Postgres从tenk2中读取所有10000行（别名为t2）并进行检查\n针对tenk1行的哈希值。 哈希联接意味着一个表的行是\n输入到内存中的哈希（到目前为止，我们已经建立了），然后\n扫描另一个表的行，并针对哈希表探查其值\n比赛。 我们在第二行“哈希”中看到“匹配”的条件\n条件：（t2.unique2 = t1.unique2）。 请注意，因为查询正在选择全部\n来自tenk1和tenk2的值，在Hash期间每一行的宽度加倍\n加入。\n<code>-&gt; Hash Join (cost=230.47..713.98 rows=101 width=488) (actual time=0.711..7.427 rows=100 loops=1) Hash Cond: (t2.unique2 = t1.unique2) -&gt; Seq Scan on tenk2 t2 (cost=0.00..445.00 rows=10000 width=244) (actual time=0.007..2.583 rows=10000 loops=1)\n</code>\n现在，已经收集了所有符合我们条件的行，我们可以对\n通过排序键设置的结果：t1.fivethous。\n<code>Sort (cost=717.34..717.59 rows=101 width=488) (actual time=7.761..7.774 rows=100 loops=1) Sort Key: t1.fivethous Sort Method: quicksort Memory: 77kB\n</code>\n排序节点包含有关用于排序的算法的信息，\n快速排序，无论排序是在内存中还是在磁盘上完成（这在很大程度上\n影响速度），以及所需的内存/磁盘空间量。\n了解如何读取查询计划对于优化查询非常有用。 对于\n例如，Seq Scan节点通常表明有机会添加索引，\n阅读起来要快得多。 熟悉这些计划将使\n您是更好的数据库工程师。 有关查询计划的更多示例，请阅读使用\n解释本示例。\n现在，您可以阅读查询计划，学习如何优化性能。\n如果您喜欢这篇文章，您可能还会喜欢：\n查找组中最早/最年轻的记录\nPostgreSQL性能注意事项\nPostgres索引类型\n使用代码审核升级代码库\n了解我们如何帮助您了解代码的当前状态\n质量，加快交付时间，提高开发人员的满意度和水平\n提升您的用户体验\n了解有关代码审核的更多信息\n服务\n实例探究\n资源资源\n雇用我们\n我们公司\n目的\n博客\n加入我们的团队\n推特\n的GitHub\n运球\nInstagram的\n© 2020\nThoughtbot公司\n机器人和思想机器人的设计是的注册商标。\nThoughtbot公司\n隐私政策\n"}

{"l":"https://web.stanford.edu/class/cs253/","n":"Stanford: CS 253 Web Security","html":"\n    <div class=\"content\">\n      <a href=\"https://cs253.stanford.edu\" class=\"logo\">\n        <img src=\"stanford.svg\" alt=\"Stanford\">\n        <h1>CS 253 Web Security</h1>\n      </a>\n\n      <h2>Fall 2019</h2>\n<p>This course is a comprehensive overview of web security. The goal is to build an understanding of the most common web attacks and their countermeasures. Given the pervasive insecurity of the modern web landscape, there is a pressing need for programmers and system designers to improve their understanding of web security issues.</p>\n<p>We'll be covering the fundamentals as well as the state-of-the-art in web security.</p>\n<p>Topics include: Principles of web security, attacks and countermeasures, the browser security model, web app vulnerabilities, injection, denial-of-service, TLS attacks, privacy, fingerprinting, same-origin policy, cross site scripting, authentication, JavaScript security, emerging threats, defense-in-depth, and techniques for writing secure code. Course projects include writing security exploits, defending insecure web apps, and implementing emerging web standards.</p>\n<h2>Meeting time and place</h2>\n<p>Tuesdays and Thursdays, 1:30 PM - 2:50 PM in classroom <a href=\"https://campus-map.stanford.edu/?srch=380-380Y\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">380-380Y</a></p>\n<h2>Course Staff</h2>\n<h3>Instructor</h3>\n<p>Feross Aboukhadijeh (<a href=\"mailto:feross@cs.stanford.edu\">feross@cs.stanford.edu</a>)</p>\n<h3>Teaching Assistant</h3>\n<p>Esther Goldstein (<a href=\"mailto:egolds@stanford.edu\">egolds@stanford.edu</a>)</p>\n<h3>Office Hours</h3>\n<ul>\n<li>Feross: Thursday 3-5pm, Gates 323</li>\n<li>Esther: Monday 3-5pm, Wednesday 3-5pm, Huang Basement</li>\n</ul>\n<h2>Course Policies</h2>\n<h3>Communication</h3>\n<p>We will primarily use <a href=\"https://piazza.com/stanford/fall2019/cs253\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Piazza</a> for sending out course announcements and answering questions. Please make sure to <a href=\"https://piazza.com/stanford/fall2019/cs253\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">sign up</a>.</p>\n<p>We use <a href=\"https://gradescope.com\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Gradescope</a> for assignment submissions. Enroll with the code <code>97BGZB</code>.</p>\n<p>To submit anonymous feedback to us at any point during the quarter, you may use <a href=\"https://forms.gle/WqKuxA2m7oycRuTt7\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">this form</a>.</p>\n<h3>Prerequisites</h3>\n<p>CS 142, or an equivalent amount of web development experience, is a prerequisite. You should also be curious about web security and excited to learn clever attacks, defenses, and techniques for writing secure code.</p>\n<p>An introductory security course, such as CS 155, is not a formal prerequisite. The material in this course is focused specifically on the web, while CS 155 covers security more broadly.</p>\n<h3>Attendence</h3>\n<p>Attendance at lectures is mandatory. Do not enroll in this course if you are taking another course that meets at the same time.</p>\n<h3>Grading</h3>\n<ul>\n<li>Assignments (75%)</li>\n<li>Final Exam (25%)</li>\n</ul>\n<p>Each assignment is worth 15%. There is no midterm.</p>\n<h3>Final Exam</h3>\n<ul>\n<li>Tuesday, December 10, 3:30pm - 6:30pm in <a href=\"https://campus-map.stanford.edu/?srch=200-305\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">200-305</a></li>\n</ul>\n<h3>Previous Final Exams</h3>\n<ul>\n<li><a href=\"cs253-final-2019.pdf\">Final Exam 2019</a> (<a href=\"cs253-final-2019-solutions.pdf\">Solutions</a>)</li>\n<li><a href=\"cs253-sample-final.pdf\">More Sample Final Exam Questions</a> (<a href=\"cs253-sample-final-solutions.pdf\">Solutions</a>)</li>\n</ul>\n<h3>Collaboration Policy</h3>\n<p>You may discuss the assignments with other students and you may work together to come up with solutions to the problems. If you do so, you must list the name of your collaborators in the submission. Each student must write up their solutions independently.</p>\n<h3>Late Submissions</h3>\n<p>You get three “late days” in total during the quarter. You may use a late day to submit an assignment after the deadline. You can use at most three late days for any single assignment, and you may only use late days in one-day increments (no partial late days).</p>\n<p>If you submit an assignment more than 72 hours after the deadline, or if you submit an assignment late after running out of late days, you will receive <strong>no credit</strong> for the submission. Please submit your assignments on time and save your late days for extraordinary situations.</p>\n<p>If you have questions about these policies, please ask us.</p>\n<h2>Schedule</h2>\n<h3>Sep 24: What is Web Security? HTML &amp; JavaScript Review</h3>\n<ul>\n<li><a href=\"lectures/Lecture%2001.pdf\">Slides</a></li>\n<li><a href=\"https://www.youtube.com/watch?v=5JJrJGZ_LjM\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Video</a></li>\n<li>Reading<ul>\n<li><a href=\"https://developers.google.com/web/updates/2018/09/inside-browser-part1\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Inside look at modern web browser (part 1)</a></li>\n<li><a href=\"https://developers.google.com/web/updates/2018/09/inside-browser-part2\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Inside look at modern web browser (part 2)</a></li>\n<li><a href=\"https://developers.google.com/web/updates/2018/09/inside-browser-part3\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Inside look at modern web browser (part 3)</a></li>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/A_re-introduction_to_JavaScript\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">A Re-Introduction to JavaScript</a></li>\n</ul></li>\n</ul>\n<h3>Sep 26: HTTP, Cookies, Sessions</h3>\n<ul>\n<li><a href=\"lectures/Lecture%2002.pdf\">Slides</a></li>\n<li><a href=\"https://www.youtube.com/watch?v=zhnQFQ2qFtA\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Video</a></li>\n<li>Reading<ul>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Overview\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">An overview of HTTP</a></li>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Cookies\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">HTTP Cookies</a></li>\n<li>Skim: <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">HTTP headers</a></li>\n</ul></li>\n</ul>\n<h3>Oct 01: Session Attacks</h3>\n<ul>\n<li><a href=\"lectures/Lecture%2003.pdf\">Slides</a></li>\n<li><a href=\"https://www.youtube.com/watch?v=QuhgjXKzfI8\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Video</a></li>\n<li>Reading<ul>\n<li><a href=\"https://web.dev/samesite-cookies-explained/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">SameSite Cookies Explained</a></li>\n<li><a href=\"https://tools.ietf.org/html/draft-west-cookie-incrementalism-00#section-4.1\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Incrementally Better Cookies</a></li>\n<li><a href=\"https://scotthelme.co.uk/csrf-is-dead/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">CSRF Is Dead</a></li>\n</ul></li>\n</ul>\n<h3>Oct 03: Cross-Site Request Forgery, Same Origin Policy</h3>\n<ul>\n<li><a href=\"lectures/Lecture%2004.pdf\">Slides</a></li>\n<li><a href=\"https://www.youtube.com/watch?v=0-q69vAYSwo\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Video</a></li>\n<li>Reading<ul>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/Security/Same-origin_policy\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Same Origin policy</a></li>\n<li><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Cross-Site_Request_Forgery_Prevention_Cheat_Sheet.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Cross-Site Request Forgery Prevention</a></li>\n</ul></li>\n</ul>\n<h3>Oct 08: Exceptions to the Same Origin Policy, Cross-Site Script Inclusion</h3>\n<ul>\n<li><a href=\"lectures/Lecture%2005.pdf\">Slides</a></li>\n<li><a href=\"https://www.youtube.com/watch?v=ud9cVQDte3A\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Video</a></li>\n</ul>\n<h3>Oct 10: Cross-Site Scripting (XSS)</h3>\n<ul>\n<li><a href=\"lectures/Lecture%2006.pdf\">Slides</a></li>\n<li><a href=\"https://www.youtube.com/watch?v=XTcqlOFhpPI\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Video</a></li>\n<li>Reading<ul>\n<li><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Cross_Site_Scripting_Prevention_Cheat_Sheet.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Cross Site Scripting Prevention Cheat Sheet</a></li>\n<li><a href=\"https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">XSS Filter Evasion Cheat Sheet</a></li>\n</ul></li>\n</ul>\n<h3>Oct 15: Cross-Site Scripting Defenses</h3>\n<ul>\n<li><a href=\"lectures/Lecture%2007.pdf\">Slides</a></li>\n<li><a href=\"https://www.youtube.com/watch?v=PlXzrtheQGc\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Video</a></li>\n<li>Reading<ul>\n<li><a href=\"http://research.sidstamm.com/papers/csp-www2010.pdf\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Reining in the Web with Content Security Policy</a></li>\n<li><a href=\"https://storage.googleapis.com/pub-tools-public-publication-data/pdf/45542.pdf\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">CSP is Dead: Long Live CSP</a></li>\n<li><a href=\"https://developers.google.com/web/updates/2019/02/trusted-types\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Trusted Types</a></li>\n<li><a href=\"https://fastmail.blog/2015/12/20/sanitising-html-the-dom-clobbering-issue/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Sanitising HTML: the DOM clobbering issue</a></li>\n</ul></li>\n</ul>\n<h3>Oct 17: Fingerprinting and Privacy on the Web</h3>\n<ul>\n<li><strong>Guest Lecture by Pete Snyder (<a href=\"https://brave.com\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Brave Software</a>)</strong></li>\n<li><a href=\"lectures/Lecture%2008.pdf\">Slides</a></li>\n<li><a href=\"https://www.youtube.com/watch?v=OVh0oHbmla0\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Video</a></li>\n<li>Reading<ul>\n<li><a href=\"https://chromium.woolyss.com/f/OpenWPM-1-million-site-tracking-measurement.pdf\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Online tracking: A 1-million-site measurement and analysis</a></li>\n<li><a href=\"https://arxiv.org/pdf/1708.08510\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Most websites don't need to vibrate: A cost-benefit approach to improving browser security</a></li>\n<li><a href=\"https://blog.torproject.org/browser-fingerprinting-introduction-and-challenges-ahead\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Browser Fingerprinting: An Introduction and the Challenges Ahead</a></li>\n<li><a href=\"https://webkit.org/blog/8943/privacy-preserving-ad-click-attribution-for-the-web/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">WebKit Ad Click Attribution</a></li>\n<li><a href=\"https://crypto.stanford.edu/safecache/sameorigin.pdf\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Protecting Browser State from Web Privacy Attacks</a></li>\n<li>Skim: <a href=\"https://webkit.org/tracking-prevention-policy/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">WebKit Tracking Prevention Policy</a></li>\n</ul></li>\n</ul>\n<h3>Oct 22: Denial-of-service, Phishing, Side Channels</h3>\n<ul>\n<li><a href=\"lectures/Lecture%2009.pdf\">Slides</a></li>\n<li><a href=\"https://www.youtube.com/watch?v=RfC_PzVmk4w\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Video</a></li>\n<li>Reading<ul>\n<li><a href=\"https://www.usenix.org/system/files/conference/usenixsecurity13/sec13-paper_akhawe.pdf\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Alice in Warningland: A Large-Scale Field Study of Browser Security</a></li>\n<li><a href=\"http://www.sectheory.com/clickjacking.htm\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Clickjacking</a></li>\n<li><a href=\"https://www.adambarth.com/papers/2009/barth-weinberger-song.pdf\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Cross-Origin JavaScript Capability Leaks: Detection, Exploitation, and Defense</a></li>\n</ul></li>\n</ul>\n<h3>Oct 24: Code Injection</h3>\n<ul>\n<li><a href=\"lectures/Lecture%2010.pdf\">Slides</a></li>\n<li><a href=\"https://www.youtube.com/watch?v=mR7yvqWmE0M\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Video</a></li>\n<li>Reading<ul>\n<li>None</li>\n</ul></li>\n</ul>\n<h3>Oct 29: Transport Layer Security</h3>\n<ul>\n<li><a href=\"lectures/Lecture%2011.pdf\">Slides</a></li>\n<li><a href=\"https://www.youtube.com/watch?v=S8-rnPHjyxs\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Video</a></li>\n<li>Reading<ul>\n<li><a href=\"https://blog.cryptographyengineering.com/2019/09/24/looking-back-at-the-snowden-revelations/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Looking back at the Snowden revelations</a></li>\n<li><a href=\"https://transparencyreport.google.com/https/overview\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">HTTPS encryption on the web</a></li>\n</ul></li>\n</ul>\n<h3>Oct 31: HTTPS in the Real World: A Spooky Tale</h3>\n<ul>\n<li><strong>Guest Lecture by Emily Stark &amp; Chris Palmer (<a href=\"https://www.google.com/chrome/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Google Chrome</a>)</strong></li>\n<li><a href=\"lectures/Lecture%2012.pdf\">Slides</a></li>\n<li><a href=\"https://www.youtube.com/watch?v=jN26N8QS5Os\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Video</a></li>\n<li>Reading<ul>\n<li><a href=\"https://en.wikipedia.org/wiki/DigiNotar\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">DigiNotar on Wikipedia</a></li>\n<li><a href=\"https://noncombatant.org/2015/05/01/about-http-public-key-pinning/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">About Public Key Pinning</a></li>\n<li><a href=\"https://noncombatant.org/2015/11/24/what-is-hpkp-for/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">What Is HPKP For?</a></li>\n<li><a href=\"https://developers.google.com/web/updates/2015/09/HPKP-reporting-with-chrome-46\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Rolling out Public Key Pinning with HPKP Reporting</a></li>\n</ul></li>\n</ul>\n<h3>Nov 05: Authentication</h3>\n<ul>\n<li><a href=\"lectures/Lecture%2013.pdf\">Slides</a></li>\n<li><a href=\"https://www.youtube.com/watch?v=lgmGSYwJc20\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Video</a></li>\n<li>Reading<ul>\n<li><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Authentication_Cheat_Sheet.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Authentication Cheat Sheet</a></li>\n</ul></li>\n</ul>\n<h3>Nov 07: WebAuthn - The future of user authentication on the web 🤞</h3>\n<ul>\n<li><strong>Guest Lecture by Lucas Garron (<a href=\"https://github.com\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">GitHub</a>)</strong></li>\n<li><a href=\"lectures/Lecture%2014.pdf\">Slides</a></li>\n<li><a href=\"https://www.youtube.com/watch?v=_nPk2HgNpjE\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Video</a></li>\n<li>Reading<ul>\n<li><a href=\"https://webauthn.guide/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Guide to Web Authentication</a></li>\n</ul></li>\n</ul>\n<h3>Nov 12: No class</h3>\n<h3>Nov 14: Managing security concerns in a large Open Source project</h3>\n<ul>\n<li><strong>Guest Lecture by Myles Borins (<a href=\"https://nodejs.org/en/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Node.js</a> technical steering committee, <a href=\"https://www.google.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Google</a>)</strong></li>\n<li><a href=\"https://kni.sh/oss-security\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Slides</a></li>\n<li><a href=\"https://www.youtube.com/watch?v=lX6KLL0sVTU\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Video</a></li>\n<li>Reading<ul>\n<li><a href=\"https://gruss.cc/files/fantastictimers.pdf\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Fantastic Timers and Where to Find Them: High-Resolution Microarchitectural Attacks in JavaScript</a></li>\n<li><a href=\"https://nodesecroadmap.fyi\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">A Roadmap for Node.js Security</a></li>\n</ul></li>\n</ul>\n<h3>Nov 19: Server security, Safe coding practices</h3>\n<ul>\n<li><a href=\"lectures/Lecture%2017.pdf\">Slides</a></li>\n<li><a href=\"https://www.youtube.com/watch?v=Ox15IMOvWfA\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Video</a></li>\n<li>Reading<ul>\n<li><a href=\"https://snyk.io/blog/exploiting-buffer/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Exploiting Buffer</a></li>\n</ul></li>\n</ul>\n<h3>Nov 21: Local HTTP server security</h3>\n<ul>\n<li><a href=\"lectures/Lecture%2018.pdf\">Slides</a></li>\n<li><a href=\"https://www.youtube.com/watch?v=wLgcb4jZwGM\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Video</a></li>\n<li>Reading<ul>\n<li>None</li>\n</ul></li>\n</ul>\n<h3>Dec 03: DNS rebinding attacks</h3>\n<ul>\n<li><a href=\"lectures/Lecture%2019.pdf\">Slides</a></li>\n<li><a href=\"https://www.youtube.com/watch?v=bZW_55LIz0w\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Video</a></li>\n<li>Reading<ul>\n<li><a href=\"https://www.wired.com/story/chromecast-roku-sonos-dns-rebinding-vulnerability/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Millions of Streaming Devices Are Vulnerable to a Retro Web Attack</a></li>\n<li><a href=\"https://crypto.stanford.edu/dns/dns-rebinding.pdf\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Protecting Browsers from DNS Rebinding Attacks</a></li>\n</ul></li>\n</ul>\n<h3>Dec 05: Browser architecture, Writing secure code</h3>\n<ul>\n<li><a href=\"lectures/Lecture%2020.pdf\">Slides</a></li>\n<li><a href=\"https://www.youtube.com/watch?v=5aguccOpGes\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Video</a></li>\n<li>Reading<ul>\n<li><a href=\"https://seclab.stanford.edu/websec/chromium/chromium-security-architecture.pdf\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">The Security Architecture of the Chromium Browser</a></li>\n<li><a href=\"https://www.chromium.org/Home/chromium-security/corb-for-developers\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Cross-Origin Read Blocking (CORB) primer</a></li>\n<li>Skim: <a href=\"https://chromium.googlesource.com/chromium/src/+/master/services/network/cross_origin_read_blocking_explainer.md\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Cross-Origin Read Blocking (CORB) explainer</a></li>\n<li><a href=\"https://diracdeltas.github.io/blog/backdooring-js/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Backdooring Your JavaScript Using Minifier Bugs</a></li>\n<li><a href=\"https://medium.com/hackernoon/im-harvesting-credit-card-numbers-and-passwords-from-your-site-here-s-how-9a8cb347c5b5\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">I’m harvesting credit card numbers and passwords from your site. Here’s how.</a></li>\n<li><a href=\"https://shkspr.mobi/blog/2018/11/major-sites-running-unauthenticated-javascript-on-their-payment-pages/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Major sites running unauthenticated JavaScript on their payment pages</a></li>\n</ul></li>\n</ul>\n<h2>Assignments</h2>\n<h3><a href=\"assign0\">Assignment 0 – Web Programming Adventure ✈️</a></h3>\n<ul>\n<li>Assigned: Tuesday, September 24</li>\n<li>Due: Friday, October 4 at 5:00pm</li>\n</ul>\n<h3><a href=\"assign1\">Assignment 1 – Journey to the Dark Side 🌘</a></h3>\n<ul>\n<li>Assigned: Tuesday, October 8</li>\n<li>Due: Friday, October 18 at 5:00pm</li>\n</ul>\n<h3><a href=\"assign2\">Assignment 2 – Oh What a Tangled Web We Weave 🕸</a></h3>\n<ul>\n<li>Assigned: Saturday, October 26</li>\n<li>Due: Thursday, November 7 at 11:59pm</li>\n</ul>\n<h3>Assignment 3 – See Piazza</h3>\n<ul>\n<li>Assigned: Tuesday, November 12</li>\n<li>Due: Friday, November 22 at 5:00pm</li>\n</ul>\n<h3>Assignment 4 – See Piazza</h3>\n<ul>\n<li>Assigned: Mon, November 25</li>\n<li>Due: Friday, December 6 at 5:00pm</li>\n</ul>\n<br>\n<br>\n<br>\n<p>Website design by <a href=\"https://feross.org\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Feross Aboukhadijeh</a>.</p>\n\n    </div>\n  \n\n","text":"CS 253 Web Security Fall 2019\nThis course is a comprehensive overview of web security. The goal is to build an understanding of the most common web attacks and their countermeasures. Given the pervasive insecurity of the modern web landscape, there is a pressing need for programmers and system designers to improve their understanding of web security issues.\nWe'll be covering the fundamentals as well as the state-of-the-art in web security.\nTopics include: Principles of web security, attacks and countermeasures, the browser security model, web app vulnerabilities, injection, denial-of-service, TLS attacks, privacy, fingerprinting, same-origin policy, cross site scripting, authentication, JavaScript security, emerging threats, defense-in-depth, and techniques for writing secure code. Course projects include writing security exploits, defending insecure web apps, and implementing emerging web standards.\nMeeting time and place\nTuesdays and Thursdays, 1:30 PM - 2:50 PM in classroom 380-380Y\nCourse Staff Instructor\nFeross Aboukhadijeh (feross@cs.stanford.edu)\nTeaching Assistant\nEsther Goldstein (egolds@stanford.edu)\nOffice Hours\nFeross: Thursday 3-5pm, Gates 323\nEsther: Monday 3-5pm, Wednesday 3-5pm, Huang Basement\nCourse Policies Communication\nWe will primarily use Piazza for sending out course announcements and answering questions. Please make sure to sign up.\nWe use Gradescope for assignment submissions. Enroll with the code 97BGZB.\nTo submit anonymous feedback to us at any point during the quarter, you may use this form.\nPrerequisites\nCS 142, or an equivalent amount of web development experience, is a prerequisite. You should also be curious about web security and excited to learn clever attacks, defenses, and techniques for writing secure code.\nAn introductory security course, such as CS 155, is not a formal prerequisite. The material in this course is focused specifically on the web, while CS 155 covers security more broadly.\nAttendence\nAttendance at lectures is mandatory. Do not enroll in this course if you are taking another course that meets at the same time.\nGrading\nAssignments (75%)\nFinal Exam (25%)\nEach assignment is worth 15%. There is no midterm.\nFinal Exam\nTuesday, December 10, 3:30pm - 6:30pm in 200-305\nPrevious Final Exams\nFinal Exam 2019 (Solutions)\nMore Sample Final Exam Questions (Solutions)\nCollaboration Policy\nYou may discuss the assignments with other students and you may work together to come up with solutions to the problems. If you do so, you must list the name of your collaborators in the submission. Each student must write up their solutions independently.\nLate Submissions\nYou get three “late days” in total during the quarter. You may use a late day to submit an assignment after the deadline. You can use at most three late days for any single assignment, and you may only use late days in one-day increments (no partial late days).\nIf you submit an assignment more than 72 hours after the deadline, or if you submit an assignment late after running out of late days, you will receive no credit for the submission. Please submit your assignments on time and save your late days for extraordinary situations.\nIf you have questions about these policies, please ask us.\nSchedule Sep 24: What is Web Security? HTML &amp; JavaScript Review\nSlides\nVideo\nReading\nInside look at modern web browser (part 1)\nInside look at modern web browser (part 2)\nInside look at modern web browser (part 3)\nA Re-Introduction to JavaScript\nSep 26: HTTP, Cookies, Sessions\nSlides\nVideo\nReading\nAn overview of HTTP\nHTTP Cookies\nSkim: HTTP headers\nOct 01: Session Attacks\nSlides\nVideo\nReading\nSameSite Cookies Explained\nIncrementally Better Cookies\nCSRF Is Dead\nOct 03: Cross-Site Request Forgery, Same Origin Policy\nSlides\nVideo\nReading\nSame Origin policy\nCross-Site Request Forgery Prevention\nOct 08: Exceptions to the Same Origin Policy, Cross-Site Script Inclusion\nSlides\nVideo\nOct 10: Cross-Site Scripting (XSS)\nSlides\nVideo\nReading\nCross Site Scripting Prevention Cheat Sheet\nXSS Filter Evasion Cheat Sheet\nOct 15: Cross-Site Scripting Defenses\nSlides\nVideo\nReading\nReining in the Web with Content Security Policy\nCSP is Dead: Long Live CSP\nTrusted Types\nSanitising HTML: the DOM clobbering issue\nOct 17: Fingerprinting and Privacy on the Web\nGuest Lecture by Pete Snyder (Brave Software)\nSlides\nVideo\nReading\nOnline tracking: A 1-million-site measurement and analysis\nMost websites don't need to vibrate: A cost-benefit approach to improving browser security\nBrowser Fingerprinting: An Introduction and the Challenges Ahead\nWebKit Ad Click Attribution\nProtecting Browser State from Web Privacy Attacks\nSkim: WebKit Tracking Prevention Policy\nOct 22: Denial-of-service, Phishing, Side Channels\nSlides\nVideo\nReading\nAlice in Warningland: A Large-Scale Field Study of Browser Security\nClickjacking\nCross-Origin JavaScript Capability Leaks: Detection, Exploitation, and Defense\nOct 24: Code Injection\nSlides\nVideo\nReading\nNone\nOct 29: Transport Layer Security\nSlides\nVideo\nReading\nLooking back at the Snowden revelations\nHTTPS encryption on the web\nOct 31: HTTPS in the Real World: A Spooky Tale\nGuest Lecture by Emily Stark &amp; Chris Palmer (Google Chrome)\nSlides\nVideo\nReading\nDigiNotar on Wikipedia\nAbout Public Key Pinning\nWhat Is HPKP For?\nRolling out Public Key Pinning with HPKP Reporting\nNov 05: Authentication\nSlides\nVideo\nReading\nAuthentication Cheat Sheet\nNov 07: WebAuthn - The future of user authentication on the web 🤞\nGuest Lecture by Lucas Garron (GitHub)\nSlides\nVideo\nReading\nGuide to Web Authentication\nNov 12: No class Nov 14: Managing security concerns in a large Open Source project\nGuest Lecture by Myles Borins (Node.js technical steering committee, Google)\nSlides\nVideo\nReading\nFantastic Timers and Where to Find Them: High-Resolution Microarchitectural Attacks in JavaScript\nA Roadmap for Node.js Security\nNov 19: Server security, Safe coding practices\nSlides\nVideo\nReading\nExploiting Buffer\nNov 21: Local HTTP server security\nSlides\nVideo\nReading\nNone\nDec 03: DNS rebinding attacks\nSlides\nVideo\nReading\nMillions of Streaming Devices Are Vulnerable to a Retro Web Attack\nProtecting Browsers from DNS Rebinding Attacks\nDec 05: Browser architecture, Writing secure code\nSlides\nVideo\nReading\nThe Security Architecture of the Chromium Browser\nCross-Origin Read Blocking (CORB) primer\nSkim: Cross-Origin Read Blocking (CORB) explainer\nBackdooring Your JavaScript Using Minifier Bugs\nI’m harvesting credit card numbers and passwords from your site. Here’s how.\nMajor sites running unauthenticated JavaScript on their payment pages\nAssignments Assignment 0 – Web Programming Adventure ✈️\nAssigned: Tuesday, September 24\nDue: Friday, October 4 at 5:00pm\nAssignment 1 – Journey to the Dark Side 🌘\nAssigned: Tuesday, October 8\nDue: Friday, October 18 at 5:00pm\nAssignment 2 – Oh What a Tangled Web We Weave 🕸\nAssigned: Saturday, October 26\nDue: Thursday, November 7 at 11:59pm\nAssignment 3 – See Piazza\nAssigned: Tuesday, November 12\nDue: Friday, November 22 at 5:00pm\nAssignment 4 – See Piazza\nAssigned: Mon, November 25\nDue: Friday, December 6 at 5:00pm\nWebsite design by Feross Aboukhadijeh.","ctext":"CS 253网络安全秋季2019\n本课程是网络安全的全面概述。 目的是加深对最常见的Web攻击及其对策的理解。 鉴于现代Web领域普遍存在的不安全因素，迫切需要程序员和系统设计人员提高对Web安全问题的理解。\n我们将介绍Web安全的基础知识和最新技术。\n主题包括：网络安全原理，攻击和对策，浏览器安全模型，网络应用漏洞，注入，拒绝服务，TLS攻击，隐私，指纹识别，同源策略，跨站点脚本，身份验证，JavaScript安全， 新兴的威胁，纵深防御以及编写安全代码的技术。 课程项目包括编写安全漏洞，防御不安全的Web应用程序以及实现新兴的Web标准。\n会议时间和地点\n星期二和星期四，1:30 PM-2:50 PM在教室380-380Y\n课程教员\n阿布·哈迪贾（Abu Khadija）的机会（@ X. Stanford.Member的机会）\n教学助手\nEsther Goldstein（egolds@stanford.edu）\n工作时间\nFeross：星期四3-5pm，盖茨323\n以斯帖：星期一3-5pm，星期三3-5pm，黄地下室\n课程政策交流\n我们将主要使用Piazza发出课程公告和回答问题。 请确保注册。\n我们使用Gradescope提交作业。 注册代码为97BGZB。\n要在本季度的任何时候向我们提交匿名反馈，您可以使用此表格。\n先决条件\n先决条件是CS 142或同等的Web开发经验。 您还应该对Web安全感到好奇，并乐于学习聪明的攻击，防御措施和编写安全代码的技术。\n入门级安全课程，例如CS 155，不是正式的先决条件。 本课程中的材料专门针对Web，而CS 155涵盖了更广泛的安全性。\n出席人数\n必须参加讲座。 如果您要同时修读另一门课程，请不要注册该课程。\n等级\n作业（75％）\n期末考试（25％）\n每项作业的价值为15％。 没有期中考试。\n期末考试\n200-305年12月10日，星期二，下午3:30-下午6:30\n以前的期末考试\n2019年期末考试（解决方案）\n更多期末考试样题（解决方案）\n合作政策\n您可以与其他学生讨论作业，也可以一起提出问题的解决方案。 如果这样做，则必须在提交中列出协作者的姓名。 每个学生必须独立编写他们的解决方案。\n逾期提交\n在该季度中，您总共有3个“后期”。 您可以在截止日期之后用较晚的时间提交作业。 您一次最多只能使用三天的延迟时间，并且只能以一天的增量使用延迟的时间（不能部分延迟）。\n如果您在截止日期后超过72小时提交作业，或者如果您在迟到的工作日后提交作业，您将不会获得任何信用。 请准时提交作业，并在特殊情况下节省您的延迟时间。\n如果您对这些政策有疑问，请询问我们。\n如果您对这些政策有疑问，请询问我们。...\n滑梯\n视频\n阅读\n深入了解现代Web浏览器（第1部分）\n深入了解现代Web浏览器（第2部分）\n深入了解现代Web浏览器（第3部分）\nJavaScript的重新介绍\n9月26日：HTTP，Cookie，会话\n滑梯\n视频\n阅读\nHTTP概述\nHTTP Cookie\n略读：HTTP标头\n10月1日：会话攻击\n滑梯\n视频\n阅读\nSameSite Cookies解释\n逐步改善Cookie\nCSRF已死\n10月3日：跨站点请求伪造，同源策略\n滑梯\n视频\n阅读\n同源政策\n跨站请求伪造预防\n10月8日：相同起源策略的例外，跨站点脚本包含\n滑梯\n视频\n10月10日：跨站脚本（XSS）\n滑梯\n视频\n阅读\n跨站点脚本防护备忘单\nXSS过滤器规避速查表\n10月15日：跨站脚本防护\n滑梯\n视频\n阅读\n通过内容安全策略控制Web\nCSP已死：CSP万岁\n可信类型\n清理HTML：DOM破坏问题\n10月17日：网络上的指纹和隐私\nPete Snyder的客座演讲（勇敢的软件）\n滑梯\n视频\n阅读\n在线跟踪：一百万个站点的测量和分析\n大多数网站不需要振动：一种提高浏览器安全性的成本效益方法\n浏览器指纹：简介和未来的挑战\nWebKit广告点击归因\n保护浏览器状态免受Web隐私攻击\n略读：WebKit跟踪预防策略\n10月22日：拒绝服务，网络钓鱼，侧边渠道\n滑梯\n视频\n阅读\n爱丽丝梦游仙境：浏览器安全性的大规模实地研究\n点击劫持\n跨域JavaScript功能泄漏：检测，利用和防御\n10月24日：代码注入\n滑梯\n视频\n阅读\n没有\n10月29日：传输层安全性\n滑梯\n视频\n阅读\n回顾斯诺登的启示\n网络上的HTTPS加密\n10月31日：真实世界中的HTTPS：诡异的故事\n10月31日：真实世界中的HTTPS：诡异的故事...\n滑梯\n视频\n阅读\n维基百科上的DigiNotar\n关于公钥固定\nHPKP的用途是什么？\n通过HPKP报告推出公钥固定\n11月5日：身份验证\n滑梯\n视频\n阅读\n认证备忘单\n11月7日：WebAuthn-网络上用户身份验证的未来\nLucas Garron的客座演讲（GitHub）\n滑梯\n视频\n阅读\nWeb认证指南\n11月12日：不上课11月14日：管理大型开源项目中的安全问题\nMyles Borins的客座演讲（Node.js技术指导委员会，Google）\n滑梯\n视频\n阅读\n奇妙的计时器以及在哪里找到它们：JavaScript中的高分辨率微体系结构攻击\nNode.js安全路线图\n11月19日：服务器安全性，安全的编码做法\n滑梯\n视频\n阅读\n开发缓冲区\n11月21日：本地HTTP服务器安全性\n滑梯\n视频\n阅读\n没有\n12月3日：DNS重新绑定攻击\n滑梯\n视频\n阅读\n成千上万的流媒体设备容易遭受复古Web攻击\n保护浏览器免受DNS重新绑定攻击\n12月5日：浏览器架构，编写安全代码\n滑梯\n视频\n阅读\nChromium浏览器的安全架构\n跨域读取阻止（CORB）底漆\n略读：跨域读取阻止（CORB）解释器\n使用Minifier错误对JavaScript进行后门操作\n我正在从您的网站中获取信用卡号和密码。 就是这样。\n主要网站在其付款页面上运行未经身份验证的JavaScript\n作业作业0 – Web编程冒险✈️\n分配：9月24日，星期二\n截止时间：10月4日，星期五，下午5:00\n作业1 –黑暗之旅Side\n分配：10月8日，星期二\n截止时间：10月18日，星期五，下午5:00\n作业2 –哦，我们编织的网有多纠结🕸\n分配：10月26日，星期六\n截止日期：11月7日，星期四，晚上11:59\n作业3-见广场\n分配：11月12日，星期二\n截止日期：11月22日，星期五，下午5:00\n作业4-见广场\n指派：11月25日，星期一\n截止日期：12月6日，星期五，下午5:00\n网站设计由Feross Aboukhadijeh设计。\n"}

{"l":"https://thoughtbot.com/blog/reading-an-explain-analyze-query-plan","n":"Reading a Postgres EXPLAIN ANALYZE Query Plan","html":"\n<nav class=\"site-nav\">\n<a class=\"site-nav-skip-link\" href=\"#main-content\">Skip to main content</a>\n<a class=\"site-nav-logo-link line-height-zero\" href=\"/blog\"><svg xmlns=\"http://www.w3.org/2000/svg\" role=\"img\" width=\"146\" height=\"35\" viewBox=\"0 0 146 35\" aria-labelledby=\"aof9gw1w01kkttj86vfkhnjhlraupbm4\" class=\"site-nav-logo\"><title id=\"aof9gw1w01kkttj86vfkhnjhlraupbm4\">Blog home</title><g><path d=\"M25.077 25.778l-.432-.43c.235-.18.387-.463.387-.78 0-.543-.44-.982-.983-.982-.544 0-.983.44-.983.98 0 .32.154.606.392.785l-.433.432c-.348-.29-.57-.785-.57-1.273 0-.392.145-.534.38-1.085h-.193v-4.96h-.277v10.557l.277.267v.75h-4.97v-.75l.67-.353h.157V25.63h-1.655v3.392l.552.267v.846l-4.695.008v-.855l.455-.337-.006-10.488h-.448v4.96h-.256c.236.55.38.692.38 1.084 0 .486-.22.95-.57 1.243l-.43-.418c.237-.18.39-.456.39-.777 0-.542-.44-.977-.98-.977-.544 0-.984.442-.984.983 0 .318.152.602.387.78l-.433.433c-.345-.292-.605-.726-.605-1.212 0-.39.34-.75.34-1.027v-7.695c0-.296.295-.533.59-.533h14.09c.297 0 .507.238.507.534v7.695c.55.276.445.635.445 1.027 0 .484-.153.92-.498 1.21zM14.05 9.094h7.183c.296 0 .582.132.582.427v4.677c0 .294-.286.685-.582.685H14.05c-.293 0-.52-.39-.52-.685V9.52c0-.294.227-.426.52-.426zm6.446-1.52l-.433.616c-.548-.525-1.437-.874-2.418-.874-.985 0-1.877.35-2.425.88l-.432-.617c.684-.616 1.71-1.006 2.857-1.006 1.143 0 2.167.388 2.85 1zm-.007-.96c-.745-.563-1.746-.872-2.818-.872-1.073 0-2.073.31-2.817.87-.176.134-.33.276-.465.427l-.436-.622C14.794 5.558 16.147 5 17.672 5c1.49 0 2.813.532 3.658 1.358l-.434.618c-.12-.128-.256-.25-.407-.363zM17.644 3.49c1.846 0 3.488.662 4.53 1.69l-.43.612c-.894-.94-2.398-1.56-4.1-1.56-1.706 0-3.214.62-4.107 1.566l-.43-.614c1.042-1.03 2.686-1.694 4.537-1.694zM17.642.077C8.022.077.225 7.857.225 17.46c0 9.598 7.798 17.38 17.417 17.38 9.62 0 17.417-7.782 17.417-17.38C35.06 7.857 27.26.076 17.64.076z\"></path><path d=\"M15.812 11.97c-.257 0-.467-.21-.467-.467 0-.26.21-.467.467-.467.26 0 .47.208.47.467 0 .258-.21.467-.47.467zm0-1.38c-.504 0-.913.41-.913.913 0 .503.408.913.912.913.505 0 .915-.41.915-.913 0-.504-.41-.913-.915-.913zM19.483 11.97c-.258 0-.467-.21-.467-.467 0-.26.21-.467.467-.467.258 0 .47.208.47.467 0 .258-.212.467-.47.467zm0-1.38c-.506 0-.916.41-.916.913 0 .503.41.913.916.913.505 0 .915-.41.915-.913 0-.504-.41-.913-.915-.913z\"></path></g><g><path d=\"M61.728 23.69h-2.406v-5.67c0-1.06-.17-1.832-.51-2.313-.34-.482-.916-.722-1.725-.722-.965 0-1.71.346-2.236 1.04v7.665h-2.405V7.765h2.406v6.116c.74-.622 1.563-.934 2.47-.934 2.94 0 4.408 1.692 4.408 5.075v5.67M63.45 18.425c0-.765.126-1.483.374-2.156s.603-1.253 1.065-1.742c.46-.488 1.02-.874 1.68-1.157.66-.282 1.395-.424 2.204-.424.81 0 1.54.142 2.193.425.653.284 1.21.673 1.672 1.17.46.494.818 1.075 1.074 1.74.256.665.383 1.38.383 2.145 0 .764-.124 1.48-.372 2.144-.25.664-.604 1.245-1.065 1.74-.46.496-1.022.885-1.682 1.168-.66.283-1.395.425-2.204.425-.823 0-1.56-.142-2.214-.425-.653-.283-1.21-.67-1.67-1.157-.463-.488-.818-1.065-1.066-1.73-.248-.665-.373-1.387-.373-2.165zm2.47 0c0 1.06.253 1.903.757 2.526.504.624 1.203.935 2.097.935.895 0 1.594-.31 2.098-.934.503-.622.755-1.464.755-2.525 0-1.062-.252-1.9-.755-2.517-.504-.615-1.203-.923-2.098-.923-.894 0-1.593.308-2.097.923-.504.616-.756 1.455-.756 2.517zM84.975 23.69H82.76l-.105-.785c-.71.665-1.555.998-2.534.998-2.866 0-4.3-1.65-4.3-4.948v-5.818h2.406v5.648c0 1.062.178 1.837.532 2.326.355.49.916.733 1.682.733.937 0 1.647-.325 2.13-.977v-7.73h2.405V23.69M91.546 29c-.824 0-1.547-.086-2.172-.256-.625-.17-1.143-.4-1.554-.69-.412-.29-.724-.623-.937-.998-.213-.375-.32-.775-.32-1.2 0-1.033.597-1.82 1.79-2.357-.668-.37-1.002-.857-1.002-1.466 0-.637.37-1.132 1.108-1.486-1.12-.78-1.682-1.918-1.682-3.42 0-.593.1-1.15.3-1.665.197-.517.48-.96.85-1.328.37-.368.82-.658 1.352-.87.532-.212 1.132-.32 1.8-.32.95 0 1.78.228 2.49.68.682-.34 1.47-.51 2.364-.51h.532l-.19 1.55h-.81c-.242 0-.512.022-.81.065.497.693.745 1.486.745 2.378 0 .566-.096 1.1-.288 1.603-.19.504-.472.946-.84 1.328-.37.382-.82.683-1.353.903-.533.22-1.133.33-1.8.33-.44 0-.852-.043-1.235-.128-.213.113-.32.255-.32.425 0 .127.047.234.14.318.09.085.244.163.457.234.213.07.5.137.862.2.362.065.82.132 1.374.202.468.07.95.163 1.447.277.497.112.95.282 1.363.508.412.227.752.524 1.022.892s.42.842.447 1.422c0 1.02-.447 1.837-1.34 2.453-.896.616-2.16.924-3.79.924zm-.47-14.228c-.68 0-1.202.213-1.564.637-.362.424-.543.997-.543 1.72 0 .72.184 1.295.553 1.72.37.424.894.636 1.576.636.68 0 1.202-.216 1.563-.647.362-.433.544-1.01.544-1.732s-.185-1.292-.554-1.71c-.37-.417-.894-.626-1.576-.626zm.576 9.534l-1.47-.212c-.453.14-.822.346-1.106.615-.284.268-.426.587-.426.955 0 .48.25.867.745 1.157.497.29 1.193.436 2.087.436.894 0 1.614-.142 2.16-.425.547-.283.82-.65.82-1.104 0-.412-.24-.72-.723-.925-.484-.205-1.18-.37-2.088-.5zM121.32 23.903c-1.092 0-2.03-.347-2.81-1.04l-.085.827h-2.235V7.765h2.406v6.094c.695-.61 1.604-.914 2.725-.914.767 0 1.463.142 2.088.425.624.284 1.156.67 1.596 1.158.44.49.78 1.07 1.022 1.74.242.674.362 1.392.362 2.157 0 .764-.117 1.48-.35 2.144-.235.664-.572 1.245-1.012 1.74-.44.496-.973.885-1.597 1.168-.626.283-1.328.425-2.11.425zm-.19-8.918c-.824 0-1.47.304-1.938.913-.47.608-.703 1.45-.703 2.527 0 1.104.233 1.957.702 2.558.468.602 1.114.902 1.937.902.85 0 1.53-.32 2.033-.966.504-.645.755-1.476.755-2.495 0-1.02-.248-1.848-.745-2.485-.496-.637-1.178-.955-2.044-.955zM107.016 23.69h-2.406v-5.67c0-1.06-.17-1.832-.51-2.313-.342-.482-.917-.722-1.726-.722-.965 0-1.71.346-2.235 1.04v7.665h-2.407V7.765h2.406v6.116c.737-.622 1.56-.934 2.47-.934 2.937 0 4.406 1.692 4.406 5.075v5.67M114.393 21.928l-.213 1.975h-1.83c-.47 0-.88-.07-1.236-.213-.355-.14-.65-.332-.884-.573-.234-.24-.408-.524-.52-.85-.115-.325-.172-.68-.172-1.06V15.09h-1.597l.214-1.953h1.384V10l2.406-.254v3.39h2.47v1.955h-2.47v5.012c0 .44.014.782.043 1.03.028.247.1.428.213.54.113.115.29.185.532.213.24.03.575.043 1 .043h.66M127.674 18.425c0-.765.124-1.483.373-2.156.248-.673.603-1.253 1.064-1.742.463-.488 1.023-.874 1.683-1.157.66-.282 1.395-.424 2.204-.424.81 0 1.54.142 2.193.425.653.284 1.21.673 1.67 1.17.463.494.82 1.075 1.077 1.74.255.665.383 1.38.383 2.145 0 .764-.124 1.48-.373 2.144-.248.664-.603 1.245-1.064 1.74-.46.496-1.022.885-1.682 1.168-.66.283-1.394.425-2.203.425-.823 0-1.56-.142-2.214-.425-.653-.283-1.21-.67-1.672-1.157-.46-.488-.815-1.065-1.063-1.73-.25-.665-.373-1.387-.373-2.165zm2.47 0c0 1.06.252 1.903.756 2.526.504.624 1.203.935 2.097.935.894 0 1.593-.31 2.097-.934.504-.622.756-1.464.756-2.525 0-1.062-.252-1.9-.756-2.517-.504-.615-1.203-.923-2.097-.923-.894 0-1.593.308-2.097.923-.504.616-.756 1.455-.756 2.517zM145.09 21.928l-.213 1.975h-1.83c-.47 0-.88-.07-1.236-.213-.354-.14-.65-.332-.883-.573-.234-.24-.408-.524-.52-.85-.115-.325-.172-.68-.172-1.06V15.09h-1.597l.213-1.953h1.385V10l2.406-.254v3.39h2.47v1.955h-2.47v5.012c0 .44.015.782.044 1.03.028.247.1.428.213.54.113.115.29.185.532.213.24.03.574.043 1 .043h.66M50.723 21.928l-.213 1.975h-1.83c-.47 0-.88-.07-1.236-.213-.355-.14-.65-.332-.884-.573-.234-.24-.408-.524-.522-.85-.113-.325-.17-.68-.17-1.06V15.09H44.27l.214-1.953h1.384V10l2.406-.254v3.39h2.47v1.955h-2.47v5.012c0 .44.014.782.043 1.03.028.247.1.428.213.54.113.115.29.185.532.213.24.03.575.043 1 .043h.66\"></path></g></svg>\n\n</a><ul class=\"site-nav-links\">\n<li>\n<a class=\"site-nav-link\" href=\"/blog/tags\">All Topics</a>\n</li>\n<li>\n<a class=\"site-nav-link\" href=\"/blog/design\">Design</a>\n</li>\n<li>\n<a class=\"site-nav-link\" href=\"/blog/web\">Web</a>\n</li>\n<li>\n<a class=\"site-nav-link\" href=\"/blog/ios\">iOS</a>\n</li>\n<li>\n<a class=\"site-nav-link\" href=\"/blog/android\">Android</a>\n</li>\n<li>\n<a class=\"site-nav-link\" href=\"/blog/search\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"512\" height=\"512\" viewBox=\"0 0 310.42 310.42\" role=\"img\" aria-labelledby=\"a6829wmpdakb4vop7qipdboxohs5o5ny\"><title id=\"a6829wmpdakb4vop7qipdboxohs5o5ny\">Search</title>\n  <path d=\"M273.587 214.965c49.11-49.11 49.11-129.02 0-178.132-49.11-49.11-129.02-49.11-178.13 0C53.793 78.497 47.483 140.463 76.51 188.85c0 0 2.085 3.498-.73 6.312-16.066 16.064-64.264 64.263-64.264 64.263-12.79 12.79-15.836 30.675-4.493 42.02l1.953 1.95c11.343 11.346 29.23 8.302 42.02-4.49l64.127-64.127c2.95-2.95 6.448-.866 6.448-.866 48.39 29.026 110.356 22.717 152.02-18.947zM118.71 191.71c-36.287-36.288-36.286-95.332.002-131.62 36.288-36.287 95.332-36.288 131.62 0 36.287 36.287 36.287 95.332 0 131.62-36.29 36.286-95.332 36.286-131.62 0z\" fill=\"#454547\"></path>\n  <path d=\"M126.75 118.424c-1.69 0-3.406-.332-5.06-1.03-6.612-2.8-9.705-10.427-6.907-17.04 17.586-41.558 65.703-61.06 107.26-43.475 6.612 2.794 9.705 10.422 6.907 17.034-2.8 6.612-10.425 9.703-17.04 6.906-28.353-11.997-61.185 1.31-73.182 29.664-2.1 4.96-6.913 7.938-11.978 7.938z\" fill=\"#454547\"></path>\n</svg>\n\n</a></li>\n</ul>\n<a class=\"hiring-cta\" onclick=\"analytics.track('Blog Hiring Button', { category: 'Click' });\" href=\"/jobs\">We're hiring!</a>\n</nav>\n\n<div class=\"container\">\n\n<article class=\"post text\" data-url=\"/blog/reading-an-explain-analyze-query-plan\" id=\"main-content\" itemscope=\"\" itemtype=\"https://schema.org/CreativeWork\" role=\"main\">\n<header>\n<h1 class=\"title\">\nReading a Postgres EXPLAIN ANALYZE Query Plan\n</h1>\n<div class=\"meta\">\n<div class=\"meta-author\">\n<a href=\"/blog/authors/caleb-hearth\">Caleb Hearth</a>\n</div>\n<time class=\"meta-date\" datetime=\"2020-03-31T21:16:07Z\" itemprop=\"dateModified\">\nJuly 26, 2016\n<span class=\"meta-updated\">updated on</span>\nMarch 31, 2020\n</time>\n<ul class=\"meta-tag-list\">\n<li class=\"meta-tag-item\">\n<a href=\"/blog/tags/postgres\">postgres</a>\n</li>\n<li class=\"meta-tag-item\">\n<a href=\"/blog/tags/performance\">performance</a>\n</li>\n<li class=\"meta-tag-item\">\n<a href=\"/blog/tags/data\">data</a>\n</li>\n<li class=\"meta-tag-item\">\n<a href=\"/blog/tags/sql\">sql</a>\n</li>\n</ul>\n\n</div>\n\n</header>\n<div class=\"post-body\">\n<p>The most powerful tool at our disposal for understanding and optimizing SQL\nqueries is <a href=\"https://www.postgresql.org/docs/9.5/static/sql-explain.html\"><code>EXPLAIN ANALYZE</code></a>, which is a Postgres command that accepts a\nstatement such as <code>SELECT ...</code>, <code>UPDATE ...</code>, or <code>DELETE ...</code>, executes the\nstatement, and instead of returning the data provides a query plan detailing\nwhat approach the planner took to executing the statement provided.</p>\n\n<p>Here’s a query pulled from the <a href=\"https://www.postgresql.org/docs/9.5/static/using-explain.html\">Postgres Using EXPLAIN page</a>:</p>\n<div class=\"highlight\"><pre class=\"highlight sql\"><code><span class=\"k\">EXPLAIN</span> <span class=\"k\">ANALYZE</span> <span class=\"k\">SELECT</span> <span class=\"o\">*</span>\n<span class=\"k\">FROM</span> <span class=\"n\">tenk1</span> <span class=\"n\">t1</span><span class=\"p\">,</span> <span class=\"n\">tenk2</span> <span class=\"n\">t2</span>\n<span class=\"k\">WHERE</span> <span class=\"n\">t1</span><span class=\"p\">.</span><span class=\"n\">unique1</span> <span class=\"o\">&lt;</span> <span class=\"mi\">100</span> <span class=\"k\">AND</span> <span class=\"n\">t1</span><span class=\"p\">.</span><span class=\"n\">unique2</span> <span class=\"o\">=</span> <span class=\"n\">t2</span><span class=\"p\">.</span><span class=\"n\">unique2</span>\n<span class=\"k\">ORDER</span> <span class=\"k\">BY</span> <span class=\"n\">t1</span><span class=\"p\">.</span><span class=\"n\">fivethous</span><span class=\"p\">;</span>\n</code></pre></div>\n<p>And the query plan it generates:</p>\n<div class=\"highlight\"><pre class=\"highlight plaintext\"><code>                                                                 QUERY PLAN\n--------------------------------------------------------------------------------------------------------------------------------------------\n Sort  (cost=717.34..717.59 rows=101 width=488) (actual time=7.761..7.774 rows=100 loops=1)\n   Sort Key: t1.fivethous\n   Sort Method: quicksort  Memory: 77kB\n   -&gt;  Hash Join  (cost=230.47..713.98 rows=101 width=488) (actual time=0.711..7.427 rows=100 loops=1)\n         Hash Cond: (t2.unique2 = t1.unique2)\n         -&gt;  Seq Scan on tenk2 t2  (cost=0.00..445.00 rows=10000 width=244) (actual time=0.007..2.583 rows=10000 loops=1)\n         -&gt;  Hash  (cost=229.20..229.20 rows=101 width=244) (actual time=0.659..0.659 rows=100 loops=1)\n               Buckets: 1024  Batches: 1  Memory Usage: 28kB\n               -&gt;  Bitmap Heap Scan on tenk1 t1  (cost=5.07..229.20 rows=101 width=244) (actual time=0.080..0.526 rows=100 loops=1)\n                     Recheck Cond: (unique1 &lt; 100)\n                     -&gt;  Bitmap Index Scan on tenk1_unique1  (cost=0.00..5.04 rows=101 width=0) (actual time=0.049..0.049 rows=100 loops=1)\n                           Index Cond: (unique1 &lt; 100)\n Planning time: 0.194 ms\n Execution time: 8.008 ms\n</code></pre></div>\n<p>Postgres builds a tree structure of plan nodes representing the different\nactions taken, with the root and each <code>-&gt;</code> pointing to one of them. In some\ncases <code>EXPLAIN ANALYZE</code> provides additional execution statistics beyond the\nexecution times and row counts, such as <code>Sort</code> and <code>Hash</code> above. Any line other\nthan the first without an <code>-&gt;</code> is such information, so the structure of the\nquery is:</p>\n<div class=\"highlight\"><pre class=\"highlight plaintext\"><code>Sort\n└── Hash Join\n    ├── Seq Scan\n    └── Hash\n        └── Bitmap Heap Scan\n            └── Bitmap Index Scan\n</code></pre></div>\n<p>Each tree’s branches represent sub-actions, and you’d work inside-out to\ndetermine what’s happening “first” (though the order of nodes at the same level\ncould be different).</p>\n\n<p>The first thing done is a <code>Bitmap Index Scan</code> on the <code>tenk_unique1</code> index:</p>\n<div class=\"highlight\"><pre class=\"highlight plaintext\"><code>-&gt;  Bitmap Index Scan on tenk1_unique1  (cost=0.00..5.04 rows=101 width=0) (actual time=0.049..0.049 rows=100 loops=1)\n      Index Cond: (unique1 &lt; 100)\n</code></pre></div>\n<p>This corresponds to the SQL <code>WHERE t1.unique1 &lt; 100</code>. Postgres is finding the\nlocations of the rows matching the index condition <code>unique1 &lt; 100</code>. The rows\nthemselves aren’t being returned here. The cost estimate <code>(cost=0.00..5.04\nrows=101 width=0)</code> means that Postgres expects that it will “cost” 5.04 of an <u title=\"The estimated cost is computed as (disk pages read * seq_page_cost) +\n(rows scanned * cpu_tuple_cost).\">arbitrary unit of computation</u> to find\nthese values. The 0.00 is the cost at which this node can begin working (in this\ncase, just startup time for the query). <code>rows</code> is the estimated number of rows\nthis Index Scan will return, and <code>width</code> is the estimated size in bytes of the\nreturned rows (0 because we only care about the location, not the content of the\nrows).</p>\n\n<p>Because we ran <code>EXPLAIN</code> with the <code>ANALYZE</code> option, the query was actually\nexecuted and timing information was captured. <code>(actual time=0.049..0.049\nrows=100 loops=1)</code> means that the index scan was executed 1 time (the <code>loops</code>\nvalue), that it returned 100 rows, and that the actual time was 0.. In the case\nof a node executed more than once, the actual time is an average of each\niteration and you would multiply the value by the number of loops to get real\ntime. The range values may also differ which gives an idea of min/max times\nspent. This establishes a ratio for the costs that each cost unit of <span style=\"white-space: nowrap\">0.049ms / 5.04 units ≈ 0.01ms/unit</span> for this\nquery.</p>\n\n<p>The results of the Index Scan are passed up to a <code>Bitmap Heap Scan</code> action. In\nthis node, Postgres is taking the locations of the rows in the tenk1 table,\naliased as t1, where <code>unique1 &lt; 100</code> and fetching the rows from the table\nitself.</p>\n<div class=\"highlight\"><pre class=\"highlight plaintext\"><code>-&gt;  Bitmap Heap Scan on tenk1 t1  (cost=5.07..229.20 rows=101 width=244) (actual time=0.080..0.526 rows=100 loops=1)\n      Recheck Cond: (unique1 &lt; 100)\n</code></pre></div>\n<p>We can see that the cost expectations, when multiplied by the 0.01 value we\ncalculated, would mean a rough expected time of <span style=\"white-space:\nnowrap\">(229.20 - 5.07) * 0.01 ≈ 2.24ms</span>, and we see an actual time of\n0.526ms per row, which is off by a factor of 4. This may be because the cost\nestimate is an upper bound and not all rows needed to be read, or because the\nrecheck condition is always true.</p>\n\n<p>The combination of <code>Bitmap Index Scan</code> and <code>Bitmap Heap Scan</code> is much more\nexpensive than reading the rows sequentially from the table (a <code>Seq Scan</code>), but\nbecause relatively few rows need to be visited in this case the two step process\nends up being faster. This is further sped by sorting the rows into physical\norder before fetching them, which minimizes the cost of separate fetches. The\n“bitmap” in the node names does the sorting.</p>\n\n<p>The results of the heap scan, those rows from tenk1 for which <code>unique1 &lt; 100</code> is\ntrue, are inserted into an in-memory Hash table as they are read. As we can see\nby the costs, this takes no time at all.</p>\n<div class=\"highlight\"><pre class=\"highlight plaintext\"><code>-&gt;  Hash  (cost=229.20..229.20 rows=101 width=244) (actual time=0.659..0.659 rows=100 loops=1)\n      Buckets: 1024  Batches: 1  Memory Usage: 28kB\n</code></pre></div>\n<p>The Hash node includes information about number of hash buckets and batches, as\nwell as peak memory usage. If Batches &gt; 1 there’s also disk usage involved, but\nthat is not shown. The memory usage makes sense at <span style=\"white-space:\nnowrap\">100 rows * 244 bytes = 24.4 kB</span>, which is close enough to the\n28kB for our purposes that we can assume it’s the memory taken by the Hash keys\nthemselves.</p>\n\n<p>Next, Postgres reads all 10000 rows from tenk2 (aliased as t2) and checks them\nagainst the Hash of tenk1 rows. Hash Join means that the rows of one table are\nentered into an in-memory hash (which we’ve built up to so far), after which the\nrows of another table is scanned and its values probed against the hash table\nfor matches. We see the conditions of the “match” on the second line, <code>Hash\nCond: (t2.unique2 = t1.unique2)</code>. Note that because the query is selecting all\nvalues from both tenk1 and tenk2, the width of each row doubles during the Hash\nJoin.</p>\n<div class=\"highlight\"><pre class=\"highlight plaintext\"><code>-&gt;  Hash Join  (cost=230.47..713.98 rows=101 width=488) (actual time=0.711..7.427 rows=100 loops=1)\n      Hash Cond: (t2.unique2 = t1.unique2)\n      -&gt;  Seq Scan on tenk2 t2  (cost=0.00..445.00 rows=10000 width=244) (actual time=0.007..2.583 rows=10000 loops=1)\n</code></pre></div>\n<p>Now that all rows that meet our conditions have been collected, we can sort the\nresult set by the <code>Sort Key: t1.fivethous</code>.</p>\n<div class=\"highlight\"><pre class=\"highlight plaintext\"><code>Sort  (cost=717.34..717.59 rows=101 width=488) (actual time=7.761..7.774 rows=100 loops=1)\n  Sort Key: t1.fivethous\n  Sort Method: quicksort  Memory: 77kB\n</code></pre></div>\n<p>The Sort node includes information about the algorithm used to sort,\n<code>quicksort</code>, whether the sort was done in memory or on disk (which greatly\neffects speed), and the amount of memory/disk space needed.</p>\n\n<p>Understanding how to read query plans is great for optimizing queries. For\nexample, Seq Scan nodes often indicate an opportunity for an index to be added,\nwhich is much faster to read. Familiarizing yourself with these plans will make\nyou a better database engineer. For more examples of query plans, read <a href=\"https://www.postgresql.org/docs/9.5/static/using-explain.html\">Using\n<code>EXPLAIN</code></a> from which this example was taken.</p>\n\n<p>Now that you’re able to read a query plan, <a href=\"https://thoughtbot.com/blog/advanced-postgres-performance-tips\" title=\"Advanced Postgres Performance Tips\">learn to optimize performance</a>.</p>\n\n</div>\n<aside class=\"related-articles\">\n<h2>If you enjoyed this post, you might also like:</h2>\n<ol>\n<li>\n<a href=\"/blog/ordering-within-a-sql-group-by-clause\">Finding the Oldest/Youngest Records Within a Group</a>\n</li>\n<li>\n<a href=\"/blog/postgresql-performance-considerations\">PostgreSQL Performance Considerations</a>\n</li>\n<li>\n<a href=\"/blog/postgres-index-types\">Postgres Index Types</a>\n</li>\n</ol>\n</aside>\n</article>\n\n</div>\n<section class=\"container\">\n<div id=\"promoted\">\n<div class=\"ads\">\n<img alt=\"Developer working on a Code Audit at their desk\" class=\"ads__image\" src=\"https://thoughtbot.com/blog/assets/article-ads/code-audit-29b1862f214a72e74c82707e6f8d765b62c59c735d8f2135f768729c4b9360ea.jpg\">\n<div class=\"ads__body\">\n<h3 class=\"ads__title\">\nUpgrade your codebase with a Code Audit\n</h3>\n<p>\nLearn how we can help you understand the current state of your code\nquality, speed up delivery times, improve developer happiness, and level\nup your user experience\n</p>\n<a class=\"button\" href=\"https://thoughtbot.com/services/code-audit\">Learn more about a Code Audit</a>\n</div>\n</div>\n\n\n</div>\n\n</section>\n<div class=\"global-footer\">\n<div class=\"container container-wide\">\n<nav class=\"global-footer-link-section\">\n<ul class=\"global-footer-link-list\">\n<li>\n<a href=\"https://thoughtbot.com/services\">Services\n</a></li>\n<li>\n<a href=\"https://thoughtbot.com/case-studies\">Case Studies\n</a></li>\n<li>\n<a href=\"https://thoughtbot.com/resources\">Resources\n</a></li>\n<li>\n<a href=\"https://thoughtbot.com/hire-us\">Hire Us\n</a></li>\n</ul>\n<ul class=\"global-footer-link-list\">\n<li>\n<a href=\"https://thoughtbot.com/our-company\">Our Company\n</a></li>\n<li>\n<a href=\"https://thoughtbot.com/purpose\">Purpose\n</a></li>\n<li>\n<a href=\"https://thoughtbot.com/blog\">Blog\n</a></li>\n<li>\n<a href=\"https://thoughtbot.com/jobs\">Join our team\n</a></li>\n</ul>\n<ul class=\"global-footer-link-list\">\n<li>\n<a href=\"https://twitter.com/thoughtbot\">Twitter\n</a></li>\n<li>\n<a href=\"https://github.com/thoughtbot\">GitHub\n</a></li>\n<li>\n<a href=\"https://dribbble.com/thoughtbot\">Dribbble\n</a></li>\n<li>\n<a href=\"https://www.instagram.com/thoughtbot/\">Instagram\n</a></li>\n</ul>\n</nav>\n<footer class=\"global-footer-copywright-section\">\n<p class=\"global-footer-copywright-prose\">\n© 2020\n<a href=\"https://thoughtbot.com\">thoughtbot, inc.</a>\nThe design of a robot and thoughtbot are registered trademarks of\nthoughtbot, inc.\n<a href=\"//www.iubenda.com/privacy-policy/7827608\">Privacy Policy</a>\n</p>\n</footer>\n</div>\n</div>\n\n\n  <script type=\"text/javascript\" async=\"\" src=\"https://js.hs-analytics.net/analytics/1587652800000/5257758.js\" id=\"hs-analytics\"></script><script type=\"text/javascript\" async=\"\" src=\"https://www.google-analytics.com/analytics.js\"></script><script type=\"text/javascript\" async=\"\" src=\"https://cdn.segment.com/analytics.js/v1/wperrhev8f/analytics.min.js\"></script><script>\n    !function(){var analytics=window.analytics=window.analytics||[];if(!analytics.initialize)if(analytics.invoked)window.console&&console.error&&console.error(\"Segment snippet included twice.\");else{analytics.invoked=!0;analytics.methods=[\"trackSubmit\",\"trackClick\",\"trackLink\",\"trackForm\",\"pageview\",\"identify\",\"reset\",\"group\",\"track\",\"ready\",\"alias\",\"debug\",\"page\",\"once\",\"off\",\"on\"];analytics.factory=function(t){return function(){var e=Array.prototype.slice.call(arguments);e.unshift(t);analytics.push(e);return analytics}};for(var t=0;t<analytics.methods.length;t++){var e=analytics.methods[t];analytics[e]=analytics.factory(e)}analytics.load=function(t){var e=document.createElement(\"script\");e.type=\"text/javascript\";e.async=!0;e.src=(\"https:\"===document.location.protocol?\"https://\":\"http://\")+\"cdn.segment.com/analytics.js/v1/\"+t+\"/analytics.min.js\";var n=document.getElementsByTagName(\"script\")[0];n.parentNode.insertBefore(e,n)};analytics.SNIPPET_VERSION=\"4.0.0\";\n    analytics.load(\"wperrhev8f\");\n    analytics.page();\n    }}();\n  </script>\n\n\n\n\n","text":"Skip to main content Blog home\nAll Topics\nDesign\nWeb\niOS\nAndroid\nSearch\nWe're hiring!\nReading a Postgres EXPLAIN ANALYZE Query Plan\nCaleb Hearth\nJuly 26, 2016\nupdated on\nMarch 31, 2020\npostgres\nperformance\ndata\nsql\nThe most powerful tool at our disposal for understanding and optimizing SQL\nqueries is EXPLAIN ANALYZE, which is a Postgres command that accepts a\nstatement such as SELECT ..., UPDATE ..., or DELETE ..., executes the\nstatement, and instead of returning the data provides a query plan detailing\nwhat approach the planner took to executing the statement provided.\nHere’s a query pulled from the Postgres Using EXPLAIN page:\n<code><span class=\"k\">EXPLAIN</span> <span class=\"k\">ANALYZE</span> <span class=\"k\">SELECT</span> <span class=\"o\">*</span>\n<span class=\"k\">FROM</span> <span class=\"n\">tenk1</span> <span class=\"n\">t1</span><span class=\"p\">,</span> <span class=\"n\">tenk2</span> <span class=\"n\">t2</span>\n<span class=\"k\">WHERE</span> <span class=\"n\">t1</span><span class=\"p\">.</span><span class=\"n\">unique1</span> <span class=\"o\">&lt;</span> <span class=\"mi\">100</span> <span class=\"k\">AND</span> <span class=\"n\">t1</span><span class=\"p\">.</span><span class=\"n\">unique2</span> <span class=\"o\">=</span> <span class=\"n\">t2</span><span class=\"p\">.</span><span class=\"n\">unique2</span>\n<span class=\"k\">ORDER</span> <span class=\"k\">BY</span> <span class=\"n\">t1</span><span class=\"p\">.</span><span class=\"n\">fivethous</span><span class=\"p\">;</span>\n</code>\nAnd the query plan it generates:\n<code> QUERY PLAN\n-------------------------------------------------------------------------------------------------------------------------------------------- Sort (cost=717.34..717.59 rows=101 width=488) (actual time=7.761..7.774 rows=100 loops=1) Sort Key: t1.fivethous Sort Method: quicksort Memory: 77kB -&gt; Hash Join (cost=230.47..713.98 rows=101 width=488) (actual time=0.711..7.427 rows=100 loops=1) Hash Cond: (t2.unique2 = t1.unique2) -&gt; Seq Scan on tenk2 t2 (cost=0.00..445.00 rows=10000 width=244) (actual time=0.007..2.583 rows=10000 loops=1) -&gt; Hash (cost=229.20..229.20 rows=101 width=244) (actual time=0.659..0.659 rows=100 loops=1) Buckets: 1024 Batches: 1 Memory Usage: 28kB -&gt; Bitmap Heap Scan on tenk1 t1 (cost=5.07..229.20 rows=101 width=244) (actual time=0.080..0.526 rows=100 loops=1) Recheck Cond: (unique1 &lt; 100) -&gt; Bitmap Index Scan on tenk1_unique1 (cost=0.00..5.04 rows=101 width=0) (actual time=0.049..0.049 rows=100 loops=1) Index Cond: (unique1 &lt; 100) Planning time: 0.194 ms Execution time: 8.008 ms\n</code>\nPostgres builds a tree structure of plan nodes representing the different\nactions taken, with the root and each -&gt; pointing to one of them. In some\ncases EXPLAIN ANALYZE provides additional execution statistics beyond the\nexecution times and row counts, such as Sort and Hash above. Any line other\nthan the first without an -&gt; is such information, so the structure of the\nquery is:\n<code>Sort\n└── Hash Join ├── Seq Scan └── Hash └── Bitmap Heap Scan └── Bitmap Index Scan\n</code>\nEach tree’s branches represent sub-actions, and you’d work inside-out to\ndetermine what’s happening “first” (though the order of nodes at the same level\ncould be different).\nThe first thing done is a Bitmap Index Scan on the tenk_unique1 index:\n<code>-&gt; Bitmap Index Scan on tenk1_unique1 (cost=0.00..5.04 rows=101 width=0) (actual time=0.049..0.049 rows=100 loops=1) Index Cond: (unique1 &lt; 100)\n</code>\nThis corresponds to the SQL WHERE t1.unique1 &lt; 100. Postgres is finding the\nlocations of the rows matching the index condition unique1 &lt; 100. The rows\nthemselves aren’t being returned here. The cost estimate (cost=0.00..5.04\nrows=101 width=0) means that Postgres expects that it will “cost” 5.04 of an arbitrary unit of computation to find\nthese values. The 0.00 is the cost at which this node can begin working (in this\ncase, just startup time for the query). rows is the estimated number of rows\nthis Index Scan will return, and width is the estimated size in bytes of the\nreturned rows (0 because we only care about the location, not the content of the\nrows).\nBecause we ran EXPLAIN with the ANALYZE option, the query was actually\nexecuted and timing information was captured. (actual time=0.049..0.049\nrows=100 loops=1) means that the index scan was executed 1 time (the loops\nvalue), that it returned 100 rows, and that the actual time was 0.. In the case\nof a node executed more than once, the actual time is an average of each\niteration and you would multiply the value by the number of loops to get real\ntime. The range values may also differ which gives an idea of min/max times\nspent. This establishes a ratio for the costs that each cost unit of 0.049ms / 5.04 units ≈ 0.01ms/unit for this\nquery.\nThe results of the Index Scan are passed up to a Bitmap Heap Scan action. In\nthis node, Postgres is taking the locations of the rows in the tenk1 table,\naliased as t1, where unique1 &lt; 100 and fetching the rows from the table\nitself.\n<code>-&gt; Bitmap Heap Scan on tenk1 t1 (cost=5.07..229.20 rows=101 width=244) (actual time=0.080..0.526 rows=100 loops=1) Recheck Cond: (unique1 &lt; 100)\n</code>\nWe can see that the cost expectations, when multiplied by the 0.01 value we\ncalculated, would mean a rough expected time of (229.20 - 5.07) * 0.01 ≈ 2.24ms, and we see an actual time of\n0.526ms per row, which is off by a factor of 4. This may be because the cost\nestimate is an upper bound and not all rows needed to be read, or because the\nrecheck condition is always true.\nThe combination of Bitmap Index Scan and Bitmap Heap Scan is much more\nexpensive than reading the rows sequentially from the table (a Seq Scan), but\nbecause relatively few rows need to be visited in this case the two step process\nends up being faster. This is further sped by sorting the rows into physical\norder before fetching them, which minimizes the cost of separate fetches. The\n“bitmap” in the node names does the sorting.\nThe results of the heap scan, those rows from tenk1 for which unique1 &lt; 100 is\ntrue, are inserted into an in-memory Hash table as they are read. As we can see\nby the costs, this takes no time at all.\n<code>-&gt; Hash (cost=229.20..229.20 rows=101 width=244) (actual time=0.659..0.659 rows=100 loops=1) Buckets: 1024 Batches: 1 Memory Usage: 28kB\n</code>\nThe Hash node includes information about number of hash buckets and batches, as\nwell as peak memory usage. If Batches &gt; 1 there’s also disk usage involved, but\nthat is not shown. The memory usage makes sense at 100 rows * 244 bytes = 24.4 kB, which is close enough to the\n28kB for our purposes that we can assume it’s the memory taken by the Hash keys\nthemselves.\nNext, Postgres reads all 10000 rows from tenk2 (aliased as t2) and checks them\nagainst the Hash of tenk1 rows. Hash Join means that the rows of one table are\nentered into an in-memory hash (which we’ve built up to so far), after which the\nrows of another table is scanned and its values probed against the hash table\nfor matches. We see the conditions of the “match” on the second line, Hash\nCond: (t2.unique2 = t1.unique2). Note that because the query is selecting all\nvalues from both tenk1 and tenk2, the width of each row doubles during the Hash\nJoin.\n<code>-&gt; Hash Join (cost=230.47..713.98 rows=101 width=488) (actual time=0.711..7.427 rows=100 loops=1) Hash Cond: (t2.unique2 = t1.unique2) -&gt; Seq Scan on tenk2 t2 (cost=0.00..445.00 rows=10000 width=244) (actual time=0.007..2.583 rows=10000 loops=1)\n</code>\nNow that all rows that meet our conditions have been collected, we can sort the\nresult set by the Sort Key: t1.fivethous.\n<code>Sort (cost=717.34..717.59 rows=101 width=488) (actual time=7.761..7.774 rows=100 loops=1) Sort Key: t1.fivethous Sort Method: quicksort Memory: 77kB\n</code>\nThe Sort node includes information about the algorithm used to sort,\nquicksort, whether the sort was done in memory or on disk (which greatly\neffects speed), and the amount of memory/disk space needed.\nUnderstanding how to read query plans is great for optimizing queries. For\nexample, Seq Scan nodes often indicate an opportunity for an index to be added,\nwhich is much faster to read. Familiarizing yourself with these plans will make\nyou a better database engineer. For more examples of query plans, read Using\nEXPLAIN from which this example was taken.\nNow that you’re able to read a query plan, learn to optimize performance.\nIf you enjoyed this post, you might also like:\nFinding the Oldest/Youngest Records Within a Group\nPostgreSQL Performance Considerations\nPostgres Index Types\nUpgrade your codebase with a Code Audit\nLearn how we can help you understand the current state of your code\nquality, speed up delivery times, improve developer happiness, and level\nup your user experience\nLearn more about a Code Audit\nServices\nCase Studies\nResources\nHire Us\nOur Company\nPurpose\nBlog\nJoin our team\nTwitter\nGitHub\nDribbble\nInstagram\n© 2020\nthoughtbot, inc.\nThe design of a robot and thoughtbot are registered trademarks of\nthoughtbot, inc.\nPrivacy Policy","ctext":"跳到主要内容博客主页\n全部话题\n设计\n网页\n的iOS\n安卓系统\n搜索\n我们正在招聘！\n阅读Postgres EXPLAIN ANALYZE查询计划\n迦勒·壁炉斯\n2016年7月26日\n更新于\n2020年3月31日\nPostgres的\n性能\n数据\nsql\n我们可以使用的功能最强大的工具，用于了解和优化SQL\n查询是EXPLAIN ANALYZE，它是一个Postgres命令，接受一个\n诸如SELECT ...，UPDATE ...或DELETE ...之类的语句执行\n语句，而不是返回数据，而是提供查询计划详细信息\n计划者采用何种方式执行所提供的语句。\n这是从Postgres使用说明页面提取的查询：\n<code><span class=\"k\">EXPLAIN</span> <span class=\"k\">ANALYZE</span> <span class=\"k\">SELECT</span> <span class=\"o\">*</span>\n<span class=\"k\">FROM</span> <span class=\"n\">tenk1</span> <span class=\"n\">t1</span><span class=\"p\">,</span> <span class=\"n\">tenk2</span> <span class=\"n\">t2</span>\n<span class=\"k\">WHERE</span> <span class=\"n\">t1</span><span class=\"p\">.</span><span class=\"n\">unique1</span> <span class=\"o\">&lt;</span> <span class=\"mi\">100</span> <span class=\"k\">AND</span> <span class=\"n\">t1</span><span class=\"p\">.</span><span class=\"n\">unique2</span> <span class=\"o\">=</span> <span class=\"n\">t2</span><span class=\"p\">.</span><span class=\"n\">unique2</span>\n<span class=\"k\">ORDER</span> <span class=\"k\">BY</span> <span class=\"n\">t1</span><span class=\"p\">.</span><span class=\"n\">fivethous</span><span class=\"p\">;</span>\n</code>\n并生成查询计划：\n<code> QUERY PLAN\n-------------------------------------------------------------------------------------------------------------------------------------------- Sort (cost=717.34..717.59 rows=101 width=488) (actual time=7.761..7.774 rows=100 loops=1) Sort Key: t1.fivethous Sort Method: quicksort Memory: 77kB -&gt; Hash Join (cost=230.47..713.98 rows=101 width=488) (actual time=0.711..7.427 rows=100 loops=1) Hash Cond: (t2.unique2 = t1.unique2) -&gt; Seq Scan on tenk2 t2 (cost=0.00..445.00 rows=10000 width=244) (actual time=0.007..2.583 rows=10000 loops=1) -&gt; Hash (cost=229.20..229.20 rows=101 width=244) (actual time=0.659..0.659 rows=100 loops=1) Buckets: 1024 Batches: 1 Memory Usage: 28kB -&gt; Bitmap Heap Scan on tenk1 t1 (cost=5.07..229.20 rows=101 width=244) (actual time=0.080..0.526 rows=100 loops=1) Recheck Cond: (unique1 &lt; 100) -&gt; Bitmap Index Scan on tenk1_unique1 (cost=0.00..5.04 rows=101 width=0) (actual time=0.049..0.049 rows=100 loops=1) Index Cond: (unique1 &lt; 100) Planning time: 0.194 ms Execution time: 8.008 ms\n</code>\nPostgres构建表示不同节点的计划节点的树形结构\nPostgres构建表示不同节点的计划节点的树形结构...\n在EXPLAIN ANALYZE的情况下，除了\n执行时间和行计数，例如上面的Sort和Hash。 其他任何行\n执行时间和行计数，例如上面的Sort和Hash。 其他任何行...\n查询是：\n<code>Sort\n└── Hash Join ├── Seq Scan └── Hash └── Bitmap Heap Scan └── Bitmap Index Scan\n</code>\n每棵树的分支代表子操作，您可以由内而外地\n确定“第一”发生了什么（尽管节点在同一级别的顺序\n可能会有所不同）。\n首先要做的是对tenk_unique1索引进行位图索引扫描：\n<code>-&gt; Bitmap Index Scan on tenk1_unique1 (cost=0.00..5.04 rows=101 width=0) (actual time=0.049..0.049 rows=100 loops=1) Index Cond: (unique1 &lt; 100)\n</code>\n首先要做的是对tenk_unique1索引进行位图索引扫描：...\n首先要做的是对tenk_unique1索引进行位图索引扫描：......\n自己不会返回这里。 费用估算（费用= 0.00..5.04\nrows = 101 width = 0）意味着Postgres期望“花费” 5.04的任意计算单位来查找\n这些值。 0.00是该节点可以开始工作的成本（在此情况下，\n情况下，只需查询的启动时间即可）。 行是估计的行数\n此索引扫描将返回，并且width是估计的字节大小\n返回的行（0，因为我们只关心位置，而不关心\n行）。\n因为我们使用ANALYZE选项运行EXPLAIN，所以查询实际上是\n执行并捕获定时信息。 （实际时间= 0.049..0.049\nrows = 100 loops = 1）表示索引扫描已执行1次（循环\n值），则返回100行，而实际时间为0。\n一个节点被多次执行的时间，实际时间是每个节点的平均值\n迭代，您可以将值乘以循环数以获得实数\n时间。 范围值也可能有所不同，这给出了最小/最大时间的概念\n花费。 这样就确定了成本比率，为此，每个成本单位为0.049ms / 5.04单位≈0.01ms /单位\n查询。\n索引扫描的结果将传递到位图堆扫描操作。 在\n在这个节点上，Postgres正在获取tenk1表中的行的位置，\n在这个节点上，Postgres正在获取tenk1表中的行的位置，...\n本身。\n<code>-&gt; Bitmap Heap Scan on tenk1 t1 (cost=5.07..229.20 rows=101 width=244) (actual time=0.080..0.526 rows=100 loops=1) Recheck Cond: (unique1 &lt; 100)\n</code>\n我们可以看到，将成本预期值乘以0.01值后，\n计算得出，这意味着（229.20-5.07）* 0.01≈2.24ms的大致预期时间，而我们看到的实际时间为\n每行0.526ms，相差4倍。这可能是因为成本\n估计值是一个上限，并非所有行都需要读取，或者因为\n重新检查条件始终为真。\n位图索引扫描和位图堆扫描的结合更多\n比从表中顺序读取行（Seq扫描）要昂贵，但是\n因为在这种情况下两步过程需要访问的行相对较少\n最终变得更快。 通过将行分类为物理行可以进一步加速\n在提取它们之前先进行订购，这样可以最大程度地减少单独提取的成本。 的\n节点名称中的“位图”进行排序。\n节点名称中的“位图”进行排序。...\ntrue，将在读取时插入到内存中的哈希表中。 如我们所见\n从成本上来说，这根本不需要时间。\n<code>-&gt; Hash (cost=229.20..229.20 rows=101 width=244) (actual time=0.659..0.659 rows=100 loops=1) Buckets: 1024 Batches: 1 Memory Usage: 28kB\n</code>\n哈希节点包含有关哈希桶和批次数量的信息，如下所示\n哈希节点包含有关哈希桶和批次数量的信息，如下所示...\n没有显示。 内存使用量在100行* 244字节= 24.4 kB时才有意义，足够接近\n出于我们的目的，我们可以假设它是28kB，是哈希键占用的内存\n他们自己。\n接下来，Postgres从tenk2中读取所有10000行（别名为t2）并进行检查\n针对tenk1行的哈希值。 哈希联接意味着一个表的行是\n输入到内存中的哈希（到目前为止，我们已经建立了），然后\n扫描另一个表的行，并针对哈希表探查其值\n比赛。 我们在第二行“哈希”中看到“匹配”的条件\n条件：（t2.unique2 = t1.unique2）。 请注意，因为查询正在选择全部\n来自tenk1和tenk2的值，在Hash期间每一行的宽度加倍\n加入。\n<code>-&gt; Hash Join (cost=230.47..713.98 rows=101 width=488) (actual time=0.711..7.427 rows=100 loops=1) Hash Cond: (t2.unique2 = t1.unique2) -&gt; Seq Scan on tenk2 t2 (cost=0.00..445.00 rows=10000 width=244) (actual time=0.007..2.583 rows=10000 loops=1)\n</code>\n现在，已经收集了所有符合我们条件的行，我们可以对\n通过排序键设置的结果：t1.fivethous。\n<code>Sort (cost=717.34..717.59 rows=101 width=488) (actual time=7.761..7.774 rows=100 loops=1) Sort Key: t1.fivethous Sort Method: quicksort Memory: 77kB\n</code>\n排序节点包含有关用于排序的算法的信息，\n快速排序，无论排序是在内存中还是在磁盘上完成（这在很大程度上\n影响速度），以及所需的内存/磁盘空间量。\n了解如何读取查询计划对于优化查询非常有用。 对于\n例如，Seq Scan节点通常表明有机会添加索引，\n阅读起来要快得多。 熟悉这些计划将使\n您是更好的数据库工程师。 有关查询计划的更多示例，请阅读使用\n解释本示例。\n现在，您可以阅读查询计划，学习如何优化性能。\n如果您喜欢这篇文章，您可能还会喜欢：\n查找组中最早/最年轻的记录\nPostgreSQL性能注意事项\nPostgres索引类型\n使用代码审核升级代码库\n了解我们如何帮助您了解代码的当前状态\n质量，加快交付时间，提高开发人员的满意度和水平\n提升您的用户体验\n了解有关代码审核的更多信息\n服务\n实例探究\n资源资源\n雇用我们\n我们公司\n目的\n博客\n加入我们的团队\n推特\n的GitHub\n运球\nInstagram的\n© 2020\nThoughtbot公司\n机器人和思想机器人的设计是的注册商标。\nThoughtbot公司\n隐私政策\n"}

{"l":"https://www.micah.soy/posts/setting-up-git-identities/","n":"Setting Up Git Identities","html":"\n    <main class=\"wrapper\">\n      <nav class=\"navigation\">\n  <section class=\"container\">\n    <a class=\"navigation-title\" href=\"https://www.micah.soy/\">\n      Micah Henning\n    </a>\n    \n    <input type=\"checkbox\" id=\"menu-toggle\">\n    <label class=\"menu-button float-right\" for=\"menu-toggle\"><i class=\"fas fa-bars\"></i></label>\n    <ul class=\"navigation-list\">\n      \n        \n          <li class=\"navigation-item\">\n            <a class=\"navigation-link\" href=\"https://www.micah.soy/posts/\">Blog</a>\n          </li>\n        \n          <li class=\"navigation-item\">\n            <a class=\"navigation-link\" href=\"https://www.micah.soy/about/\">About</a>\n          </li>\n        \n          <li class=\"navigation-item\">\n            <a class=\"navigation-link\" href=\"https://www.micah.soy/dayzero/\">Day Zero</a>\n          </li>\n        \n      \n      \n    </ul>\n    \n  </section>\n</nav>\n\n\n      <div class=\"content\">\n        \n  <section class=\"container post\">\n    <article>\n      <header>\n        <div class=\"post-title\">\n          <h1 class=\"title\">Setting Up Git Identities</h1>\n        </div>\n        <div class=\"post-meta\">\n          <div class=\"date\">\n            <span class=\"posted-on\">\n              <i class=\"fas fa-calendar\"></i>\n              <time datetime=\"2020-03-06T12:58:00-05:00\">\n                March 6, 2020\n              </time>\n            </span>\n            <span class=\"reading-time\">\n              <i class=\"fas fa-clock\"></i>\n              3-minute read\n            </span>\n          </div>\n          <div class=\"categories\">\n  <i class=\"fas fa-folder\"></i>\n    <a href=\"https://www.micah.soy/categories/tech/\">tech</a></div>\n\n          <div class=\"tags\">\n  <i class=\"fas fa-tag\"></i>\n    <a href=\"https://www.micah.soy/tags/git/\">git</a>\n      <span class=\"separator\">•</span>\n    <a href=\"https://www.micah.soy/tags/gpg/\">gpg</a>\n      <span class=\"separator\">•</span>\n    <a href=\"https://www.micah.soy/tags/pgp/\">pgp</a>\n      <span class=\"separator\">•</span>\n    <a href=\"https://www.micah.soy/tags/cryptography/\">cryptography</a>\n      <span class=\"separator\">•</span>\n    <a href=\"https://www.micah.soy/tags/security/\">security</a>\n      <span class=\"separator\">•</span>\n    <a href=\"https://www.micah.soy/tags/development/\">development</a></div>\n\n        </div>\n        <div class=\"sharing\">\n          \n          <a class=\"resp-sharing-button__link\" href=\"https://facebook.com/sharer/sharer.php?u=https%3a%2f%2fwww.micah.soy%2fposts%2fsetting-up-git-identities%2f\" target=\"_blank\" rel=\"noopener\" aria-label=\"\">\n            <div class=\"resp-sharing-button resp-sharing-button--facebook resp-sharing-button--small\"><div aria-hidden=\"true\" class=\"resp-sharing-button__icon resp-sharing-button__icon--solid\">\n              <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M18.77 7.46H14.5v-1.9c0-.9.6-1.1 1-1.1h3V.5h-4.33C10.24.5 9.5 3.44 9.5 5.32v2.15h-3v4h3v12h5v-12h3.85l.42-4z\"></path></svg>\n              </div>\n            </div>\n          </a>\n\n          \n          <a class=\"resp-sharing-button__link\" href=\"https://twitter.com/intent/tweet/?text=Setting%20Up%20Git%20Identities&amp;url=https%3a%2f%2fwww.micah.soy%2fposts%2fsetting-up-git-identities%2f\" target=\"_blank\" rel=\"noopener\" aria-label=\"\">\n            <div class=\"resp-sharing-button resp-sharing-button--twitter resp-sharing-button--small\"><div aria-hidden=\"true\" class=\"resp-sharing-button__icon resp-sharing-button__icon--solid\">\n              <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M23.44 4.83c-.8.37-1.5.38-2.22.02.93-.56.98-.96 1.32-2.02-.88.52-1.86.9-2.9 1.1-.82-.88-2-1.43-3.3-1.43-2.5 0-4.55 2.04-4.55 4.54 0 .36.03.7.1 1.04-3.77-.2-7.12-2-9.36-4.75-.4.67-.6 1.45-.6 2.3 0 1.56.8 2.95 2 3.77-.74-.03-1.44-.23-2.05-.57v.06c0 2.2 1.56 4.03 3.64 4.44-.67.2-1.37.2-2.06.08.58 1.8 2.26 3.12 4.25 3.16C5.78 18.1 3.37 18.74 1 18.46c2 1.3 4.4 2.04 6.97 2.04 8.35 0 12.92-6.92 12.92-12.93 0-.2 0-.4-.02-.6.9-.63 1.96-1.22 2.56-2.14z\"></path></svg>\n              </div>\n            </div>\n          </a>\n\n          \n          <a class=\"resp-sharing-button__link\" href=\"https://pinterest.com/pin/create/button/?url=https%3a%2f%2fwww.micah.soy%2fposts%2fsetting-up-git-identities%2f&amp;media=https%3a%2f%2fwww.micah.soy%2fposts%2fsetting-up-git-identities%2f&amp;description=Setting%20Up%20Git%20Identities\" target=\"_blank\" rel=\"noopener\" aria-label=\"\">\n            <div class=\"resp-sharing-button resp-sharing-button--pinterest resp-sharing-button--small\"><div aria-hidden=\"true\" class=\"resp-sharing-button__icon resp-sharing-button__icon--solid\">\n              <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M12.14.5C5.86.5 2.7 5 2.7 8.75c0 2.27.86 4.3 2.7 5.05.3.12.57 0 .66-.33l.27-1.06c.1-.32.06-.44-.2-.73-.52-.62-.86-1.44-.86-2.6 0-3.33 2.5-6.32 6.5-6.32 3.55 0 5.5 2.17 5.5 5.07 0 3.8-1.7 7.02-4.2 7.02-1.37 0-2.4-1.14-2.07-2.54.4-1.68 1.16-3.48 1.16-4.7 0-1.07-.58-1.98-1.78-1.98-1.4 0-2.55 1.47-2.55 3.42 0 1.25.43 2.1.43 2.1l-1.7 7.2c-.5 2.13-.08 4.75-.04 5 .02.17.22.2.3.1.14-.18 1.82-2.26 2.4-4.33.16-.58.93-3.63.93-3.63.45.88 1.8 1.65 3.22 1.65 4.25 0 7.13-3.87 7.13-9.05C20.5 4.15 17.18.5 12.14.5z\"></path></svg>\n              </div>\n            </div>\n          </a>\n\n          \n          <a class=\"resp-sharing-button__link\" href=\"https://www.linkedin.com/shareArticle?mini=true&amp;url=https%3a%2f%2fwww.micah.soy%2fposts%2fsetting-up-git-identities%2f&amp;title=Setting%20Up%20Git%20Identities&amp;summary=Setting%20Up%20Git%20Identities&amp;source=https%3a%2f%2fwww.micah.soy%2fposts%2fsetting-up-git-identities%2f\" target=\"_blank\" rel=\"noopener\" aria-label=\"\">\n            <div class=\"resp-sharing-button resp-sharing-button--linkedin resp-sharing-button--small\"><div aria-hidden=\"true\" class=\"resp-sharing-button__icon resp-sharing-button__icon--solid\">\n              <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M6.5 21.5h-5v-13h5v13zM4 6.5C2.5 6.5 1.5 5.3 1.5 4s1-2.4 2.5-2.4c1.6 0 2.5 1 2.6 2.5 0 1.4-1 2.5-2.6 2.5zm11.5 6c-1 0-2 1-2 2v7h-5v-13h5V10s1.6-1.5 4-1.5c3 0 5 2.2 5 6.3v6.7h-5v-7c0-1-1-2-2-2z\"></path></svg>\n              </div>\n            </div>\n          </a>\n\n          \n          <a class=\"resp-sharing-button__link\" href=\"https://reddit.com/submit/?url=https%3a%2f%2fwww.micah.soy%2fposts%2fsetting-up-git-identities%2f&amp;resubmit=true&amp;title=Setting%20Up%20Git%20Identities\" target=\"_blank\" rel=\"noopener\" aria-label=\"\">\n            <div class=\"resp-sharing-button resp-sharing-button--reddit resp-sharing-button--small\"><div aria-hidden=\"true\" class=\"resp-sharing-button__icon resp-sharing-button__icon--solid\">\n              <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M24 11.5c0-1.65-1.35-3-3-3-.96 0-1.86.48-2.42 1.24-1.64-1-3.75-1.64-6.07-1.72.08-1.1.4-3.05 1.52-3.7.72-.4 1.73-.24 3 .5C17.2 6.3 18.46 7.5 20 7.5c1.65 0 3-1.35 3-3s-1.35-3-3-3c-1.38 0-2.54.94-2.88 2.22-1.43-.72-2.64-.8-3.6-.25-1.64.94-1.95 3.47-2 4.55-2.33.08-4.45.7-6.1 1.72C4.86 8.98 3.96 8.5 3 8.5c-1.65 0-3 1.35-3 3 0 1.32.84 2.44 2.05 2.84-.03.22-.05.44-.05.66 0 3.86 4.5 7 10 7s10-3.14 10-7c0-.22-.02-.44-.05-.66 1.2-.4 2.05-1.54 2.05-2.84zM2.3 13.37C1.5 13.07 1 12.35 1 11.5c0-1.1.9-2 2-2 .64 0 1.22.32 1.6.82-1.1.85-1.92 1.9-2.3 3.05zm3.7.13c0-1.1.9-2 2-2s2 .9 2 2-.9 2-2 2-2-.9-2-2zm9.8 4.8c-1.08.63-2.42.96-3.8.96-1.4 0-2.74-.34-3.8-.95-.24-.13-.32-.44-.2-.68.15-.24.46-.32.7-.18 1.83 1.06 4.76 1.06 6.6 0 .23-.13.53-.05.67.2.14.23.06.54-.18.67zm.2-2.8c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2zm5.7-2.13c-.38-1.16-1.2-2.2-2.3-3.05.38-.5.97-.82 1.6-.82 1.1 0 2 .9 2 2 0 .84-.53 1.57-1.3 1.87z\"></path></svg>\n              </div>\n            </div>\n          </a>\n\n          \n          <a class=\"resp-sharing-button__link\" href=\"https://news.ycombinator.com/submitlink?u=https%3a%2f%2fwww.micah.soy%2fposts%2fsetting-up-git-identities%2f&amp;t=Setting%20Up%20Git%20Identities\" target=\"_blank\" rel=\"noopener\" aria-label=\"\">\n            <div class=\"resp-sharing-button resp-sharing-button--hackernews resp-sharing-button--small\"><div aria-hidden=\"true\" class=\"resp-sharing-button__icon resp-sharing-button__icon--solid\">\n                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 140 140\"><path fill-rule=\"evenodd\" d=\"M60.94 82.314L17 0h20.08l25.85 52.093c.397.927.86 1.888 1.39 2.883.53.994.995 2.02 1.393 3.08.265.4.463.764.596 1.095.13.334.262.63.395.898.662 1.325 1.26 2.618 1.79 3.877.53 1.26.993 2.42 1.39 3.48 1.06-2.254 2.22-4.673 3.48-7.258 1.26-2.585 2.552-5.27 3.877-8.052L103.49 0h18.69L77.84 83.308v53.087h-16.9v-54.08z\"></path></svg>\n              </div>\n            </div>\n          </a>\n\n          \n          <a class=\"resp-sharing-button__link\" href=\"mailto:?subject=Setting%20Up%20Git%20Identities&amp;body=https%3a%2f%2fwww.micah.soy%2fposts%2fsetting-up-git-identities%2f\" target=\"_self\" rel=\"noopener\" aria-label=\"\">\n            <div class=\"resp-sharing-button resp-sharing-button--email resp-sharing-button--small\"><div aria-hidden=\"true\" class=\"resp-sharing-button__icon resp-sharing-button__icon--solid\">\n              <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M22 4H2C.9 4 0 4.9 0 6v12c0 1.1.9 2 2 2h20c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zM7.25 14.43l-3.5 2c-.08.05-.17.07-.25.07-.17 0-.34-.1-.43-.25-.14-.24-.06-.55.18-.68l3.5-2c.24-.14.55-.06.68.18.14.24.06.55-.18.68zm4.75.07c-.1 0-.2-.03-.27-.08l-8.5-5.5c-.23-.15-.3-.46-.15-.7.15-.22.46-.3.7-.14L12 13.4l8.23-5.32c.23-.15.54-.08.7.15.14.23.07.54-.16.7l-8.5 5.5c-.08.04-.17.07-.27.07zm8.93 1.75c-.1.16-.26.25-.43.25-.08 0-.17-.02-.25-.07l-3.5-2c-.24-.13-.32-.44-.18-.68s.44-.32.68-.18l3.5 2c.24.13.32.44.18.68z\"></path></svg>\n              </div>\n            </div>\n          </a>\n        </div>\n      </header>\n\n      <div>\n        \n        <p>Working on many projects across multiple identities can be difficult to manage. This is a procedure for leveraging git aliases to set an identity at the project level for any project with support for GPG-based commit signing.</p>\n<h3 id=\"first-remove-any-existing-global-identity\">First, remove any existing global identity</h3>\n<div class=\"highlight\"><pre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-shell\" data-lang=\"shell\">git config --global --unset user.name\ngit config --global --unset user.email\ngit config --global --unset user.signingkey\n</code></pre></div><h3 id=\"require-config-to-exist-in-order-to-make-commits\">Require config to exist in order to make commits</h3>\n<p>Without the global user name and user email, git would use the system’s hostname and username to make commits. Tell git to throw an error instead, requiring you to specify an identity for every new project.</p>\n<div class=\"highlight\"><pre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-shell\" data-lang=\"shell\">git config --global user.useConfigOnly true\n</code></pre></div><h3 id=\"for-each-identity-generate-gpg-keys\">For each identity, generate GPG keys</h3>\n<p><img src=\"keygen.png\" alt=\"GPG key generation output\"></p>\n<p>Generate a GPG public/private key pair:</p>\n<div class=\"highlight\"><pre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-shell\" data-lang=\"shell\">gpg --full-gen-key\n</code></pre></div><p>Choose (1) RSA and RSA (default) key type. Choose key size of 4096 bits. Set the key to not expire (0) unless you want to repeat this step periodically. Finally, set your name and email address. Comment can be left blank.</p>\n<p>Once the key pair is generated we need to export the public key.</p>\n<h3 id=\"export-the-public-keys\">Export the public keys</h3>\n<p><img src=\"key-export.png\" alt=\"GPG key export\"></p>\n<p><em>For each identity</em>, export the public key:</p>\n<div class=\"highlight\"><pre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-shell\" data-lang=\"shell\">gpg --list-secret-keys --keyid-format LONG user@example.com\n</code></pre></div><p>where <code>user@example.com</code> is the email address of the identity you just created.</p>\n<p>This will output a <code>sec</code> ID in the format of <code>rsa4096/[serial]</code>. Copy the serial number, then run this command to output the public key:</p>\n<div class=\"highlight\"><pre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-shell\" data-lang=\"shell\">gpg --armor --export <span style=\"color:#f92672\">[</span>serial<span style=\"color:#f92672\">]</span>\n</code></pre></div><p>Copy the public key block and add it to your Github or Gitlab settings. With the public key, Github and Gitlab can cryptographically verify your commits, placing a “Verified” label next to each.</p>\n<h3 id=\"set-global-git-config-identities\">Set global git config identities</h3>\n<p>Now we need to create the identities in git’s global config.  For example:</p>\n<div class=\"highlight\"><pre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-shell\" data-lang=\"shell\">git config --global user.gitlab.name <span style=\"color:#e6db74\">\"Your Name\"</span>\ngit config --global user.gitlab.email <span style=\"color:#e6db74\">\"gitlab@example.com\"</span>\ngit config --global user.gitlab.signingkey 543166183AE7043A\ngit config --global user.github.name <span style=\"color:#e6db74\">\"Your Name\"</span>\ngit config --global user.github.email <span style=\"color:#e6db74\">\"github@example.com\"</span>\ngit config --global user.github.signingkey BCF8B7A8C138D16B\ngit config --global user.identity3.name <span style=\"color:#e6db74\">\"Your Name\"</span>\ngit config --global user.identity3.email <span style=\"color:#e6db74\">\"identity3@example.com\"</span>\ngit config --global user.identity3.signingkey 4F3FFC37B1A027BD\ngit config --global user.identity4.name <span style=\"color:#e6db74\">\"Your Name\"</span>\ngit config --global user.identity4.email <span style=\"color:#e6db74\">\"identity4@example.com\"</span>\ngit config --global user.identity4.signingkey D921F8BA473CF1FC\n</code></pre></div><h3 id=\"create-git-alias\">Create git alias</h3>\n<p>Setting a git alias will give us a new git command to use to set the identity at a project level. This really is just a script that sets a particular global identity to the local config.</p>\n<div class=\"highlight\"><pre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-shell\" data-lang=\"shell\">git config --global alias.identity <span style=\"color:#e6db74\">'! git config user.name \"$(git config user.$1.name)\"; git config user.email \"$(git config user.$1.email)\"; git config user.signingkey \"$(git config user.$1.signingkey)\"; :'</span>\n</code></pre></div><h3 id=\"specify-git-identity\">Specify git identity</h3>\n<p>For each project, specify the git identity to use:</p>\n<div class=\"highlight\"><pre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-shell\" data-lang=\"shell\">$ cd /path/to/git/repo\n$ git config user.email <span style=\"color:#75715e\"># should be no response</span>\n$ git config user.github.email\ngithub@example.com\n$ git identity github\n$ git config user.email\ngithub@example.com\n</code></pre></div><p>That’s it!  Now whenever you start a new project or work on an existing project, you can be confident that the correct name, email address, and GPG signing key are being used.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://stackoverflow.com/questions/4220416/can-i-specify-multiple-users-for-myself-in-gitconfig#_=_\">Stack Overflow: Can I Specify Multiple Users for Myself in Git Config</a></li>\n<li><a href=\"https://gitlab.com/help/user/project/repository/gpg_signed_commits/index.md\">Gitlab: Signing Commits with GPG</a></li>\n<li><a href=\"https://on.spiceworks.com/knowledge_base/articles/168830\">This post in the Spiceworks KB</a></li>\n</ul>\n\n      </div>\n\n\n      <footer>\n        \n\n\n        \n        \n        \n  <div class=\"utterances\" style=\"height: 709px;\">\n    <iframe class=\"utterances-frame\" title=\"Comments\" scrolling=\"no\" src=\"https://utteranc.es/utterances.html?src=https%3A%2F%2Futteranc.es%2Fclient.js&amp;repo=micchickenburger%2Fwebsite-utterances&amp;issue-term=title&amp;theme=github-light&amp;crossorigin=anonymous&amp;url=https%3A%2F%2Fwww.micah.soy%2Fposts%2Fsetting-up-git-identities%2F&amp;origin=https%3A%2F%2Fwww.micah.soy&amp;pathname=posts%2Fsetting-up-git-identities%2F&amp;title=Setting%20Up%20Git%20Identities%20%C2%B7%20Micah%20Henning&amp;description=Micah%20Henning's%20personal%20website&amp;og%3Atitle=Setting%20Up%20Git%20Identities\"></iframe>\n  </div>\n\n\n      </footer>\n    </article>\n\n    \n  </section>\n\n      </div>\n\n      <footer class=\"footer\">\n  <section class=\"container\">\n    \n    \n      \n        © 2020\n      \n       Micah Henning \n    \n    \n    \n  </section>\n</footer>\n\n    </main>\n\n    \n    \n    <script type=\"text/javascript\" async=\"\" src=\"https://www.google-analytics.com/analytics.js\"></script><script async=\"\" src=\"https://www.googletagmanager.com/gtag/js?id=UA-11687809-2\"></script>\n    <script src=\"https://www.micah.soy/scripts/gtag.js\"></script>\n\n    \n\n  \n\n\n","text":"Micah Henning\nBlog\nAbout\nDay Zero\nSetting Up Git Identities\nMarch 6, 2020 3-minute read\ntech\ngit • gpg • pgp • cryptography • security • development\nWorking on many projects across multiple identities can be difficult to manage. This is a procedure for leveraging git aliases to set an identity at the project level for any project with support for GPG-based commit signing.\nFirst, remove any existing global identity\n<code class=\"language-shell\" data-lang=\"shell\">git config --global --unset user.name\ngit config --global --unset user.email\ngit config --global --unset user.signingkey\n</code>\nRequire config to exist in order to make commits\nWithout the global user name and user email, git would use the system’s hostname and username to make commits. Tell git to throw an error instead, requiring you to specify an identity for every new project.\n<code class=\"language-shell\" data-lang=\"shell\">git config --global user.useConfigOnly true\n</code>\nFor each identity, generate GPG keys\nGenerate a GPG public/private key pair:\n<code class=\"language-shell\" data-lang=\"shell\">gpg --full-gen-key\n</code>\nChoose (1) RSA and RSA (default) key type. Choose key size of 4096 bits. Set the key to not expire (0) unless you want to repeat this step periodically. Finally, set your name and email address. Comment can be left blank.\nOnce the key pair is generated we need to export the public key.\nExport the public keys\nFor each identity, export the public key:\n<code class=\"language-shell\" data-lang=\"shell\">gpg --list-secret-keys --keyid-format LONG user@example.com\n</code>\nwhere user@example.com is the email address of the identity you just created.\nThis will output a sec ID in the format of rsa4096/[serial]. Copy the serial number, then run this command to output the public key:\n<code class=\"language-shell\" data-lang=\"shell\">gpg --armor --export <span style=\"color:#f92672\">[</span>serial<span style=\"color:#f92672\">]</span>\n</code>\nCopy the public key block and add it to your Github or Gitlab settings. With the public key, Github and Gitlab can cryptographically verify your commits, placing a “Verified” label next to each.\nSet global git config identities\nNow we need to create the identities in git’s global config. For example:\n<code class=\"language-shell\" data-lang=\"shell\">git config --global user.gitlab.name <span style=\"color:#e6db74\">\"Your Name\"</span>\ngit config --global user.gitlab.email <span style=\"color:#e6db74\">\"gitlab@example.com\"</span>\ngit config --global user.gitlab.signingkey 543166183AE7043A\ngit config --global user.github.name <span style=\"color:#e6db74\">\"Your Name\"</span>\ngit config --global user.github.email <span style=\"color:#e6db74\">\"github@example.com\"</span>\ngit config --global user.github.signingkey BCF8B7A8C138D16B\ngit config --global user.identity3.name <span style=\"color:#e6db74\">\"Your Name\"</span>\ngit config --global user.identity3.email <span style=\"color:#e6db74\">\"identity3@example.com\"</span>\ngit config --global user.identity3.signingkey 4F3FFC37B1A027BD\ngit config --global user.identity4.name <span style=\"color:#e6db74\">\"Your Name\"</span>\ngit config --global user.identity4.email <span style=\"color:#e6db74\">\"identity4@example.com\"</span>\ngit config --global user.identity4.signingkey D921F8BA473CF1FC\n</code>\nCreate git alias\nSetting a git alias will give us a new git command to use to set the identity at a project level. This really is just a script that sets a particular global identity to the local config.\n<code class=\"language-shell\" data-lang=\"shell\">git config --global alias.identity <span style=\"color:#e6db74\">'! git config user.name \"$(git config user.$1.name)\"; git config user.email \"$(git config user.$1.email)\"; git config user.signingkey \"$(git config user.$1.signingkey)\"; :'</span>\n</code>\nSpecify git identity\nFor each project, specify the git identity to use:\n<code class=\"language-shell\" data-lang=\"shell\">$ cd /path/to/git/repo\n$ git config user.email <span style=\"color:#75715e\"># should be no response</span>\n$ git config user.github.email\ngithub@example.com\n$ git identity github\n$ git config user.email\ngithub@example.com\n</code>\nThat’s it! Now whenever you start a new project or work on an existing project, you can be confident that the correct name, email address, and GPG signing key are being used.\nReferences\nStack Overflow: Can I Specify Multiple Users for Myself in Git Config\nGitlab: Signing Commits with GPG\nThis post in the Spiceworks KB\n© 2020 Micah Henning","ctext":"米卡·亨宁（Micah Henning）\n博客\n关于\n零日\n设置Git身份\n2020年3月6日3分钟阅读\n科技\ngit•gpg•pgp•加密•安全•开发\n跨多个身份从事多个项目的工作可能难以管理。 这是一个利用git别名为支持基于GPG提交签名的任何项目在项目级别设置标识的过程。\n首先，删除任何现有的全局标识\n<code class =“ language-shell” data-lang =“ shell”> git config --global --unset user.name\ngit config --global --unset user.email\ngit config --global --unset user.signingkey\n</code>\nRequire config to exist in order to make commits\nWithout the global user name and user email, git would use the system’s hostname and username to make commits. Tell git to throw an error instead, requiring you to specify an identity for every new project.\n<code class=\"language-shell\" data-lang=\"shell\">git config --global user.useConfigOnly true\n</code>\n对于每个身份，生成GPG密钥\n生成一个GPG公钥/私钥对：\n<code class =“ language-shell” data-lang =“ shell”> gpg --full-gen-key\n</code>\nChoose (1) RSA and RSA (default) key type. Choose key size of 4096 bits. Set the key to not expire (0) unless you want to repeat this step periodically. Finally, set your name and email address. Comment can be left blank.\nOnce the key pair is generated we need to export the public key.\nExport the public keys\nFor each identity, export the public key:\n<code class=\"language-shell\" data-lang=\"shell\">gpg --list-secret-keys --keyid-format LONG user@example.com\n</code>\n其中user@example.com是您刚刚创建的身份的电子邮件地址。\n这将以rsa4096 / [serial]的格式输出秒ID。 复制序列号，然后运行以下命令以输出公钥：\n<code class =“ language-shell” data-lang =“ shell”> gpg --armor --export <span style =“ color：＃f92672”> [</ span> serial <span style =“ color：＃f92672 “>] </ span>\n</code>\nCopy the public key block and add it to your Github or Gitlab settings. With the public key, Github and Gitlab can cryptographically verify your commits, placing a “Verified” label next to each.\nSet global git config identities\nNow we need to create the identities in git’s global config. For example:\n<code class=\"language-shell\" data-lang=\"shell\">git config --global user.gitlab.name <span style=\"color:#e6db74\">\"Your Name\"</span>\ngit config --global user.gitlab.email <span style=\"color:#e6db74\">\"gitlab@example.com\"</span>\ngit config --global user.gitlab.signingkey 543166183AE7043A\ngit config --global user.github.name <span style=\"color:#e6db74\">\"Your Name\"</span>\ngit config --global user.github.email <span style=\"color:#e6db74\">\"github@example.com\"</span>\ngit config --global user.github.signingkey BCF8B7A8C138D16B\ngit config --global user.identity3.name <span style=\"color:#e6db74\">\"Your Name\"</span>\ngit config --global user.identity3.email <span style=\"color:#e6db74\">\"identity3@example.com\"</span>\ngit config --global user.identity3.signingkey 4F3FFC37B1A027BD\ngit config --global user.identity4.name <span style=\"color:#e6db74\">\"Your Name\"</span>\ngit config --global user.identity4.email <span style=\"color:#e6db74\">\"identity4@example.com\"</span>\ngit config --global user.identity4.signingkey D921F8BA473CF1FC\n</code>\n创建git别名\n设置git别名将为我们提供一个新的git命令，用于在项目级别设置身份。 这实际上只是一个脚本，用于将特定的全局标识设置为本地配置。\n<code class =“ language-shell” data-lang =“ shell”> git config --global alias.identity <span style =“ color：＃e6db74”>'！ git config user.name“ $（git config user。$ 1.name）”; git config user.email“ $（git config user。$ 1.email）”; git config user.signingkey“ $（git config user。$ 1.signingkey）”; ：'</ span>\n</code>\nSpecify git identity\nFor each project, specify the git identity to use:\n<code class=\"language-shell\" data-lang=\"shell\">$ cd /path/to/git/repo\n$ git config user.email <span style=\"color:#75715e\"># should be no response</span>\n$ git config user.github.email\ngithub@example.com\n$ git identity github\n$ git config user.email\ngithub@example.com\n</code>\n而已！ 现在，无论何时开始新项目或在现有项目上工作，您都可以确信使用了正确的名称，电子邮件地址和GPG签名密钥。\n参考文献\n堆栈溢出：我可以在Git Config中为自己指定多个用户\nGitlab：与GPG签署承诺\nSpiceworks KB中的此帖子\n分级为4 +©2020 Micah Henning\n"}

{"l":"https://johv.dk/blog/bare-metal-assembly-tutorial.html","n":"Getting started with bare-metal assembly","html":"\n<header>\n<a href=\"/\"><span class=\"name\">jo<span class=\"suffix\">nas</span> hv<span class=\"suffix\">id</span></span></a>\n<span class=\"dash\">—</span>\n<time datetime=\"2020-03-25T14:30:00\">March 25, 2020</time>\n</header>\n<article lang=\"en-US\">\n<h1>Getting started with bare-metal assembly</h1>\n<div class=\"post-comments\"><a href=\"https://news.ycombinator.com/item?id=22684881\" id=\"post-comments\">Comments on Hacker News</a></div>\n<p>Seeing a program you wrote running directly on the bare metal is\ndeeply satisfying to anyone who enjoys writing software. And it turns out\nthat creating such a program from scratch is easier than it sounds. The\nhardest part is figuring out where to start. In this tutorial, I'll show\nyou how to write, build and run the classic \"Hello, World!\" in pure\nassembly.</p>\n<figure>\n<img src=\"bare-metal-assembly-tutorial-screenshot.png\">\n<figcaption>\"Hello, World!\" inside the UEFI shell. You could also boot\ndirectly into the application.</figcaption>\n</figure>\n<p>Well, almost – on a modern computer, our assembly application\ndoesn't just have direct access to the hardware. Instead it must\ncommunicate with an intermediary firmware layer on the motherboard,\nthrough the so-called <i>Unified Extensible Firmware Interface</i>\n(UEFI).</p>\n<p>Creating a \"Hello, World!\" UEFI application is a three-step process:</p>\n<ol>\n<li>Set up a virtual machine with UEFI support.</li>\n<li>Install an assembler that can output UEFI applications.</li>\n<li>Write the actual program and run it!</li>\n</ol>\n<h2>Setting up QEMU</h2>\n<p>We <em>could</em> test our application by repeatedly copying it to a\nUSB drive, rebooting our computer and then seeing if it works. Obviously,\nwe don't want to do that. Instead, we'll be testing our application\ninside a virtual machine, and <a rel=\"nofollow\" href=\"https://www.qemu.org/\">QEMU</a> is\na great fit for this purpose.</p>\n<section class=\"step\">\n<h3>Step 1 — Install QEMU</h3>\n<p>If you are using a GNU/Linux distribution, there's a good chance\nthat it has a <code>qemu</code> package available. I'll assume that\nyou're using Ubuntu, but you can easily adapt these instructions to\nwhichever system you're using.</p>\n<p></p><pre class=\"shell\">$ sudo apt-get install qemu</pre><p></p>\n<p>Once the intallation finishes, you should have\n<code>qemu-system-x86_64</code> availabe in your path:</p>\n<p></p><pre class=\"shell\">$ qemu-system-x86_64 --version\nQEMU emulator version 2.11.1(Debian 1:2.11+dfsg-1ubuntu7.23)\nCopyright (c) 2003-2017 Fabrice Bellard and the QEMU Project developers</pre><p></p>\n</section>\n<p>While most modern computers come with UEFI-support built-in, QEMU does not.\nInstead, we will use something called\n<a href=\"https://github.com/tianocore/tianocore.github.io/wiki/OVMF\">OVMF</a>,\nwhich is a firmware layer that adds UEFI support to QEMU.</p>\n<section class=\"step\">\n<h3>Step 2 — Set up OVMF</h3>\n<p>Again, there is probably a package available for your distribution.\nIf you are using Ubuntu, run:</p>\n<p></p><pre>$ sudo apt-get install ovmf</pre><p></p>\n<p>This should install the file <code>OVMF.fd</code> somewhere on your system. Figure out\nwhere:</p>\n<p></p><pre>$ find / -name OVMF.fd 2&gt;/dev/null\n/usr/share/ovmf/OVMF.fd</pre><p></p>\n<p>Then, go ahead and copy this file to your working directory:</p>\n<p></p><pre>$ cp /usr/share/ovmf/OVMF.fd .</pre><p></p>\n<p>(On some GNU/Linux distributions, the relevant package may install\nboth a 32-bit and a 64-bit version; in this case, use the 64-bit\nversion.)</p>\n</section>\n<p>The UEFI firmware provides a bare-bones environment called the UEFI\nshell. We'll want to test the application that we build from this shell.\nLet's check that it's working correctly.</p>\n<section class=\"step optional\">\n<h3>Step 3 — Try the UEFI shell</h3> <p>You should have the\nfile <code>OVMF.fd</code> available in your working directory from step\n2. To tell QEMU about this firmware, use the argument <code>-bios\nOVMF.fd</code>. We also need to specify <code>-net none</code>\nso QEMU won't try to boot over the network:</p>\n<p></p><pre>$ qemu-system-x86_64 -bios OVMF.fd -net none</pre><p></p>\n<p>This will land you in a shell that looks a little something like this:</p>\n<p></p><pre>UEFI Interactive Shell v2.2\nEDK II\nUEFI v2.70 (EDK II, 0x00010000)\nMapping table\n     BLK0: Alias(s):\n          PciRoot(0x0)/Pci(0x1,0x1)/Ata(0x0)\nPress ESC in 1 seconds to skip startup.nsh or any other key to continue.\nShell&gt;</pre><p></p>\n<p>Try typing <code>help -b</code> to get a list of\ncommands.</p>\n</section>\n<p>We need some way of accessing the executable that we build from\ninside the UEFI shell. The shell can read FAT32 file systems.\nConveniently, QEMU can mount a directory in the host file system as a\nFAT32 formatted drive in the virtual machine.</p>\n<section class=\"step optional\">\n<h3>Step 4 — Open files from the UEFI shell</h3>\n<p>We'll store the files on our emulated drive in a directory on the\nhost called <code>drive/</code>. For now, let's just create a small test\nfile that we'll try to read:</p>\n<p></p><pre>$ mkdir drive\n$ echo \"This is a test\" &gt; drive/test.txt</pre><p></p>\n<p>To make this directory available as a FAT32 formatted drive inside QEMU,\nuse the <code>-drive</code> option like this:</p>\n<p></p><pre>$ qemu-system-x86_64 -bios OVMF.fd -net none -drive format=raw,file=fat:rw:<u>drive/</u></pre><p></p>\n<p>Inside QEMU, you will now see that there is a new file system\navailable called <code>FS0:</code>. Switch to it and look for the text\nfile that you just created:</p>\n<p></p><pre>Shell&gt; fs0:\nFS0:\\&gt; dir\nDirectory of: FS0:\\\n03/21/2020  17:46                  15  test.txt\n03/21/2020  16:49              10,565  NvVars\n          2 File(s)      10,580 bytes\n          0 Dir(s)\nFS0:\\&gt; cat test.txt\nThis is a test</pre><p></p>\n</section>\n<p>Great! We can now transfer our executable into QEMU and open it from\nthe shell. This gives us an environment that is very similar to what we\nwould get if we inserted a FAT32 formatted USB drive into a real computer\nwith a UEFI shell installed.</p>\n<h2>Assembling a UEFI application with FASM</h2>\n<p>It would be nice if we could just put a bunch of machine code on a USB\ndrive and have our computer execute that. Unfortunately, that's not how it\nworks. All modern operating systems store executables as\n<a rel=\"nofollow\" href=\"https://en.wikipedia.org/wiki/Object_file\">object files</a>.\nAn object file contains both the machine code itself and some information\nabout how that code should be loaded and executed.</p>\n<p>The specific object file format used by UEFI is the so-called <a rel=\"nofollow\" href=\"https://en.wikipedia.org/wiki/Portable_Executable\">Portable\nExecutable</a> format. This format is also used by Microsoft Windows\nfor <code>.exe</code> and <code>.dll</code> files.</p>\n<p>An assembler is a program that generates an object file from\nassembly code. There are many assemblers, but for this tutorial we'll be\nusing <a rel=\"nofollow\" href=\"https://flatassembler.net/\">FASM</a>,\nbecause it's easy to use and has built-in support for the object file\nformat we need.</p>\n<section class=\"step\">\n<h3>Step 5 — Install FASM</h3>\n<p>On Ubuntu, FASM is available in the standard repository:</p>\n<p></p><pre>$ sudo apt-get install fasm</pre><p></p>\n<p>Check that you have FASM installed and in your path:</p>\n<p></p><pre>$ fasm\nflat assembler  version 1.73.13\nusage: fasm <source> [output]\noptional settings:\n -m &lt;limit&gt;         set the limit in kilobytes for the available memory\n -p &lt;limit&gt;         set the maximum allowed number of passes\n -d &lt;name&gt;=&lt;value&gt;  define symbolic variable\n -s &lt;file&gt;          dump symbolic information for debugging</pre><p></p>\n</section>\n<p>FASM can generate code for many different output formats. We need to\ntell it to generate a 64-bit Portable Executable with some extra flags\nset to specify that it's a UEFI application. This is done using the\n<code>format</code> directive:</p>\n<pre class=\"code\">format pe64 efi</pre>\n<p>Let's start by writing a program that is even simpler than \"Hello,\nWorld!\" – a program that does absolutely nothing. This program will\nstart at the <code>main:</code> label and then immediately return to the\ncaller:</p>\n<pre class=\"code\">entry main\nmain:\n  ret</pre>\n<p>The Portable Executable format, like most executable file formats,\nsupports multiple <i>sections</i>. One section contains the\nprogram code, another contains data that is loaded into RAM when the\nprogram is started, and so on. The machine code should sit in a section\ncalled <code>.text</code>, and we should specify that data in this\nsection may be both executed and read:</p>\n<pre class=\"code\">section '.text' executable readable</pre>\n<p>Thus, the final program, which does nothing and then exists, is:</p>\n<pre class=\"code\">format pe64 efi\nentry main\n\nsection '.text' executable readable\n\nmain:\n  ret</pre>\n<p>Now we just need to assemble this program, and then we'll be able to\nrun it inside QEMU.</p>\n<section class=\"step optional\">\n<h3>Step 6 — Assemble and run an empty executable</h3>\n<p>Save the program as <code>empty.asm</code>:</p>\n<pre>$ cat &gt; empty.asm\nformat pe64 efi\nentry main\n\nsection '.text' executable readable\n\nmain:\n  ret</pre>\n<p>Then, assmble it with FASM, and put the output in <code>drive/empty</code></p>\n<pre>$ mkdir -p drive\n$ fasm empty.asm drive/empty</pre>\n<p>Now, we can mount <code>drive/</code> as a FAT32 formatted drive in\nQEMU. Then, we just need to run the application off the drive from\ninside the UEFI shell. If everything goes according to plan, you should\nsee nothing happen:</p>\n<pre>$ qemu-system-x86_64 -bios OVMF.fd -net none -drive format=raw,file=fat:rw:drive/\nUEFI Interactive Shell v2.2\nEDK II\nUEFI v2.70 (EDK II, 0x00010000)\nMapping table\n      FS0: Alias(s):HD0a1:;BLK1:\n          PciRoot(0x0)/Pci(0x1,0x1)/Ata(0x0)/HD(1,MBR,0xBE1AFDFA,0x3F,0xFBFC1)\n     BLK0: Alias(s):\n          PciRoot(0x0)/Pci(0x1,0x1)/Ata(0x0)\n     BLK2: Alias(s):\n          PciRoot(0x0)/Pci(0x1,0x1)/Ata(0x0)\nPress ESC in 1 seconds to skip startup.nsh or any other key to continue.\nShell&gt; fs0:\\empty\nShell&gt;</pre>\n</section>\n<p>Now that we have figured out how to assemble a UEFI application and run\nit inside QEMU, let's see if we can do something a little bit more\ninteresting. Yes, it's finally time to write our \"Hello, World!\"\nprogram!</p>\n<h2>Using UEFI services to write output</h2>\n<p>The UEFI firmware provides some standardized services. Among them is a\nservice that we can use to show text on the screen called the Simple Text\nOutput Protocol. The <a href=\"https://uefi.org/specifications\" rel=\"nofollow\">UEFI Specification</a>\ncontains everything you could ever possibly want to know about UEFI\n– and then some. (This tutorial uses version 2.8, updated in\nFeburary 2020.)</p>\n<p>For the purposes of writing \"Hello, World!\", we are mostly interested\nin the following sections:</p>\n<ul>\n<li>Sections 2.3.1 and 2.3.4 (Data types and x86-64 calling conventions)</li>\n<li>Section 4 (EFI System Table)</li>\n<li>Section 12 (Console support)</li>\n</ul>\n<p>If anything in this tutorial is unclear, you can probably find an answer\nto your question in one of those sections. I'll try to summarize the\nimportant parts here.</p>\n<p>When our UEFI application is started, a pointer to the EFI System\nTable will be in <code>RDX</code>. The System Table is a structure that\ncontains, among other things, a pointer to a Simple Text Output Protocol.\nThis protocol is itself a structure that contains a function to print\noutput to the screen.</p>\n<p>The specification contains definitions of all the structures that we\nneed to worry about. On page 92, we find:</p>\n<pre class=\"code\">typedef struct {\n        EFI_TABLE_HEADER                Hdr;\n        CHAR16                          *FirmwareVendor;\n        UINT32                          FirmwareRevision;\n        EFI_HANDLE                      ConsoleInHandle;\n        EFI_SIMPLE_TEXT_INPUT_PROTOCOL  *ConIn;\n        EFI_HANDLE                      ConsoleOutHandle;\n        EFI_SIMPLE_TEXT_OUTPUT_PROTOCOL *ConOut;\n        EFI_HANDLE                      StandardErrorHandle;\n        EFI_SIMPLE_TEXT_OUTPUT_PROTOCOL *StdErr;\n        EFI_RUNTIME_SERVICES            *RuntimeServices;\n        EFI_BOOT_SERVICES               *BootServices;\n        UINTN                           NumberOfTableEntries;\n        EFI_CONFIGURATION_TABLE         *ConfigurationTable;\n} EFI_SYSTEM_TABLE;</pre>\n<p>We need to calculate the offset to <code>ConOut</code> inside this\nstructure. The header is 12 bytes (cf. the definition on page 90),\n<code>UINT32</code> is 4 bytes, and <code>EFI_HANDLE</code> and all\npointer types are 8 bytes. However, note that each member of the\nstructure is 8-byte aligned; this means that there are 4 bytes of padding\nafter the header and the <code>UINT32</code>. So, in fact, the\n<code>ConOut</code> pointer will be at index <span class=\"math\">(12 + 4)\n+ (4 + 4) + 8 · 5 = 64</span> in the structure.</p>\n<p>Thus, we can load the Simple Text Output Protocol <code>ConOut</code>\nlike so:</p>\n<pre class=\"code\"><span class=\"comment\">;; Recall that RDX contains a pointer to the System Table when\n;; our application is called. So rdx + 64 is the address of the\n;; pointer to ConOut, and [rdx + 64] is the pointer itself.</span>\nmov rcx, [rdx + 64]</pre>\n<p>The Simple Text Output Protocol structure looks like this (page 442):</p>\n<pre class=\"code\">typedef struct _EFI_SIMPLE_TEXT_OUTPUT_PROTOCOL {\n        EFI_TEXT_RESET               Reset;\n        EFI_TEXT_STRING              OutputString;\n        EFI_TEXT_TEST_STRING         TestString;\n        EFI_TEXT_QUERY_MODE          QueryMode;\n        EFI_TEXT_SET_MODE            SetMode;\n        EFI_TEXT_SET_ATTRIBUTE       SetAttribute;\n        EFI_TEXT_CLEAR_SCREEN        ClearScreen;\n        EFI_TEXT_SET_CURSOR_POSITION SetCursorPosition;\n        EFI_TEXT_ENABLE_CURSOR       EnableCursor;\n        SIMPLE_TEXT_OUTPUT_MODE      *Mode;\n} EFI_SIMPLE_TEXT_OUTPUT_PROTOCOL;</pre>\n<p>We are interested in calling the function <code>OutputString</code>,\nwhich is at offset 8 inside this structure. (Each function pointer is 8\nbytes.) This function takes two arguments: a pointer to the Output\nProtocol and the string itself (see page 444).</p>\n<p>We can load the address of the function into <code>RAX</code> like so:</p>\n<pre class=\"code\"><span class=\"comment\">;; Now, RCX contains the ConOut pointer. Thus, the address of\n;; the OutputString function is at rcx + 8. We'll move this\n;; function into RAX:</span>\nmov rax, [rcx + 8]</pre>\n<p>FASM has a handy <code>du</code> instruction, which we can use to\nstore a 16-bit string. (See the <a href=\"https://flatassembler.net/docs.php?article=manual\" rel=\"nofollow\">FASM manual</a> for more information about how\n<code>du</code> works.) The string should end with a carriage return and a\nline feed. We'll store the string in the <code>.data</code> section like\nso:</p>\n<pre class=\"code\">section '.data' readable writable\nstring du 'Hello, World!', 0xD, 0xA, 0</pre>\n<p>The calling conventions (see page 27) specify that the function takes\nits first argument in <code>RCX</code> and its second argument in\n<code>RDX</code>. We must also allocate 32 bytes of so-called <i>shadow\nspace</i> on the stack before calling the function. Once we have set\neverything up, we can call the function in <code>RAX</code>:</p>\n<pre class=\"code\"><span class=\"comment\">;; We already have the ConOut pointer in RCX. Let's load the\n;; string pointer into RDX:</span>\nmov rdx, string\n\n<span class=\"comment\">;; Set up the shadow space. We just need to reserve 32 bytes\n;; on the stack, which we do by manipulating the stack pointer:</span>\nsub rsp, 32\n\n<span class=\"comment\">;; Now we can call the OutputString function, whose address is\n;; in the RAX register:</span>\ncall rax\n\n<span class=\"comment\">;; Finally, we'll clean up the shadow space and then return:</span>\nadd rsp, 32\n\nret</pre>\n<p>And that's our \"Hello, World!\" program. Now we need to assemble it\ninto an executable.</p>\n<section class=\"step\">\n<h3>Step 7 — Assemble \"Hello, World!\"</h3> <p>Create a file with\nthe full source code for the assembly program, and save it as\n<code>hello.asm</code>:\n</p><p></p><pre>$ cat &gt; hello.asm\nformat pe64 efi\nentry main\n\nsection '.text' executable readable\n\nmain:\n  ;; Recall that RDX contains a pointer to the System Table when\n  ;; our application is called. So rdx + 64 is the address of the\n  ;; pointer to ConOut, and [rdx + 64] is the pointer itself.\n  mov rcx, [rdx + 64]\n\n  ;; Now, RCX contains the ConOut pointer. Thus, the address of\n  ;; the OutputString function is at rcx + 8. We'll move this\n  ;; function into RAX:\n  mov rax, [rcx + 8]\n\n  ;; We already have the ConOut pointer in RCX. Let's load the\n  ;; string pointer into RDX:\n  mov rdx, string\n\n  ;; Set up the shadow space. We just need to reserve 32 bytes\n  ;; on the stack, which we do by manipulating the stack pointer:\n  sub rsp, 32\n\n  ;; Now we can call the OutputText function, whose address is\n  ;; in the RAX register:\n  call rax\n\n  ;; Finally, we'll clean up the shadow space and then return:\n  add rsp, 32\n\n  ret\n\nsection '.data' readable writable\n\nstring du 'Hello, World!', 0xD, 0xA, 0</pre><p></p>\n<p>Then, assemble it with FASM, and save the output in <code>drive/hello</code>:</p>\n<p></p><pre>$ fasm hello.asm drive/hello</pre><p></p>\n</section>\n<p>With the program in the <code>drive/</code> directory, we can mount\nthis directory inside QEMU as a FAT32 formatted drive in the same way\nthat we did before. And then we can finally run our \"Hello, World!\"\nprogram!</p>\n<section class=\"step\">\n<h3>Step 8 — Run \"Hello, World!\" in QEMU</h3>\n<p>You should have <code>drive/hello</code> from the previous step. Run\nQEMU:</p>\n<p></p><pre>$ qemu-system-x86_64 -bios OVMF.fd -net none -drive format=raw,file=fat:rw:drive/</pre><p></p>\n<p>Then, in the UEFI shell execute <code>FS0:\\hello</code>:\n</p><p></p><pre>Shell&gt; FS0:\\hello\nHello, World!\nShell&gt;</pre><p></p>\n</section>\n<p>And there you go!</p>\n<p>Perhaps you would like to see your \"Hello, World!\" program running in\nall its glory on your real, physical hardware. This is actually pretty\neasy to do. You just need to format a USB drive with a FAT32 file system,\nand then you can put your file directly on the USB drive. If you have a\nUEFI shell built-in to your firmware, then you can run the program from\nthere.</p>\n<p>Otherwise, you can save the file as <code>\\EFI\\BOOT\\BOOTx64.EFI</code>\non the USB drive; this will make the UEFI firmware think that it's a\nbootable device (like a USB drive with an operating system or a\nbootloader on it), and let you select that drive from the boot menu. If\nyou're planning to boot directly into your \"Hello, World!\" program, you\nshould change the <code>ret</code> instruction to <code>jmp $</code>.\nThis will cause the program to wait forever so that it doesn't shut down\nimmediately after booting from it.</p>\n<section class=\"step\">\n<h3>Step 9 — Create a bootable USB drive</h3>\n<p>Start by replacing <code>ret</code> with <code>jmp $</code> so you\ncan acutally see your program running. Then reassemble it to <code>hello</code>:</p>\n<p></p><pre>$ sed -i 's/ret$/jmp $/' hello.asm\n$ fasm hello.asm hello</pre><p></p>\n<p>I'll assume that you have an empty USB drive available as\n<code>/dev/sdx</code>. We'll need <code>mkfs.vfat</code> to format the\nUSB drive. On Ubunut, you can install this with:</p>\n<p></p><pre>$ sudo apt-get install dosfstools</pre><p></p>\n<p>Now, format the drive as FAT32:</p>\n<p></p><pre>$ sudo mkfs.vfat -F32 /dev/sdx</pre><p></p>\n<p>Then, mount the device:</p>\n<p></p><pre>$ mkdir -p mnt\n$ sudo mount /dev/sdx mnt</pre><p></p>\n<p>Now, copy the <code>hello</code> executable to <code>\\EFI\\BOOT\\BOOTx64.EFI</code> on the device:</p>\n<p></p><pre>$ mkdir -p mnt/EFI/BOOT\n$ cp hello mnt/EFI/BOOT/BOOTx64.EFI\n$ sudo umount mnt</pre><p></p>\n</section>\n<p>Now you should be able to plug your USB drive into your computer and\nboot from it!</p>\n<p>Of course, a \"Hello, World!\" program isn't all that interesting. But\nwith this, you have a good starting point to make much more intersting\napplications. In fact, it's possible to make an entire operating system\nas a UEFI application. If this is something that sounds interesting to\nyou, I'd recommend the <a rel=\"nofollow\" href=\"https://wiki.osdev.org/Expanded_Main_Page\">OSDev Wiki</a> as an\nexcellent place to get started. Have fun!</p>\n<p class=\"donation\">Thanks for reading. This article took around 11 hours\nto research and write. If you found it useful and want to support me, you\ncan send a small tip to my <a class=\"monero\" rel=\"nofollow\" href=\"https://www.getmonero.org/\">Monero</a> address: <code class=\"monero-address\">86DgwJ6H15nU4uTtZ1MVNk1EyudtUPEWDcAZg3VSGU6RU44LvzQQcx6Ry8tHqQo5CficxMvNd2i7Ca4GmtJSXwqZ3rnvAwU</code></p>\n</article>\n<script>document.body.classList.remove(\"loading\");</script>\n<script>\n      (async () => {\n        const hnItemId = \"22684881\";\n        const data = await (await fetch(\"https://hacker-news.firebaseio.com/v0/item/\" + hnItemId + \".json\")).json();\n        const comments = data.descendants;\n        document.getElementById(\"post-comments\").textContent = comments.toString() + \" comments on Hacker News\";\n      })();\n    </script>\n\n\n\n","text":"jonas hvid — March 25, 2020 Getting started with bare-metal assembly\nComments on Hacker News\nSeeing a program you wrote running directly on the bare metal is\ndeeply satisfying to anyone who enjoys writing software. And it turns out\nthat creating such a program from scratch is easier than it sounds. The\nhardest part is figuring out where to start. In this tutorial, I'll show\nyou how to write, build and run the classic \"Hello, World!\" in pure\nassembly.\n\"Hello, World!\" inside the UEFI shell. You could also boot\ndirectly into the application.\nWell, almost – on a modern computer, our assembly application\ndoesn't just have direct access to the hardware. Instead it must\ncommunicate with an intermediary firmware layer on the motherboard,\nthrough the so-called Unified Extensible Firmware Interface\n(UEFI).\nCreating a \"Hello, World!\" UEFI application is a three-step process:\nSet up a virtual machine with UEFI support.\nInstall an assembler that can output UEFI applications.\nWrite the actual program and run it!\nSetting up QEMU\nWe could test our application by repeatedly copying it to a\nUSB drive, rebooting our computer and then seeing if it works. Obviously,\nwe don't want to do that. Instead, we'll be testing our application\ninside a virtual machine, and QEMU is\na great fit for this purpose.\nStep 1 — Install QEMU\nIf you are using a GNU/Linux distribution, there's a good chance\nthat it has a qemu package available. I'll assume that\nyou're using Ubuntu, but you can easily adapt these instructions to\nwhichever system you're using.\n$ sudo apt-get install qemu\nOnce the intallation finishes, you should have\nqemu-system-x86_64 availabe in your path:\n$ qemu-system-x86_64 --version\nQEMU emulator version 2.11.1(Debian 1:2.11+dfsg-1ubuntu7.23)\nCopyright (c) 2003-2017 Fabrice Bellard and the QEMU Project developers\nWhile most modern computers come with UEFI-support built-in, QEMU does not.\nInstead, we will use something called\nOVMF,\nwhich is a firmware layer that adds UEFI support to QEMU.\nStep 2 — Set up OVMF\nAgain, there is probably a package available for your distribution.\nIf you are using Ubuntu, run:\n$ sudo apt-get install ovmf\nThis should install the file OVMF.fd somewhere on your system. Figure out\nwhere:\n$ find / -name OVMF.fd 2&gt;/dev/null\n/usr/share/ovmf/OVMF.fd\nThen, go ahead and copy this file to your working directory:\n$ cp /usr/share/ovmf/OVMF.fd .\n(On some GNU/Linux distributions, the relevant package may install\nboth a 32-bit and a 64-bit version; in this case, use the 64-bit\nversion.)\nThe UEFI firmware provides a bare-bones environment called the UEFI\nshell. We'll want to test the application that we build from this shell.\nLet's check that it's working correctly.\nStep 3 — Try the UEFI shell\nYou should have the\nfile OVMF.fd available in your working directory from step\n2. To tell QEMU about this firmware, use the argument -bios\nOVMF.fd. We also need to specify -net none\nso QEMU won't try to boot over the network:\n$ qemu-system-x86_64 -bios OVMF.fd -net none\nThis will land you in a shell that looks a little something like this:\nUEFI Interactive Shell v2.2\nEDK II\nUEFI v2.70 (EDK II, 0x00010000)\nMapping table BLK0: Alias(s): PciRoot(0x0)/Pci(0x1,0x1)/Ata(0x0)\nPress ESC in 1 seconds to skip startup.nsh or any other key to continue.\nShell&gt;\nTry typing help -b to get a list of\ncommands.\nWe need some way of accessing the executable that we build from\ninside the UEFI shell. The shell can read FAT32 file systems.\nConveniently, QEMU can mount a directory in the host file system as a\nFAT32 formatted drive in the virtual machine.\nStep 4 — Open files from the UEFI shell\nWe'll store the files on our emulated drive in a directory on the\nhost called drive/. For now, let's just create a small test\nfile that we'll try to read:\n$ mkdir drive\n$ echo \"This is a test\" &gt; drive/test.txt\nTo make this directory available as a FAT32 formatted drive inside QEMU,\nuse the -drive option like this:\n$ qemu-system-x86_64 -bios OVMF.fd -net none -drive format=raw,file=fat:rw:<u>drive/</u>\nInside QEMU, you will now see that there is a new file system\navailable called FS0:. Switch to it and look for the text\nfile that you just created:\nShell&gt; fs0:\nFS0:\\&gt; dir\nDirectory of: FS0:\\\n03/21/2020 17:46 15 test.txt\n03/21/2020 16:49 10,565 NvVars 2 File(s) 10,580 bytes 0 Dir(s)\nFS0:\\&gt; cat test.txt\nThis is a test\nGreat! We can now transfer our executable into QEMU and open it from\nthe shell. This gives us an environment that is very similar to what we\nwould get if we inserted a FAT32 formatted USB drive into a real computer\nwith a UEFI shell installed.\nAssembling a UEFI application with FASM\nIt would be nice if we could just put a bunch of machine code on a USB\ndrive and have our computer execute that. Unfortunately, that's not how it\nworks. All modern operating systems store executables as\nobject files.\nAn object file contains both the machine code itself and some information\nabout how that code should be loaded and executed.\nThe specific object file format used by UEFI is the so-called Portable\nExecutable format. This format is also used by Microsoft Windows\nfor .exe and .dll files.\nAn assembler is a program that generates an object file from\nassembly code. There are many assemblers, but for this tutorial we'll be\nusing FASM,\nbecause it's easy to use and has built-in support for the object file\nformat we need.\nStep 5 — Install FASM\nOn Ubuntu, FASM is available in the standard repository:\n$ sudo apt-get install fasm\nCheck that you have FASM installed and in your path:\n$ fasm\nflat assembler version 1.73.13\nusage: fasm <source> [output]\noptional settings: -m &lt;limit&gt; set the limit in kilobytes for the available memory -p &lt;limit&gt; set the maximum allowed number of passes -d &lt;name&gt;=&lt;value&gt; define symbolic variable -s &lt;file&gt; dump symbolic information for debugging\nFASM can generate code for many different output formats. We need to\ntell it to generate a 64-bit Portable Executable with some extra flags\nset to specify that it's a UEFI application. This is done using the\nformat directive:\nformat pe64 efi\nLet's start by writing a program that is even simpler than \"Hello,\nWorld!\" – a program that does absolutely nothing. This program will\nstart at the main: label and then immediately return to the\ncaller:\nentry main\nmain: ret\nThe Portable Executable format, like most executable file formats,\nsupports multiple sections. One section contains the\nprogram code, another contains data that is loaded into RAM when the\nprogram is started, and so on. The machine code should sit in a section\ncalled .text, and we should specify that data in this\nsection may be both executed and read:\nsection '.text' executable readable\nThus, the final program, which does nothing and then exists, is:\nformat pe64 efi\nentry main section '.text' executable readable main: ret\nNow we just need to assemble this program, and then we'll be able to\nrun it inside QEMU.\nStep 6 — Assemble and run an empty executable\nSave the program as empty.asm:\n$ cat &gt; empty.asm\nformat pe64 efi\nentry main section '.text' executable readable main: ret\nThen, assmble it with FASM, and put the output in drive/empty\n$ mkdir -p drive\n$ fasm empty.asm drive/empty\nNow, we can mount drive/ as a FAT32 formatted drive in\nQEMU. Then, we just need to run the application off the drive from\ninside the UEFI shell. If everything goes according to plan, you should\nsee nothing happen:\n$ qemu-system-x86_64 -bios OVMF.fd -net none -drive format=raw,file=fat:rw:drive/\nUEFI Interactive Shell v2.2\nEDK II\nUEFI v2.70 (EDK II, 0x00010000)\nMapping table FS0: Alias(s):HD0a1:;BLK1: PciRoot(0x0)/Pci(0x1,0x1)/Ata(0x0)/HD(1,MBR,0xBE1AFDFA,0x3F,0xFBFC1) BLK0: Alias(s): PciRoot(0x0)/Pci(0x1,0x1)/Ata(0x0) BLK2: Alias(s): PciRoot(0x0)/Pci(0x1,0x1)/Ata(0x0)\nPress ESC in 1 seconds to skip startup.nsh or any other key to continue.\nShell&gt; fs0:\\empty\nShell&gt;\nNow that we have figured out how to assemble a UEFI application and run\nit inside QEMU, let's see if we can do something a little bit more\ninteresting. Yes, it's finally time to write our \"Hello, World!\"\nprogram!\nUsing UEFI services to write output\nThe UEFI firmware provides some standardized services. Among them is a\nservice that we can use to show text on the screen called the Simple Text\nOutput Protocol. The UEFI Specification\ncontains everything you could ever possibly want to know about UEFI\n– and then some. (This tutorial uses version 2.8, updated in\nFeburary 2020.)\nFor the purposes of writing \"Hello, World!\", we are mostly interested\nin the following sections:\nSections 2.3.1 and 2.3.4 (Data types and x86-64 calling conventions)\nSection 4 (EFI System Table)\nSection 12 (Console support)\nIf anything in this tutorial is unclear, you can probably find an answer\nto your question in one of those sections. I'll try to summarize the\nimportant parts here.\nWhen our UEFI application is started, a pointer to the EFI System\nTable will be in RDX. The System Table is a structure that\ncontains, among other things, a pointer to a Simple Text Output Protocol.\nThis protocol is itself a structure that contains a function to print\noutput to the screen.\nThe specification contains definitions of all the structures that we\nneed to worry about. On page 92, we find:\ntypedef struct { EFI_TABLE_HEADER Hdr; CHAR16 *FirmwareVendor; UINT32 FirmwareRevision; EFI_HANDLE ConsoleInHandle; EFI_SIMPLE_TEXT_INPUT_PROTOCOL *ConIn; EFI_HANDLE ConsoleOutHandle; EFI_SIMPLE_TEXT_OUTPUT_PROTOCOL *ConOut; EFI_HANDLE StandardErrorHandle; EFI_SIMPLE_TEXT_OUTPUT_PROTOCOL *StdErr; EFI_RUNTIME_SERVICES *RuntimeServices; EFI_BOOT_SERVICES *BootServices; UINTN NumberOfTableEntries; EFI_CONFIGURATION_TABLE *ConfigurationTable;\n} EFI_SYSTEM_TABLE;\nWe need to calculate the offset to ConOut inside this\nstructure. The header is 12 bytes (cf. the definition on page 90),\nUINT32 is 4 bytes, and EFI_HANDLE and all\npointer types are 8 bytes. However, note that each member of the\nstructure is 8-byte aligned; this means that there are 4 bytes of padding\nafter the header and the UINT32. So, in fact, the\nConOut pointer will be at index (12 + 4)\n+ (4 + 4) + 8 · 5 = 64 in the structure.\nThus, we can load the Simple Text Output Protocol ConOut\nlike so:\n<span class=\"comment\">;; Recall that RDX contains a pointer to the System Table when\n;; our application is called. So rdx + 64 is the address of the\n;; pointer to ConOut, and [rdx + 64] is the pointer itself.</span>\nmov rcx, [rdx + 64]\nThe Simple Text Output Protocol structure looks like this (page 442):\ntypedef struct _EFI_SIMPLE_TEXT_OUTPUT_PROTOCOL { EFI_TEXT_RESET Reset; EFI_TEXT_STRING OutputString; EFI_TEXT_TEST_STRING TestString; EFI_TEXT_QUERY_MODE QueryMode; EFI_TEXT_SET_MODE SetMode; EFI_TEXT_SET_ATTRIBUTE SetAttribute; EFI_TEXT_CLEAR_SCREEN ClearScreen; EFI_TEXT_SET_CURSOR_POSITION SetCursorPosition; EFI_TEXT_ENABLE_CURSOR EnableCursor; SIMPLE_TEXT_OUTPUT_MODE *Mode;\n} EFI_SIMPLE_TEXT_OUTPUT_PROTOCOL;\nWe are interested in calling the function OutputString,\nwhich is at offset 8 inside this structure. (Each function pointer is 8\nbytes.) This function takes two arguments: a pointer to the Output\nProtocol and the string itself (see page 444).\nWe can load the address of the function into RAX like so:\n<span class=\"comment\">;; Now, RCX contains the ConOut pointer. Thus, the address of\n;; the OutputString function is at rcx + 8. We'll move this\n;; function into RAX:</span>\nmov rax, [rcx + 8]\nFASM has a handy du instruction, which we can use to\nstore a 16-bit string. (See the FASM manual for more information about how\ndu works.) The string should end with a carriage return and a\nline feed. We'll store the string in the .data section like\nso:\nsection '.data' readable writable\nstring du 'Hello, World!', 0xD, 0xA, 0\nThe calling conventions (see page 27) specify that the function takes\nits first argument in RCX and its second argument in\nRDX. We must also allocate 32 bytes of so-called shadow\nspace on the stack before calling the function. Once we have set\neverything up, we can call the function in RAX:\n<span class=\"comment\">;; We already have the ConOut pointer in RCX. Let's load the\n;; string pointer into RDX:</span>\nmov rdx, string <span class=\"comment\">;; Set up the shadow space. We just need to reserve 32 bytes\n;; on the stack, which we do by manipulating the stack pointer:</span>\nsub rsp, 32 <span class=\"comment\">;; Now we can call the OutputString function, whose address is\n;; in the RAX register:</span>\ncall rax <span class=\"comment\">;; Finally, we'll clean up the shadow space and then return:</span>\nadd rsp, 32 ret\nAnd that's our \"Hello, World!\" program. Now we need to assemble it\ninto an executable.\nStep 7 — Assemble \"Hello, World!\"\nCreate a file with\nthe full source code for the assembly program, and save it as\nhello.asm:\n$ cat &gt; hello.asm\nformat pe64 efi\nentry main section '.text' executable readable main: ;; Recall that RDX contains a pointer to the System Table when ;; our application is called. So rdx + 64 is the address of the ;; pointer to ConOut, and [rdx + 64] is the pointer itself. mov rcx, [rdx + 64] ;; Now, RCX contains the ConOut pointer. Thus, the address of ;; the OutputString function is at rcx + 8. We'll move this ;; function into RAX: mov rax, [rcx + 8] ;; We already have the ConOut pointer in RCX. Let's load the ;; string pointer into RDX: mov rdx, string ;; Set up the shadow space. We just need to reserve 32 bytes ;; on the stack, which we do by manipulating the stack pointer: sub rsp, 32 ;; Now we can call the OutputText function, whose address is ;; in the RAX register: call rax ;; Finally, we'll clean up the shadow space and then return: add rsp, 32 ret section '.data' readable writable string du 'Hello, World!', 0xD, 0xA, 0\nThen, assemble it with FASM, and save the output in drive/hello:\n$ fasm hello.asm drive/hello\nWith the program in the drive/ directory, we can mount\nthis directory inside QEMU as a FAT32 formatted drive in the same way\nthat we did before. And then we can finally run our \"Hello, World!\"\nprogram!\nStep 8 — Run \"Hello, World!\" in QEMU\nYou should have drive/hello from the previous step. Run\nQEMU:\n$ qemu-system-x86_64 -bios OVMF.fd -net none -drive format=raw,file=fat:rw:drive/\nThen, in the UEFI shell execute FS0:\\hello:\nShell&gt; FS0:\\hello\nHello, World!\nShell&gt;\nAnd there you go!\nPerhaps you would like to see your \"Hello, World!\" program running in\nall its glory on your real, physical hardware. This is actually pretty\neasy to do. You just need to format a USB drive with a FAT32 file system,\nand then you can put your file directly on the USB drive. If you have a\nUEFI shell built-in to your firmware, then you can run the program from\nthere.\nOtherwise, you can save the file as \\EFI\\BOOT\\BOOTx64.EFI\non the USB drive; this will make the UEFI firmware think that it's a\nbootable device (like a USB drive with an operating system or a\nbootloader on it), and let you select that drive from the boot menu. If\nyou're planning to boot directly into your \"Hello, World!\" program, you\nshould change the ret instruction to jmp $.\nThis will cause the program to wait forever so that it doesn't shut down\nimmediately after booting from it.\nStep 9 — Create a bootable USB drive\nStart by replacing ret with jmp $ so you\ncan acutally see your program running. Then reassemble it to hello:\n$ sed -i 's/ret$/jmp $/' hello.asm\n$ fasm hello.asm hello\nI'll assume that you have an empty USB drive available as\n/dev/sdx. We'll need mkfs.vfat to format the\nUSB drive. On Ubunut, you can install this with:\n$ sudo apt-get install dosfstools\nNow, format the drive as FAT32:\n$ sudo mkfs.vfat -F32 /dev/sdx\nThen, mount the device:\n$ mkdir -p mnt\n$ sudo mount /dev/sdx mnt\nNow, copy the hello executable to \\EFI\\BOOT\\BOOTx64.EFI on the device:\n$ mkdir -p mnt/EFI/BOOT\n$ cp hello mnt/EFI/BOOT/BOOTx64.EFI\n$ sudo umount mnt\nNow you should be able to plug your USB drive into your computer and\nboot from it!\nOf course, a \"Hello, World!\" program isn't all that interesting. But\nwith this, you have a good starting point to make much more intersting\napplications. In fact, it's possible to make an entire operating system\nas a UEFI application. If this is something that sounds interesting to\nyou, I'd recommend the OSDev Wiki as an\nexcellent place to get started. Have fun!\nThanks for reading. This article took around 11 hours\nto research and write. If you found it useful and want to support me, you\ncan send a small tip to my Monero address: 86DgwJ6H15nU4uTtZ1MVNk1EyudtUPEWDcAZg3VSGU6RU44LvzQQcx6Ry8tHqQo5CficxMvNd2i7Ca4GmtJSXwqZ3rnvAwU","ctext":"jonas hvid — 2020年3月25日，裸机组装入门\n评论黑客新闻\n看到您编写的直接在裸机上运行的程序是\n对喜欢编写软件的人深表满意。 事实证明\n从头开始创建这样的程序比听起来容易。 的\n最困难的部分是弄清楚从哪里开始。 在本教程中，我将展示\n您将学习如何编写，构建和运行经典的“ Hello，World！”。 纯净地\n部件。\n“你好，世界！” 在UEFI Shell中。 您也可以启动\n直接进入应用程序。\n好吧，几乎–在现代计算机上，我们的组装应用程序\n不仅可以直接访问硬件。 相反，它必须\n与主板上的中间固件层通信，\n通过所谓的统一可扩展固件接口\n（UEFI）。\n创建一个“你好，世界！” UEFI应用程序分为三个步骤：\n设置具有UEFI支持的虚拟机。\n安装可以输出UEFI应用程序的汇编程序。\n编写实际程序并运行它！\n设置QEMU\n我们可以通过将其重复复制到\nUSB驱动器，重新启动计算机，然后查看其是否正常运行。 明显，\n我们不想这样做。 相反，我们将测试我们的应用程序\n在虚拟机中，而QEMU是\n非常适合此目的。\n第1步-安装QEMU\n如果您使用的是GNU / Linux发行版，则很有可能\n它有一个可用的qemu软件包。 我假设\n您使用的是Ubuntu，但是您可以轻松地将这些说明改编为\n无论您使用的是哪个系统。\n$ sudo apt-get install qemu\n安装完成后，您应该\nqemu-system-x86_64在您的路径中可用：\n$ qemu-system-x86_64-版本\nQEMU仿真器版本2.11.1（Debian 1：2.11 + dfsg-1ubuntu7.23）\n版权所有（c）2003-2017 Fabrice Bellard和QEMU Project开发人员\n尽管大多数现代计算机都内置了UEFI支持，但QEMU却没有。\n相反，我们将使用称为\nOVMF，\n这是将UEFI支持添加到QEMU的固件层。\n步骤2 —设置OVMF\n同样，可能有一个可供您分发的软件包。\n如果使用的是Ubuntu，请运行：\n$ sudo apt-get install ovmf\n这应该在系统上的某个位置安装文件OVMF.fd。 弄清楚\n哪里：\n哪里：...\n/US人/share/o v免费/o VM F.反对\n然后，继续并将此文件复制到您的工作目录中：\n$ cp /usr/share/ovmf/OVMF.fd。\n（在某些GNU / Linux发行版中，可能会安装相关的软件包\n32位和64位版本； 在这种情况下，请使用64位\n版。）\nUEFI固件提供了称为UEFI的准系统环境\n贝壳。 我们将要测试从此Shell构建的应用程序。\n让我们检查一下它是否正常工作。\n步骤3 —尝试UEFI Shell\n你应该有\n从步骤开始，文件OVMF.fd在您的工作目录中可用\n2.要告诉QEMU有关此固件的信息，请使用-bios参数\nOVMF.fd。 我们还需要指定-net none\n因此QEMU不会尝试通过网络引导：\n$ qemu-system-x86_64 -bios OVMF.fd -net无\n这将使您进入一个看起来像这样的外壳：\nUEFI交互式Shell v2.2\nEDK II\nUEFI v2.70（EDK II，0x00010000）\n映射表BLK0：别名：PciRoot（0x0）/ Pci（0x1,0x1）/ Ata（0x0）\n在1秒钟内按ESC可以跳过startup.nsh或任何其他键以继续。\n在1秒钟内按ESC可以跳过startup.nsh或任何其他键以继续。...\n尝试输入help -b以获得列表\n命令。\n我们需要某种方式来访问从中生成的可执行文件\n在UEFI Shell中。 该外壳程序可以读取FAT32文件系统。\n方便地，QEMU可以在主机文件系统中将目录挂载为\n虚拟机中的FAT32格式化的驱动器。\n步骤4 —从UEFI Shell打开文件\n我们会将文件存储在模拟驱动器上的目录中。\n主机称为drive /。 现在，让我们创建一个小测试\n我们将尝试读取的文件：\n$ mkdir驱动器\n$ mkdir驱动器...\n要使此目录作为QEMU中的FAT32格式的驱动器可用，\n使用-drive选项，如下所示：\n$ qemu-system-x86_64 -bios OVMF.fd -net none-驱动器格式=原始，文件=胖：rw：<u>驱动器/ </ u>\n在QEMU内部，您现在将看到有一个新的文件系统\n可用称为FS0:。 切换到它并查找文本\n您刚创建的文件：\n您刚创建的文件：...\n您刚创建的文件：......\n的目录：FS0：\\\n03/21/2020 17:46 15 test.txt\n2020年3月21日16:49 10,565 NvVars 2文件10,580字节0目录\n2020年3月21日16:49 10,565 NvVars 2文件10,580字节0目录...\n这是一个测试\n大！ 现在我们可以将可执行文件传输到QEMU并从\n贝壳。 这给我们提供了一个非常类似于我们的环境\n如果我们将FAT32格式的USB驱动器插入真实计算机中，将会得到\n安装了UEFI Shell。\n使用FASM组装UEFI应用程序\n如果我们可以将一堆机器代码放在USB上，那就太好了\n驱动并让我们的计算机执行该操作。 不幸的是，事实并非如此\n作品。 所有现代操作系统都将可执行文件存储为\n目标文件。\n目标文件包含机器代码本身和一些信息\n有关应如何加载和执行该代码的信息。\nUEFI使用的特定目标文件格式是可移植的\n可执行格式。 Microsoft Windows也使用此格式\n.exe和.dll文件。\n汇编器是一个程序，可从中生成目标文件\n汇编代码。 汇编程序很多，但是对于本教程，我们将\n使用FASM，\n因为它易于使用并且对目标文件具有内置支持\n我们需要的格式。\n步骤5 —安装FASM\n在Ubuntu上，标准存储库中提供了FASM：\n$ sudo apt-get install fasm\n检查是否已安装FASM并在路径中：\n$ fasm\n平面汇编器版本1.73.13\n用法：fasm <源> [输出]\n用法：fasm <源> [输出]...\nFASM可以为许多不同的输出格式生成代码。 我们要\n告诉它生成带有一些额外标志的64位可移植可执行文件\n设置以指定它是UEFI应用程序。 这是通过使用\n格式指令：\n格式pe64 efi\n让我们从编写比“你好，\n世界！” –一个完全不执行任何操作的程序。\n从main：标签开始，然后立即返回\n呼叫者：\n入口主体\n主：ret\n便携式可执行文件格式，与大多数可执行文件格式一样，\n支持多个部分。 一节包含\n程序代码，另一个包含当\n程序已启动，依此类推。 机器代码应放在一个部分中\n称为.text，我们应该在此指定该数据\n该部分可能同时执行并显示为：\n“ .text”部分可执行文件可读\n因此，什么都不做然后存在的最终程序是：\n格式pe64 efi\n条目主体部分'.text'可执行的可读主体：ret\n现在我们只需要汇编该程序，然后我们就可以\n在QEMU中运行它。\n步骤6 —组装并运行一个空的可执行文件\n将程序另存为empty.asm：\n将程序另存为empty.asm：...\n格式pe64 efi\n条目主体部分'.text'可执行的可读主体：ret\n然后，用FASM组装它，然后将输出放入驱动器/空\n$ mkdir -p驱动器\n$ fasm empty.asm驱动器/空\n现在，我们可以将drive /作为FAT32格式的驱动器挂载到\nQEMU。 然后，我们只需要从以下驱动器上运行该应用程序\n在UEFI Shell中。 如果一切按计划进行，您应该\n什么也没发生：\n$ qemu-system-x86_64 -bios OVMF.fd -net none-驱动器格式=原始，文件=胖：rw：驱动器/\nUEFI交互式Shell v2.2\nEDK II\nUEFI v2.70（EDK II，0x00010000）\n映射表FS0：别名：HD0a1 :; BLK1：PciRoot（0x0）/ Pci（0x1,0x1）/ Ata（0x0）/ HD（1，MBR，0xBE1AFDFA，0x3F，0xFBFC1）BLK0：别名： PciRoot（0x0）/ Pci（0x1,0x1）/ Ata（0x0）BLK2：别名：PciRoot（0x0）/ Pci（0x1,0x1）/ Ata（0x0）\n在1秒钟内按ESC可以跳过startup.nsh或任何其他键以继续。\n映射表FS0：别名：HD0a1 :; BLK1：PciRoot（0x0）/ Pci（0x1,0x1）/ Ata（0x0）/ HD（1，MBR，0xBE1AFDFA，0x3F，0xFBFC1）BLK0：别名： PciRoot（0x0）/ Pci（0x1,0x1）/ Ata（0x0）BLK2：别名：PciRoot（0x0）/ Pci（0x1,0x1）/ Ata（0x0）...\n在1秒钟内按ESC可以跳过startup.nsh或任何其他键以继续。...\n现在，我们已经了解了如何组装UEFI应用程序并运行\n它在QEMU中，让我们看看是否可以做更多的事情\n有趣。 是的，现在该写我们的《 Hello，World！》了。\n程序！\n使用UEFI服务写入输出\nUEFI固件提供了一些标准化服务。 其中有一个\n我们可以用来在屏幕上显示文本的服务，称为“简单文本”\n输出协议。 UEFI规范\n包含您可能想要了解的关于UEFI的所有信息\n- 然后还有一些。 （本教程使用的是2.8版，\n2020年2月。）\n为了编写“ Hello，World！”，我们主要感兴趣\n在以下各节中：\n第2.3.1和2.3.4节（数据类型和x86-64调用约定）\n第4节（EFI系统表）\n第12节（控制台支持）\n如果本教程中的任何内容不清楚，您可能可以找到答案\n在这些部分之一中回答您的问题。 我会尝试总结一下\n重要部分。\n当我们的UEFI应用程序启动时，指向EFI系统的指针\n表将在RDX中。 系统表的结构\n除其他外，包含指向简单文本输出协议的指针。\n该协议本身就是一个包含打印功能的结构\n输出到屏幕。\n该规范包含了我们所有结构的定义\n需要担心。 在第92页，我们发现：\ntypedef struct {EFI_TABLE_HEADER Hdr; CHAR16 *固件供应商； UINT32固件修订版； EFI_HANDLE ConsoleInHandle; EFI_SIMPLE_TEXT_INPUT_PROTOCOL * ConIn; EFI_HANDLE ConsoleOutHandle; EFI_SIMPLE_TEXT_OUTPUT_PROTOCOL * ConOut; EFI_HANDLE StandardErrorHandle; EFI_SIMPLE_TEXT_OUTPUT_PROTOCOL * StdErr; EFI_RUNTIME_SERVICES * RuntimeServices； EFI_BOOT_SERVICES *引导服务； UINTN NumberOfTableEntries; EFI_CONFIGURATION_TABLE *配置表；\n} EFI_SYSTEM_TABLE;\n我们需要在其中计算到ConOut的偏移量\n结构体。 标头为12个字节（请参阅第90页的定义），\nUINT32是4个字节，还有EFI_HANDLE和所有\n指针类型为8个字节。 但是，请注意，\n结构是8字节对齐的； 这意味着有4个字节的填充\n在标题和UINT32之后。 因此，事实上，\nConOut指针将位于索引（12 + 4）\n+（4 + 4）+ 8·5 = 64。\n因此，我们可以加载简单文本输出协议ConOut\n像这样：\n<span class =“ comment”> ;; 回想一下，RDX在以下情况下包含指向系统表的指针：\n;; 我们的应用程序被调用。 因此rdx + 64是\n;; 指向ConOut的指针，而[rdx + 64]是指针本身。</ span>\nmov rcx，[rdx + 64]\n简单文本输出协议结构如下（第442页）：\ntypedef struct _EFI_SIMPLE_TEXT_OUTPUT_PROTOCOL {EFI_TEXT_RESET重置； EFI_TEXT_STRING OutputString; EFI_TEXT_TEST_STRING测试字串； EFI_TEXT_QUERY_MODE QueryMode； EFI_TEXT_SET_MODE SetMode; EFI_TEXT_SET_ATTRIBUTE SetAttribute; EFI_TEXT_CLEAR_SCREEN ClearScreen; EFI_TEXT_SET_CURSOR_POSITION SetCursorPosition; EFI_TEXT_ENABLE_CURSOR EnableCursor; SIMPLE_TEXT_OUTPUT_MODE *模式；\n} EFI_SIMPLE_TEXT_OUTPUT_PROTOCOL;\n我们对调用函数OutputString有兴趣，\n在此结构内的偏移量为8。 （每个函数指针为8\n字节。）此函数有两个参数：指向输出的指针\n协议和字符串本身（请参见第444页）。\n我们可以像下面这样将函数的地址加载到RAX中：\n<span class =“ comment”> ;; 现在，RCX包含ConOut指针。 因此，\n;; OutputString函数位于rcx +8。我们将其移动\n;; 功能进入RAX：</ span>\nmov rax，[rcx + 8]\nFASM有一个方便的du指令，我们可以用来\n存储一个16位字符串。 （有关更多信息，请参见FASM手册\ndu works。）字符串应以回车符和\n换行。 我们将字符串存储在.data部分中，例如\n所以：\n“ .data”部分可读可写\n字符串du'Hello，World！'，0xD，0xA，0\n调用约定（请参阅第27页）指定该函数采用\n它在RCX中的第一个参数，在第二个参数中的第二个参数\nRDX。 我们还必须分配32个字节的所谓的影子\n调用函数之前在堆栈上保留空间。 一旦设置好\n一切都完成了，我们可以在RAX中调用该函数：\n<span class =“ comment”> ;; RCX中已经有了ConOut指针。 让我们加载\n;; 指向RDX的字符串指针：</ span>\nmov rdx，字符串<span class =“ comment”> ;; 设置阴影空间。 我们只需要保留32个字节\n;; 在堆栈上，我们可以通过操作堆栈指针来实现：</ span>\nsub rsp，32 <span class =“ comment”> ;; 现在我们可以调用OutputString函数，其地址为\n;; 在RAX寄存器中：</ span>\n致电rax <span class =“ comment”> ;; 最后，我们将清理阴影空间，然后返回：</ span>\n添加rsp，32 ret\n那就是我们的“你好，世界！” 程序。 现在我们需要组装它\n变成可执行文件。\n步骤7 —组装“你好，世界！”\n使用创建文件\n汇编程序的完整源代码，并将其另存为\nhello.asm：\nhello.asm：...\n格式pe64 efi\n条目主体部分'.text'可执行可读主体：;; 回想一下，当;;时RDX包含一个指向系统表的指针。 我们的应用程序被调用。 因此rdx + 64是;;的地址。 指向ConOut的指针，[rdx + 64]是指针本身。 mov rcx，[rdx + 64] ;; 现在，RCX包含ConOut指针。 因此，;;的地址 OutputString函数位于rcx + 8处。 功能进入RAX：mov rax，[rcx + 8] ;; RCX中已经有了ConOut指针。 让我们加载;; 指向RDX的字符串指针：mov rdx，string ;; 设置阴影空间。 我们只需要保留32个字节； 在堆栈上，我们可以通过操作堆栈指针来实现：sub rsp，32 ;; 现在我们可以调用地址为;;的OutputText函数。 在RAX寄存器中：调用rax ;; 最后，我们将清理阴影空间，然后返回：添加rsp，32 ret节'.data'可读的可写字符串du'Hello，World！'，0xD，0xA，0\n然后，将其与FASM组装在一起，并将输出保存在drive / hello中：\n$ fasm hello.asm驱动器/您好\n使用drive /目录中的程序，我们可以挂载\nQEMU中的该目录以FAT32格式的驱动器以相同的方式\n我们以前做过的 然后我们终于可以运行我们的“ Hello，World！”\n程序！\n第8步-运行“你好，世界！” 在QEMU\n您应该具有上一步中的驱动器/ hello。 跑\nQEMU：\n$ qemu-system-x86_64 -bios OVMF.fd -net none-驱动器格式=原始，文件=胖：rw：驱动器/\n然后，在UEFI Shell中执行FS0：\\ hello：\n然后，在UEFI Shell中执行FS0：\\ hello：...\n你好，世界！\n在1秒钟内按ESC可以跳过startup.nsh或任何其他键以继续。...\n然后你去了！\n也许您想看到自己的“ Hello，World！” 程序运行于\n所有这些都归功于您真正的物理硬件。 这其实很漂亮\n容易做到。 您只需要使用FAT32文件系统格式化USB驱动器，\n然后您可以将文件直接放在USB驱动器上。 如果你有一个\nUEFI Shell内置到您的固件中，然后您可以从\n那里。\n否则，您可以将文件另存为\\ EFI \\ BOOT \\ BOOTx64.EFI\n在USB驱动器上; 这会使UEFI固件认为它是一个\n可启动设备（例如带有操作系统的USB驱动器或\n引导加载程序），然后从引导菜单中选择该驱动器。 如果\n您打算直接启动到“ Hello，World！”。 程序，你\n应该将ret指令更改为jmp $。\n这将导致程序永远等待，因此它不会关闭\n从它启动后立即。\n步骤9 —创建可启动的USB驱动器\n首先将ret替换为jmp $，以便您\n可以看到您的程序正在运行。 然后将其重新组装为hello：\n$ sed -i's / ret $ / jmp $ /'hello.asm\n$ fasm hello.asm你好\n我假设您有一个空的USB驱动器\n/ dev / sdx。 我们需要mkfs.vfat来格式化\nUSB驱动器。 在Ubuntu上，您可以使用以下命令进行安装：\n$ sudo apt-get install dosfstools\n现在，将驱动器格式化为FAT32：\n$ sudo mkfs.vfat -F32 / dev / sdx\n然后，安装设备：\n$ mkdir -p mnt\n$ sudo mount / dev / sdx mnt\n现在，将hello可执行文件复制到设备上的\\ EFI \\ BOOT \\ BOOTx64.EFI：\n$ mkdir -p mnt / EFI / BOOT\n$ cp hello mnt / EFI / BOOT / BOOTx64.EFI\n$ sudo umount mnt\n现在，您应该可以将USB驱动器插入计算机并\n从它启动！\n当然是“你好，世界！” 程序不是很有趣。 但\n这样，您便有了一个很好的起点，可以使事情变得更加有趣\n应用程序。 实际上，可以制作整个操作系统\n作为UEFI应用程序。 如果这听起来很有趣\n您，我建议将OSDev Wiki作为\n上手的好地方。 玩得开心！\n谢谢阅读。 这篇文章花了大约11个小时\n研究和写作。 如果您觉得它有用并想要支持我，那么您\n可以给我的Monero地址发送小提示：86DgwJ6H15nU4uTtZ1MVNk1EyudtUPEWDcAZg3VSGU6RU44LvzQQcx6Ry8tHqQo5CficxMvNd2i7Ca4GmtJSXwqZ3rnvAwUw\n"}

{"l":"http://techgenix.com/open-source-security-tools/","n":"open source security tools","html":"\n\n<!-- Google Tag Manager -->\n<noscript><iframe src=\"//www.googletagmanager.com/ns.html?id=GTM-W2B56W\"\nheight=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe></noscript>\n<script>(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':\nnew Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],\nj=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=\n'//www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);\n})(window,document,'script','dataLayer','GTM-W2B56W');</script>\n<!-- End Google Tag Manager -->\n\n\t\t<input type=\"hidden\" id=\"pp_enable_right_click\" name=\"pp_enable_right_click\" value=\"\">\n\t<input type=\"hidden\" id=\"pp_enable_dragging\" name=\"pp_enable_dragging\" value=\"\">\n\t<input type=\"hidden\" id=\"pp_image_path\" name=\"pp_image_path\" value=\"http://techgenix.com/tgwordpress/wp-content/themes/grandnews/images/\">\n\t<input type=\"hidden\" id=\"pp_homepage_url\" name=\"pp_homepage_url\" value=\"http://techgenix.com/tgwordpress\">\n\t<input type=\"hidden\" id=\"pp_ajax_search\" name=\"pp_ajax_search\" value=\"\">\n\t<input type=\"hidden\" id=\"pp_fixed_menu\" name=\"pp_fixed_menu\" value=\"1\">\n\t<input type=\"hidden\" id=\"tg_sidebar_sticky\" name=\"tg_sidebar_sticky\" value=\"\">\n\t<input type=\"hidden\" id=\"pp_topbar\" name=\"pp_topbar\" value=\"\">\n\t<input type=\"hidden\" id=\"pp_page_title_img_blur\" name=\"pp_page_title_img_blur\" value=\"\">\n\t<input type=\"hidden\" id=\"tg_blog_slider_layout\" name=\"tg_blog_slider_layout\" value=\"\">\n\t<input type=\"hidden\" id=\"pp_back\" name=\"pp_back\" value=\"Back\">\n\t<input type=\"hidden\" id=\"tg_lightbox_skin\" name=\"tg_lightbox_skin\" value=\"metro-black\">\n\t<input type=\"hidden\" id=\"tg_lightbox_thumbnails\" name=\"tg_lightbox_thumbnails\" value=\"horizontal\">\n\t<input type=\"hidden\" id=\"tg_lightbox_opacity\" name=\"tg_lightbox_opacity\" value=\"0.95\">\n\t<input type=\"hidden\" id=\"tg_enable_lazy\" name=\"tg_enable_lazy\" value=\"1\">\n\t\n\t\t<input type=\"hidden\" id=\"pp_footer_style\" name=\"pp_footer_style\" value=\"3\">\n\t\n\t<!-- Begin mobile menu -->\n\t<a id=\"close_mobile_menu\" href=\"javascript:;\"></a>\n\t<div class=\"mobile_menu_wrapper\">\n\t\t<a id=\"close_mobile_menu_button\" href=\"javascript:;\"><i class=\"fa fa-close\"></i></a>\n\t\n\t    <div class=\"menu-main-menu-container\"><ul id=\"mobile_main_menu\" class=\"mobile_main_nav\"><li id=\"menu-item-5101\" class=\"menu-item menu-item-type-taxonomy menu-item-object-category current-post-ancestor current-menu-parent current-post-parent menu-item-has-children menu-item-5101\"><a href=\"http://techgenix.com/articles/\" data-cat=\"56\">Sections</a>\n<ul class=\"sub-menu\">\n\t<li id=\"menu-item-5306\" class=\"menu-item menu-item-type-taxonomy menu-item-object-category menu-item-has-children menu-item-5306\"><a href=\"http://techgenix.com/cloud-computing/\" data-cat=\"80\">Cloud Computing</a>\n\t<ul class=\"sub-menu\">\n\t\t<li id=\"menu-item-5617\" class=\"menu-item menu-item-type-taxonomy menu-item-object-category menu-item-5617\"><a href=\"http://techgenix.com/cloud-computing/amazon-web-services/\" data-cat=\"95\">Amazon Web Services</a></li>\n\t\t<li id=\"menu-item-925132\" class=\"menu-item menu-item-type-taxonomy menu-item-object-category menu-item-925132\"><a href=\"http://techgenix.com/cloud-computing/google-cloud/\" data-cat=\"101716\">Google Cloud</a></li>\n\t\t<li id=\"menu-item-5618\" class=\"menu-item menu-item-type-taxonomy menu-item-object-category menu-item-5618\"><a href=\"http://techgenix.com/cloud-computing/hybrid-cloud/\" data-cat=\"130\">Hybrid Cloud</a></li>\n\t\t<li id=\"menu-item-5620\" class=\"menu-item menu-item-type-taxonomy menu-item-object-category menu-item-5620\"><a href=\"http://techgenix.com/cloud-computing/microsoft-azure/\" data-cat=\"129\">Microsoft Azure</a></li>\n\t\t<li id=\"menu-item-5619\" class=\"menu-item menu-item-type-taxonomy menu-item-object-category menu-item-5619\"><a href=\"http://techgenix.com/cloud-computing/office-365/\" data-cat=\"144\">Office 365</a></li>\n\t</ul>\n</li>\n\t<li id=\"menu-item-933540\" class=\"menu-item menu-item-type-taxonomy menu-item-object-category current-post-ancestor current-menu-parent current-post-parent menu-item-933540\"><a href=\"http://techgenix.com/containerization/\" data-cat=\"102566\">Containerization</a></li>\n\t<li id=\"menu-item-440253\" class=\"menu-item menu-item-type-taxonomy menu-item-object-category menu-item-has-children menu-item-440253\"><a href=\"http://techgenix.com/data-center/\" data-cat=\"845\">Data Center</a>\n\t<ul class=\"sub-menu\">\n\t\t<li id=\"menu-item-440252\" class=\"menu-item menu-item-type-taxonomy menu-item-object-category menu-item-440252\"><a href=\"http://techgenix.com/big-data-machine-learning/\" data-cat=\"849\">Big Data &amp; Machine Learning</a></li>\n\t\t<li id=\"menu-item-997689\" class=\"menu-item menu-item-type-taxonomy menu-item-object-category menu-item-997689\"><a href=\"http://techgenix.com/data-center/disaster-recovery/\" data-cat=\"847\">Disaster Recovery</a></li>\n\t\t<li id=\"menu-item-997690\" class=\"menu-item menu-item-type-taxonomy menu-item-object-category menu-item-997690\"><a href=\"http://techgenix.com/data-center/infrastructure-management/\" data-cat=\"848\">Infrastructure Management</a></li>\n\t\t<li id=\"menu-item-997691\" class=\"menu-item menu-item-type-taxonomy menu-item-object-category menu-item-997691\"><a href=\"http://techgenix.com/data-center/storage/\" data-cat=\"846\">Storage</a></li>\n\t</ul>\n</li>\n\t<li id=\"menu-item-5273\" class=\"menu-item menu-item-type-taxonomy menu-item-object-category menu-item-5273\"><a href=\"http://techgenix.com/mobile-technology/\" data-cat=\"139\">Mobile Technology</a></li>\n\t<li id=\"menu-item-8769\" class=\"menu-item menu-item-type-taxonomy menu-item-object-category menu-item-has-children menu-item-8769\"><a href=\"http://techgenix.com/ms-exchange/\" data-cat=\"76\">MS Exchange Server</a>\n\t<ul class=\"sub-menu\">\n\t\t<li id=\"menu-item-933386\" class=\"menu-item menu-item-type-taxonomy menu-item-object-category menu-item-933386\"><a href=\"http://techgenix.com/ms-exchange/compliance-policies-archiving/\" data-cat=\"101191\">Compliance, Policies &amp; Archiving</a></li>\n\t\t<li id=\"menu-item-933387\" class=\"menu-item menu-item-type-taxonomy menu-item-object-category menu-item-933387\"><a href=\"http://techgenix.com/ms-exchange/deployment-migration/\" data-cat=\"816\">Deployment &amp; Migration</a></li>\n\t\t<li id=\"menu-item-933388\" class=\"menu-item menu-item-type-taxonomy menu-item-object-category menu-item-933388\"><a href=\"http://techgenix.com/ms-exchange/high-availability-recovery/\" data-cat=\"818\">High Availability &amp; Recovery</a></li>\n\t\t<li id=\"menu-item-933389\" class=\"menu-item menu-item-type-taxonomy menu-item-object-category menu-item-933389\"><a href=\"http://techgenix.com/ms-exchange/management-administration/\" data-cat=\"817\">Management &amp; Administration</a></li>\n\t\t<li id=\"menu-item-933390\" class=\"menu-item menu-item-type-taxonomy menu-item-object-category menu-item-933390\"><a href=\"http://techgenix.com/ms-exchange/mobility-client-access/\" data-cat=\"101192\">Mobility &amp; Client Access</a></li>\n\t\t<li id=\"menu-item-933391\" class=\"menu-item menu-item-type-taxonomy menu-item-object-category menu-item-933391\"><a href=\"http://techgenix.com/ms-exchange/monitoring-operations/\" data-cat=\"101193\">Monitoring &amp; Operations</a></li>\n\t\t<li id=\"menu-item-933392\" class=\"menu-item menu-item-type-taxonomy menu-item-object-category menu-item-933392\"><a href=\"http://techgenix.com/ms-exchange/planning-architecture/\" data-cat=\"101194\">Planning &amp; Architecture</a></li>\n\t\t<li id=\"menu-item-933393\" class=\"menu-item menu-item-type-taxonomy menu-item-object-category menu-item-933393\"><a href=\"http://techgenix.com/ms-exchange/security-message-hygiene/\" data-cat=\"101195\">Security &amp; Message Hygiene</a></li>\n\t\t<li id=\"menu-item-933394\" class=\"menu-item menu-item-type-taxonomy menu-item-object-category menu-item-933394\"><a href=\"http://techgenix.com/ms-exchange/tools/\" data-cat=\"101196\">Tools</a></li>\n\t</ul>\n</li>\n\t<li id=\"menu-item-8771\" class=\"menu-item menu-item-type-taxonomy menu-item-object-category menu-item-has-children menu-item-8771\"><a href=\"http://techgenix.com/networking/\" data-cat=\"97\">Networking</a>\n\t<ul class=\"sub-menu\">\n\t\t<li id=\"menu-item-5272\" class=\"menu-item menu-item-type-taxonomy menu-item-object-category menu-item-5272\"><a href=\"http://techgenix.com/iot/\" data-cat=\"138\">Internet of Things</a></li>\n\t\t<li id=\"menu-item-5611\" class=\"menu-item menu-item-type-taxonomy menu-item-object-category menu-item-5611\"><a href=\"http://techgenix.com/networking/network-troubleshooting/\" data-cat=\"134\">Network Troubleshooting</a></li>\n\t\t<li id=\"menu-item-5610\" class=\"menu-item menu-item-type-taxonomy menu-item-object-category menu-item-5610\"><a href=\"http://techgenix.com/networking/windows-networking/\" data-cat=\"133\">Windows Networking</a></li>\n\t</ul>\n</li>\n\t<li id=\"menu-item-8770\" class=\"menu-item menu-item-type-taxonomy menu-item-object-category menu-item-has-children menu-item-8770\"><a href=\"http://techgenix.com/security/\" data-cat=\"78\">Security</a>\n\t<ul class=\"sub-menu\">\n\t\t<li id=\"menu-item-440255\" class=\"menu-item menu-item-type-taxonomy menu-item-object-category menu-item-440255\"><a href=\"http://techgenix.com/security/hacking-cyberattacks/\" data-cat=\"833\">Hacking &amp; Cyberattacks</a></li>\n\t\t<li id=\"menu-item-440256\" class=\"menu-item menu-item-type-taxonomy menu-item-object-category menu-item-440256\"><a href=\"http://techgenix.com/security/malware/\" data-cat=\"835\">Malware</a></li>\n\t\t<li id=\"menu-item-440257\" class=\"menu-item menu-item-type-taxonomy menu-item-object-category menu-item-440257\"><a href=\"http://techgenix.com/security/compliance-privacy/\" data-cat=\"832\">Compliance &amp; Privacy</a></li>\n\t\t<li id=\"menu-item-1003038\" class=\"menu-item menu-item-type-post_type menu-item-object-post menu-item-1003038\"><a href=\"http://techgenix.com/patch-management/\">Patch Management</a></li>\n\t\t<li id=\"menu-item-5615\" class=\"menu-item menu-item-type-taxonomy menu-item-object-category menu-item-5615\"><a href=\"http://techgenix.com/security/ransomware/\" data-cat=\"143\">Ransomware</a></li>\n\t\t<li id=\"menu-item-5616\" class=\"menu-item menu-item-type-taxonomy menu-item-object-category menu-item-5616\"><a href=\"http://techgenix.com/security/social-engineering/\" data-cat=\"142\">Social Engineering</a></li>\n\t\t<li id=\"menu-item-440258\" class=\"menu-item menu-item-type-taxonomy menu-item-object-category menu-item-440258\"><a href=\"http://techgenix.com/security/vulnerabilities/\" data-cat=\"834\">Vulnerabilities</a></li>\n\t</ul>\n</li>\n\t<li id=\"menu-item-8772\" class=\"menu-item menu-item-type-taxonomy menu-item-object-category menu-item-has-children menu-item-8772\"><a href=\"http://techgenix.com/virtualization/\" data-cat=\"96\">Virtualization</a>\n\t<ul class=\"sub-menu\">\n\t\t<li id=\"menu-item-5609\" class=\"menu-item menu-item-type-taxonomy menu-item-object-category menu-item-5609\"><a href=\"http://techgenix.com/virtualization/citrix/\" data-cat=\"127\">Citrix</a></li>\n\t\t<li id=\"menu-item-5613\" class=\"menu-item menu-item-type-taxonomy menu-item-object-category menu-item-5613\"><a href=\"http://techgenix.com/virtualization/microsoft-hyper-v/\" data-cat=\"131\">Microsoft Hyper-V</a></li>\n\t\t<li id=\"menu-item-936475\" class=\"menu-item menu-item-type-taxonomy menu-item-object-category menu-item-936475\"><a href=\"http://techgenix.com/virtualization/terminal-services/\" data-cat=\"103291\">Terminal Services</a></li>\n\t\t<li id=\"menu-item-5608\" class=\"menu-item menu-item-type-taxonomy menu-item-object-category menu-item-5608\"><a href=\"http://techgenix.com/virtualization/virtualbox/\" data-cat=\"128\">VirtualBox</a></li>\n\t\t<li id=\"menu-item-5614\" class=\"menu-item menu-item-type-taxonomy menu-item-object-category menu-item-5614\"><a href=\"http://techgenix.com/virtualization/vmware/\" data-cat=\"126\">VMware</a></li>\n\t</ul>\n</li>\n\t<li id=\"menu-item-5775\" class=\"menu-item menu-item-type-taxonomy menu-item-object-category menu-item-5775\"><a href=\"http://techgenix.com/servers/windows-server/\" data-cat=\"151\">Windows Server</a></li>\n\t<li id=\"menu-item-440260\" class=\"menu-item menu-item-type-taxonomy menu-item-object-category menu-item-440260\"><a href=\"http://techgenix.com/operating-system/windows-10/\" data-cat=\"837\">Windows 10</a></li>\n</ul>\n</li>\n<li id=\"menu-item-4821\" class=\"catmenu menu-item menu-item-type-taxonomy menu-item-object-category menu-item-4821\"><a href=\"http://techgenix.com/top-tech-news/\" data-cat=\"132\">Tech News</a></li>\n<li id=\"menu-item-5282\" class=\"menu-item menu-item-type-taxonomy menu-item-object-category menu-item-5282\"><a href=\"http://techgenix.com/tutorials/\" data-cat=\"57\">Tutorials</a></li>\n<li id=\"menu-item-933159\" class=\"menu-item menu-item-type-taxonomy menu-item-object-category menu-item-933159\"><a href=\"http://techgenix.com/reviews/\" data-cat=\"815\">Reviews</a></li>\n<li id=\"menu-item-9759\" class=\"menu-item menu-item-type-post_type menu-item-object-page menu-item-has-children menu-item-9759\"><a href=\"http://techgenix.com/newsletters/\">Newsletters</a>\n<ul class=\"sub-menu\">\n\t<li id=\"menu-item-1002994\" class=\"menu-item menu-item-type-taxonomy menu-item-object-tg_simple_newsletter_type menu-item-1002994\"><a href=\"http://techgenix.com/newsletter-category/wservernews/\">WServerNews</a></li>\n\t<li id=\"menu-item-1002993\" class=\"menu-item menu-item-type-taxonomy menu-item-object-tg_simple_newsletter_type menu-item-1002993\"><a href=\"http://techgenix.com/newsletter-category/fititpronews/\">FitITproNews</a></li>\n</ul>\n</li>\n<li id=\"menu-item-997687\" class=\"menu-item menu-item-type-custom menu-item-object-custom menu-item-997687\"><a href=\"http://techgenix.com/podcast/the-t-suite/\">Podcast</a></li>\n<li id=\"menu-item-999391\" class=\"menu-item menu-item-type-custom menu-item-object-custom menu-item-999391\"><a href=\"http://techgenix.com/directory/\">Product Directory</a></li>\n<li id=\"menu-item-1003039\" class=\"menu-item menu-item-type-taxonomy menu-item-object-category menu-item-1003039\"><a href=\"http://techgenix.com/webinars/\" data-cat=\"59\">Webinars</a></li>\n<li id=\"menu-item-4753\" class=\"menu-item menu-item-type-post_type menu-item-object-page menu-item-has-children menu-item-4753\"><a href=\"http://techgenix.com/about-us/\">About</a>\n<ul class=\"sub-menu\">\n\t<li id=\"menu-item-4755\" class=\"menu-item menu-item-type-post_type menu-item-object-page menu-item-4755\"><a href=\"http://techgenix.com/advertising/\">Advertising</a></li>\n\t<li id=\"menu-item-5098\" class=\"menu-item menu-item-type-post_type menu-item-object-page menu-item-5098\"><a href=\"http://techgenix.com/about-us/\">About Us</a></li>\n\t<li id=\"menu-item-4754\" class=\"menu-item menu-item-type-post_type menu-item-object-page menu-item-4754\"><a href=\"http://techgenix.com/contact/\">Contact Us</a></li>\n\t<li id=\"menu-item-4756\" class=\"menu-item menu-item-type-post_type menu-item-object-page menu-item-4756\"><a href=\"http://techgenix.com/our-team/\">Meet The Team</a></li>\n\t<li id=\"menu-item-4759\" class=\"menu-item menu-item-type-custom menu-item-object-custom menu-item-has-children menu-item-4759\"><a href=\"#\">Legal</a>\n\t<ul class=\"sub-menu\">\n\t\t<li id=\"menu-item-4757\" class=\"menu-item menu-item-type-post_type menu-item-object-page menu-item-4757\"><a href=\"http://techgenix.com/privacy-policy/\">Privacy Policy</a></li>\n\t\t<li id=\"menu-item-4758\" class=\"menu-item menu-item-type-post_type menu-item-object-page menu-item-4758\"><a href=\"http://techgenix.com/terms-conditions/\">Terms &amp; Conditions</a></li>\n\t</ul>\n</li>\n</ul>\n</li>\n</ul></div>\t\t\n\t\t<!-- Begin side menu sidebar -->\n\t\t<div class=\"page_content_wrapper\">\n\t\t\t<div class=\"sidebar_wrapper\">\n\t\t        <div class=\"sidebar\">\n\t\t        \n\t\t        \t<div class=\"content\">\n\t\t        \n\t\t        \t\t<ul class=\"sidebar_widget\">\n\t\t        \t\t\t\t        \t\t</ul>\n\t\t        \t\n\t\t        \t</div>\n\t\t    \n\t\t        </div>\n\t\t\t</div>\n\t\t</div>\n\t\t<!-- End side menu sidebar -->\n\t</div>\n\t<!-- End mobile menu -->\n\n\t<!-- Begin template wrapper -->\n\t<div id=\"wrapper\" class=\"ready\" style=\"padding-top: 267px;\"><!-- <span id=\"ezoic-pub-ad-placeholder-150\" class=\"ezoic-adpicker-ad\" data-ezadblocked='true'></span> --><!-- placeholder 150 blocked.  Reason : no sizes -->\n\t\n\t\n<div class=\"header_style_wrapper\">\n\n<div class=\"top_bar\">\n    \n    <!-- Begin logo -->\n    <div id=\"logo_wrapper\">\n    \n\t    <div class=\"standard_wrapper\">\n\t\t    \t\t    <div id=\"logo_normal\" class=\"logo_container\">\n\t\t        <div class=\"logo_align\">\n\t\t\t        <a id=\"custom_logo\" class=\"logo_wrapper default\" href=\"http://techgenix.com/\">\n\t\t\t        \t\t\t\t    \t\t<img src=\"http://techgenix.com/ezoimgfmt/198.58.102.214/tgwordpress/wp-content/uploads/2016/05/techgenixsmall.png?ezimgfmt=rs:181x52/rscb2\" alt=\"\" width=\"182\" height=\"52\" ezimgfmt=\"rs rscb2 src\" class=\" ezlazyloaded\" data-ezsrc=\"http://techgenix.com/ezoimgfmt/198.58.102.214/tgwordpress/wp-content/uploads/2016/05/techgenixsmall.png?ezimgfmt=rs:181x52/rscb2\" ezoid=\"0.8760564853182138\">\n\t\t\t    \t\t\t\t\t        </a>\n\t\t        </div>\n\t\t    </div>\n\t\t    \t\t    <!-- End logo -->\n\t\t    \n\t    \t\t\t<div id=\"top-ads-sidebar\" class=\"ppb_ads pp_ads_global_before_menu\">\n\t\t\t<li id=\"custom_html-9\" class=\"widget_text widget widget_custom_html\"><div class=\"textwidget custom-html-widget\"><!-- Ezoic - TG Top Leaderboard 720x90 - top_of_page -->\n<span id=\"ezoic-pub-ad-placeholder-138\"></span>\n<!-- End Ezoic - TG Top Leaderboard 720x90 - top_of_page --></div></li>\n\t\t\t</div><!-- #top-ads-sidebar -->\n\t\t\t    </div>\n\t</div>\n\n\t<div id=\"menu_wrapper\">\n\t\t\t      <div id=\"nav_wrapper\">\n\t      \t<div class=\"nav_wrapper_inner\">\n\t      \t\t<div id=\"menu_border_wrapper\">\n\t      \t\t\t<div class=\"menu-main-menu-container\"><ul id=\"main_menu\" class=\"nav\"><li class=\"menu-item menu-item-type-taxonomy menu-item-object-category current-post-ancestor current-menu-parent current-post-parent menu-item-has-children arrow menu-item-5101\"><a href=\"http://techgenix.com/articles/\" data-cat=\"56\">Sections</a>\n<ul class=\"sub-menu\">\n\t<li class=\"menu-item menu-item-type-taxonomy menu-item-object-category menu-item-has-children arrow menu-item-5306\"><a href=\"http://techgenix.com/cloud-computing/\" data-cat=\"80\">Cloud Computing</a>\n\t<ul class=\"sub-menu\">\n\t\t<li class=\"menu-item menu-item-type-taxonomy menu-item-object-category menu-item-5617\"><a href=\"http://techgenix.com/cloud-computing/amazon-web-services/\" data-cat=\"95\">Amazon Web Services</a></li>\n\t\t<li class=\"menu-item menu-item-type-taxonomy menu-item-object-category menu-item-925132\"><a href=\"http://techgenix.com/cloud-computing/google-cloud/\" data-cat=\"101716\">Google Cloud</a></li>\n\t\t<li class=\"menu-item menu-item-type-taxonomy menu-item-object-category menu-item-5618\"><a href=\"http://techgenix.com/cloud-computing/hybrid-cloud/\" data-cat=\"130\">Hybrid Cloud</a></li>\n\t\t<li class=\"menu-item menu-item-type-taxonomy menu-item-object-category menu-item-5620\"><a href=\"http://techgenix.com/cloud-computing/microsoft-azure/\" data-cat=\"129\">Microsoft Azure</a></li>\n\t\t<li class=\"menu-item menu-item-type-taxonomy menu-item-object-category menu-item-5619\"><a href=\"http://techgenix.com/cloud-computing/office-365/\" data-cat=\"144\">Office 365</a></li>\n\t</ul>\n</li>\n\t<li class=\"menu-item menu-item-type-taxonomy menu-item-object-category current-post-ancestor current-menu-parent current-post-parent menu-item-933540\"><a href=\"http://techgenix.com/containerization/\" data-cat=\"102566\">Containerization</a></li>\n\t<li class=\"menu-item menu-item-type-taxonomy menu-item-object-category menu-item-has-children arrow menu-item-440253\"><a href=\"http://techgenix.com/data-center/\" data-cat=\"845\">Data Center</a>\n\t<ul class=\"sub-menu\">\n\t\t<li class=\"menu-item menu-item-type-taxonomy menu-item-object-category menu-item-440252\"><a href=\"http://techgenix.com/big-data-machine-learning/\" data-cat=\"849\">Big Data &amp; Machine Learning</a></li>\n\t\t<li class=\"menu-item menu-item-type-taxonomy menu-item-object-category menu-item-997689\"><a href=\"http://techgenix.com/data-center/disaster-recovery/\" data-cat=\"847\">Disaster Recovery</a></li>\n\t\t<li class=\"menu-item menu-item-type-taxonomy menu-item-object-category menu-item-997690\"><a href=\"http://techgenix.com/data-center/infrastructure-management/\" data-cat=\"848\">Infrastructure Management</a></li>\n\t\t<li class=\"menu-item menu-item-type-taxonomy menu-item-object-category menu-item-997691\"><a href=\"http://techgenix.com/data-center/storage/\" data-cat=\"846\">Storage</a></li>\n\t</ul>\n</li>\n\t<li class=\"menu-item menu-item-type-taxonomy menu-item-object-category menu-item-5273\"><a href=\"http://techgenix.com/mobile-technology/\" data-cat=\"139\">Mobile Technology</a></li>\n\t<li class=\"menu-item menu-item-type-taxonomy menu-item-object-category menu-item-has-children arrow menu-item-8769\"><a href=\"http://techgenix.com/ms-exchange/\" data-cat=\"76\">MS Exchange Server</a>\n\t<ul class=\"sub-menu\">\n\t\t<li class=\"menu-item menu-item-type-taxonomy menu-item-object-category menu-item-933386\"><a href=\"http://techgenix.com/ms-exchange/compliance-policies-archiving/\" data-cat=\"101191\">Compliance, Policies &amp; Archiving</a></li>\n\t\t<li class=\"menu-item menu-item-type-taxonomy menu-item-object-category menu-item-933387\"><a href=\"http://techgenix.com/ms-exchange/deployment-migration/\" data-cat=\"816\">Deployment &amp; Migration</a></li>\n\t\t<li class=\"menu-item menu-item-type-taxonomy menu-item-object-category menu-item-933388\"><a href=\"http://techgenix.com/ms-exchange/high-availability-recovery/\" data-cat=\"818\">High Availability &amp; Recovery</a></li>\n\t\t<li class=\"menu-item menu-item-type-taxonomy menu-item-object-category menu-item-933389\"><a href=\"http://techgenix.com/ms-exchange/management-administration/\" data-cat=\"817\">Management &amp; Administration</a></li>\n\t\t<li class=\"menu-item menu-item-type-taxonomy menu-item-object-category menu-item-933390\"><a href=\"http://techgenix.com/ms-exchange/mobility-client-access/\" data-cat=\"101192\">Mobility &amp; Client Access</a></li>\n\t\t<li class=\"menu-item menu-item-type-taxonomy menu-item-object-category menu-item-933391\"><a href=\"http://techgenix.com/ms-exchange/monitoring-operations/\" data-cat=\"101193\">Monitoring &amp; Operations</a></li>\n\t\t<li class=\"menu-item menu-item-type-taxonomy menu-item-object-category menu-item-933392\"><a href=\"http://techgenix.com/ms-exchange/planning-architecture/\" data-cat=\"101194\">Planning &amp; Architecture</a></li>\n\t\t<li class=\"menu-item menu-item-type-taxonomy menu-item-object-category menu-item-933393\"><a href=\"http://techgenix.com/ms-exchange/security-message-hygiene/\" data-cat=\"101195\">Security &amp; Message Hygiene</a></li>\n\t\t<li class=\"menu-item menu-item-type-taxonomy menu-item-object-category menu-item-933394\"><a href=\"http://techgenix.com/ms-exchange/tools/\" data-cat=\"101196\">Tools</a></li>\n\t</ul>\n</li>\n\t<li class=\"menu-item menu-item-type-taxonomy menu-item-object-category menu-item-has-children arrow menu-item-8771\"><a href=\"http://techgenix.com/networking/\" data-cat=\"97\">Networking</a>\n\t<ul class=\"sub-menu\">\n\t\t<li class=\"menu-item menu-item-type-taxonomy menu-item-object-category menu-item-5272\"><a href=\"http://techgenix.com/iot/\" data-cat=\"138\">Internet of Things</a></li>\n\t\t<li class=\"menu-item menu-item-type-taxonomy menu-item-object-category menu-item-5611\"><a href=\"http://techgenix.com/networking/network-troubleshooting/\" data-cat=\"134\">Network Troubleshooting</a></li>\n\t\t<li class=\"menu-item menu-item-type-taxonomy menu-item-object-category menu-item-5610\"><a href=\"http://techgenix.com/networking/windows-networking/\" data-cat=\"133\">Windows Networking</a></li>\n\t</ul>\n</li>\n\t<li class=\"menu-item menu-item-type-taxonomy menu-item-object-category menu-item-has-children arrow menu-item-8770\"><a href=\"http://techgenix.com/security/\" data-cat=\"78\">Security</a>\n\t<ul class=\"sub-menu\">\n\t\t<li class=\"menu-item menu-item-type-taxonomy menu-item-object-category menu-item-440255\"><a href=\"http://techgenix.com/security/hacking-cyberattacks/\" data-cat=\"833\">Hacking &amp; Cyberattacks</a></li>\n\t\t<li class=\"menu-item menu-item-type-taxonomy menu-item-object-category menu-item-440256\"><a href=\"http://techgenix.com/security/malware/\" data-cat=\"835\">Malware</a></li>\n\t\t<li class=\"menu-item menu-item-type-taxonomy menu-item-object-category menu-item-440257\"><a href=\"http://techgenix.com/security/compliance-privacy/\" data-cat=\"832\">Compliance &amp; Privacy</a></li>\n\t\t<li class=\"menu-item menu-item-type-post_type menu-item-object-post menu-item-1003038\"><a href=\"http://techgenix.com/patch-management/\">Patch Management</a></li>\n\t\t<li class=\"menu-item menu-item-type-taxonomy menu-item-object-category menu-item-5615\"><a href=\"http://techgenix.com/security/ransomware/\" data-cat=\"143\">Ransomware</a></li>\n\t\t<li class=\"menu-item menu-item-type-taxonomy menu-item-object-category menu-item-5616\"><a href=\"http://techgenix.com/security/social-engineering/\" data-cat=\"142\">Social Engineering</a></li>\n\t\t<li class=\"menu-item menu-item-type-taxonomy menu-item-object-category menu-item-440258\"><a href=\"http://techgenix.com/security/vulnerabilities/\" data-cat=\"834\">Vulnerabilities</a></li>\n\t</ul>\n</li>\n\t<li class=\"menu-item menu-item-type-taxonomy menu-item-object-category menu-item-has-children arrow menu-item-8772\"><a href=\"http://techgenix.com/virtualization/\" data-cat=\"96\">Virtualization</a>\n\t<ul class=\"sub-menu\">\n\t\t<li class=\"menu-item menu-item-type-taxonomy menu-item-object-category menu-item-5609\"><a href=\"http://techgenix.com/virtualization/citrix/\" data-cat=\"127\">Citrix</a></li>\n\t\t<li class=\"menu-item menu-item-type-taxonomy menu-item-object-category menu-item-5613\"><a href=\"http://techgenix.com/virtualization/microsoft-hyper-v/\" data-cat=\"131\">Microsoft Hyper-V</a></li>\n\t\t<li class=\"menu-item menu-item-type-taxonomy menu-item-object-category menu-item-936475\"><a href=\"http://techgenix.com/virtualization/terminal-services/\" data-cat=\"103291\">Terminal Services</a></li>\n\t\t<li class=\"menu-item menu-item-type-taxonomy menu-item-object-category menu-item-5608\"><a href=\"http://techgenix.com/virtualization/virtualbox/\" data-cat=\"128\">VirtualBox</a></li>\n\t\t<li class=\"menu-item menu-item-type-taxonomy menu-item-object-category menu-item-5614\"><a href=\"http://techgenix.com/virtualization/vmware/\" data-cat=\"126\">VMware</a></li>\n\t</ul>\n</li>\n\t<li class=\"menu-item menu-item-type-taxonomy menu-item-object-category menu-item-5775\"><a href=\"http://techgenix.com/servers/windows-server/\" data-cat=\"151\">Windows Server</a></li>\n\t<li class=\"menu-item menu-item-type-taxonomy menu-item-object-category menu-item-440260\"><a href=\"http://techgenix.com/operating-system/windows-10/\" data-cat=\"837\">Windows 10</a></li>\n</ul>\n</li>\n<li class=\"catmenu menu-item menu-item-type-taxonomy menu-item-object-category menu-item-4821\"><a href=\"http://techgenix.com/top-tech-news/\" data-cat=\"132\">Tech News</a></li>\n<li class=\"menu-item menu-item-type-taxonomy menu-item-object-category menu-item-5282\"><a href=\"http://techgenix.com/tutorials/\" data-cat=\"57\">Tutorials</a></li>\n<li class=\"menu-item menu-item-type-taxonomy menu-item-object-category menu-item-933159\"><a href=\"http://techgenix.com/reviews/\" data-cat=\"815\">Reviews</a></li>\n<li class=\"menu-item menu-item-type-post_type menu-item-object-page menu-item-has-children arrow menu-item-9759\"><a href=\"http://techgenix.com/newsletters/\">Newsletters</a>\n<ul class=\"sub-menu\">\n\t<li class=\"menu-item menu-item-type-taxonomy menu-item-object-tg_simple_newsletter_type menu-item-1002994\"><a href=\"http://techgenix.com/newsletter-category/wservernews/\">WServerNews</a></li>\n\t<li class=\"menu-item menu-item-type-taxonomy menu-item-object-tg_simple_newsletter_type menu-item-1002993\"><a href=\"http://techgenix.com/newsletter-category/fititpronews/\">FitITproNews</a></li>\n</ul>\n</li>\n<li class=\"menu-item menu-item-type-custom menu-item-object-custom menu-item-997687\"><a href=\"http://techgenix.com/podcast/the-t-suite/\">Podcast</a></li>\n<li class=\"menu-item menu-item-type-custom menu-item-object-custom menu-item-999391\"><a href=\"http://techgenix.com/directory/\">Product Directory</a></li>\n<li class=\"menu-item menu-item-type-taxonomy menu-item-object-category menu-item-1003039\"><a href=\"http://techgenix.com/webinars/\" data-cat=\"59\">Webinars</a></li>\n<li class=\"menu-item menu-item-type-post_type menu-item-object-page menu-item-has-children arrow menu-item-4753\"><a href=\"http://techgenix.com/about-us/\">About</a>\n<ul class=\"sub-menu\">\n\t<li class=\"menu-item menu-item-type-post_type menu-item-object-page menu-item-4755\"><a href=\"http://techgenix.com/advertising/\">Advertising</a></li>\n\t<li class=\"menu-item menu-item-type-post_type menu-item-object-page menu-item-5098\"><a href=\"http://techgenix.com/about-us/\">About Us</a></li>\n\t<li class=\"menu-item menu-item-type-post_type menu-item-object-page menu-item-4754\"><a href=\"http://techgenix.com/contact/\">Contact Us</a></li>\n\t<li class=\"menu-item menu-item-type-post_type menu-item-object-page menu-item-4756\"><a href=\"http://techgenix.com/our-team/\">Meet The Team</a></li>\n\t<li class=\"menu-item menu-item-type-custom menu-item-object-custom menu-item-has-children arrow menu-item-4759\"><a href=\"#\">Legal</a>\n\t<ul class=\"sub-menu\">\n\t\t<li class=\"menu-item menu-item-type-post_type menu-item-object-page menu-item-4757\"><a href=\"http://techgenix.com/privacy-policy/\">Privacy Policy</a></li>\n\t\t<li class=\"menu-item menu-item-type-post_type menu-item-object-page menu-item-4758\"><a href=\"http://techgenix.com/terms-conditions/\">Terms &amp; Conditions</a></li>\n\t</ul>\n</li>\n</ul>\n</li>\n</ul></div>\t      \t\t</div>\n\t      \t\t\n\t      \t\t<!-- Begin right corner buttons -->\n\t\t\t\t<div id=\"logo_right_button\">\n\t\t\t\t\t<!-- div class=\"post_share_wrapper\">\n\t\t\t    \t\t<a id=\"page_share\" href=\"javascript:;\"><i class=\"fa fa-share-alt\"></i></a>\n\t\t\t    \t</div -->\n\t\t\t    \t\n\t\t\t    \t\t\t\t    \t\n\t\t\t    \t<!-- Begin search icon -->\n\t\t\t    \t<a href=\"javascript:;\" id=\"search_icon\"><i class=\"fa fa-search\"></i></a>\n\t\t\t    \t<!-- End side menu -->\n\t\t\t\t\n\t\t\t    \t<!-- Begin search icon -->\n\t\t\t    \t<a href=\"javascript:;\" id=\"mobile_nav_icon\"></a>\n\t\t\t    \t<!-- End side menu -->\n\t\t\t    \t\n\t\t\t\t</div>\n\t\t\t\t<!-- End right corner buttons -->\n\t      \t</div>\n\t      </div>\n\t      <!-- End main nav -->\n\t  </div>\n\t  \t</div>\n</div>\n\n<div id=\"page_caption\" class=\"hasbg parallax  \">\n\n\t\t\t<div id=\"bg_regular\" style=\"background-image: url(&quot;http://techgenix.com/tgwordpress/wp-content/uploads/2020/01/open-source-security-tools-Freepik.jpg&quot;);\" data-ezbg=\"http://techgenix.com/tgwordpress/wp-content/uploads/2020/01/open-source-security-tools-Freepik.jpg\" class=\" ezlazyloaded\" ezoid=\"0.23059966494395723\"></div>\n\t\t\n\t<div class=\"page_title_wrapper\">\n\t    <div class=\"standard_wrapper\">\n\t    \t<div class=\"post_info_cat\">\n\t\t\t\t\t\t\t</div>\n\t    \t<h1>Open-source security tools for cloud and container applications</h1><br>\n\t    \t<div class=\"post_detail post_date\">\n\t\t\t    <span class=\"post_info_author\">\n\t\t\t    \t\t\t\t    \t<a href=\"http://techgenix.com/author/twain/\"><span class=\"gravatar\"><img alt=\"\" src=\"http://techgenix.com/ezoimgfmt/1.gravatar.com/avatar/d74c40b3d8a837873c68f0760df7cd1e?s=60&amp;d=mm&amp;r=g&amp;ezimgfmt=rs:25x25/rscb2\" class=\"avatar avatar-60 photo ezlazyloaded\" height=\"60\" width=\"60\" ezimgfmt=\"rs rscb2 src\" data-ezsrc=\"http://techgenix.com/ezoimgfmt/1.gravatar.com/avatar/d74c40b3d8a837873c68f0760df7cd1e?s=60&amp;d=mm&amp;r=g&amp;ezimgfmt=rs:25x25/rscb2\" data-ezsrcset=\"http://1.gravatar.com/avatar/d74c40b3d8a837873c68f0760df7cd1e?s=120&amp;d=mm&amp;r=g 2x\" ezoid=\"0.628846370304647\" srcset=\"http://1.gravatar.com/avatar/d74c40b3d8a837873c68f0760df7cd1e?s=120&amp;d=mm&amp;r=g 2x\"></span>Twain Taylor</a>\n\t\t\t    </span>\n\t\t\t    <span class=\"post_info_date\">\n\t\t\t    \tMarch 18, 2020\t\t\t    </span>\n\t\t\t</div>\n\t\t\t<div class=\"post_detail post_comment\">\n\t\t\t    <div class=\"post_info_comment\">\n\t\t\t    \t<a href=\"http://techgenix.com/open-source-security-tools/#respond\"><i class=\"fa fa-commenting\"></i>0</a>\n\t\t\t    </div>\n\t\t\t    \n\t\t\t    \t\t\t    <div class=\"post_info_view\">\n\t\t\t        <i class=\"fa fa-eye\"></i>3.9K&nbsp;Views\t\t\t    </div>\n\t\t\t    \t\t\t</div>\n\t    </div>\n\t</div>\n\t\n\t</div>\n\n\n<!-- Begin content -->\n<div id=\"page_content_wrapper\" class=\"hasbg \">\n<div class=\"inner\">\n\n\t<!-- Begin main content -->\n\t<div class=\"inner_wrapper\">\n\n\t\t<div class=\"sidebar_content\">\n\t\t\t\t\t\n\t\t\t\t\t\t\n<!-- Begin each blog post -->\n<div id=\"post-1015652\" class=\"post-1015652 post type-post status-publish format-standard has-post-thumbnail category-articles category-containerization tag-alcide tag-anchore-engine tag-clair tag-cloud-security-tools tag-container-applications-security-tools tag-dagda tag-openscap hentry\">\n\n\t<div class=\"post_wrapper\">\n\t    \n\t    <div class=\"post_content_wrapper\">\n\t    \n\t    \t\t\t\t\n\t\t\t<!-- Ezoic - Content Top - Above Social - under_page_title -->\n\t\t\t<span id=\"ezoic-pub-ad-placeholder-104\"></span><span style=\"display:block !important;float:none !important;margin-bottom:10px !important;margin-left:0px !important;margin-right:0px !important;margin-top:1px !important;min-height:250px;min-width:300px;text-align:center !important;\" class=\"ezoic-ad under_page_title adtester-container adtester-container-104\" data-ez-name=\"techgenix_com-under_page_title\"><span id=\"div-gpt-ad-techgenix_com-under_page_title-0\" ezaw=\"300\" ezah=\"250\" style=\"position: relative; z-index: 0; min-height: 250px; min-width: 300px;\" class=\"ezoic-ad ezfound\" data-google-query-id=\"CIDAzrzq_ugCFYgKvQod4GQI5Q\"><div id=\"google_ads_iframe_/40773523/techgenix_com-under_page_title_0__container__\" style=\"border: 0pt none;\"><iframe id=\"google_ads_iframe_/40773523/techgenix_com-under_page_title_0\" title=\"3rd party ad content\" name=\"google_ads_iframe_/40773523/techgenix_com-under_page_title_0\" width=\"728\" height=\"90\" scrolling=\"no\" marginwidth=\"0\" marginheight=\"0\" frameborder=\"0\" srcdoc=\"\" data-google-container-id=\"1\" style=\"border: 0px; vertical-align: bottom;\" data-load-complete=\"true\"></iframe></div></span></span>\n\t\t\t<!-- End Ezoic - Content Top - Above Social - under_page_title -->\n\t\t\t\n\t\t\t<div class=\"social_share_button_wrapper\">\n\t<ul>\n\t\t<li><a class=\"tooltip facebook_share\" title=\"Share On Facebook\" target=\"_blank\" href=\"https://www.facebook.com/sharer/sharer.php?u=http://techgenix.com/open-source-security-tools/\"><i class=\"fa fa-facebook\"></i>Share On Facebook</a></li>\n\t\t<li><a class=\"tooltip twitter_share\" title=\"Share On Twitter\" target=\"_blank\" href=\"https://twitter.com/intent/tweet?original_referer=http://techgenix.com/open-source-security-tools/&amp;text=Open-source security tools for cloud and container applications&amp;url=http://techgenix.com/open-source-security-tools/\"><i class=\"fa fa-twitter\"></i>Tweet It</a></li>\n        <li><a class=\"tooltip facebook_share\" title=\"Share On LinkedIn\" target=\"_blank\" href=\"https://www.linkedin.com/shareArticle?mini=true&amp;url=http://techgenix.com/open-source-security-tools/\"><i class=\"fa fa-linkedin\"></i>Share On LinkedIn</a></li>\n\t</ul>\n</div>\n<br class=\"clear\">\n\t\t\t\n\t\t\t<!-- Ezoic - Content Top - Below Social - under_page_title -->\n\t\t\t<span id=\"ezoic-pub-ad-placeholder-105\"></span>\n\t\t\t<!-- End Ezoic - Content Top - Below Social - under_page_title -->\n\t\t\t\n\t    \t\n\t\t    <div class=\"post_header single\" style=\"display: block;\">\n\t\t\t\t\n\t\t\t\t<div class=\"code-block code-block-9\" style=\"margin: 8px auto; text-align: center; display: block; clear: both;\">\n</div>\n<p>As the use of containers is becoming more popular and streamlined, the security aspects related to containers have also become more critical for businesses. Containerization has particular structural and operational elements that need special attention. The architectural differences like a shared kernel for containers demand a different security approach altogether, in comparison to traditional security approaches. This makes it very important to understand and perform container-specific security scanning at the earlier stages of the build process. To meet these dynamic requirements of the <a href=\"http://techgenix.com/fail-fast-devops/\" target=\"_blank\" rel=\"noopener noreferrer\">DevOps teams</a>, several open-source security tools are available in the market. This article covers some popular open-source security tools your DevOps teams can use to ensure the security of your container environment.</p>\n<h2>Anchore Engine</h2>\n<p><a href=\"https://github.com/anchore/anchore-engine\" target=\"_blank\" rel=\"noopener noreferrer\">Anchore Engine</a> is an open-source security tool created for analyzing and scanning container images for vulnerabilities. This tool is available as a Docker container image that can be run as a standalone installation or within an orchestration platform. It lets DevOps engineers identify, test, and address vulnerabilities in the Docker images they are using to create applications. It also has the OSS foundation for Anchore Enterprise, which provides policy management, a summary dashboard, user management, security and policy evaluation reports, graphical client controls, and other backend modules and features.</p>\n<p>There are multiple methods to get started with Anchore Engine. This tool has a simple and easy install process thanks to the Docker compose file. It implements the backend/serverside component for scanning the images. The scanner can be used in the form of a CLI tool such as an Anchore CLI or a <a href=\"http://techgenix.com/devops-jenkins/\" target=\"_blank\" rel=\"noopener noreferrer\">Jenkins plugin</a>. It can also scan repositories and add any tags in the repository. Once added, it polls the registry regularly and schedules them to be analyzed. Users of this tool can also extend Anchore Engine with plugins that add new queries, policies, and image analysis. It can be accessed directly via a RESTful API or via the Anchore CLI. The latest installation guides and details are available on the <a href=\"https://github.com/anchore/ci-tools\" target=\"_blank\" rel=\"noopener noreferrer\">GitHub</a> page as well as on the support <a href=\"https://anchore.com/engine/\" target=\"_blank\" rel=\"noopener noreferrer\">knowledge base</a>.</p>\n<p><img class=\"ezlazyload aligncenter\" src=\"data:image/svg+xml,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20width%3D%221600%22%20height%3D%221066%22%3E%3C%2Fsvg%3E\" alt=\"\" width=\"1029\" height=\"826\" ezimgfmt=\"rs rscb2 src\" data-ezsrc=\"http://techgenix.com/tgwordpress/wp-content/uploads/2020/01/pasted-image-0-3.jpg\"></p>\n<h2>Falco</h2>\n<p><a href=\"https://github.com/falcosecurity/falco\" target=\"_blank\" rel=\"noopener noreferrer\">Falco</a> is an open-source Kubernetes-aware security auditing tool. It was created by<a href=\"https://sysdig.com/\" target=\"_blank\" rel=\"noopener noreferrer\"> Sysdig</a> and now it is a part of the <a href=\"https://www.cncf.io/\" target=\"_blank\" rel=\"noopener noreferrer\">Cloud Native Computing Foundation</a> (CNCF). This tool provides behavioral monitoring for containers, network, and host activities. Some key features include complete container visibility using a single sensor that allows DevOps to gain insight into container behavior. It can detect malicious or unknown behavior and send alerts to users by logging and notifications.</p>\n<p>Falco can track and analyze the behavior of actions happening inside the container, including Linux System Calls. It can track container-based incidents including shellcode running inside containers, any container running in privileged mode, mounting of any sensitive directory path (like /proc) from the host, unexpected attempts to read sensitive files (like /etc/shadow), or use of any standard system binary for making outbound network connections. Upon detection of any malicious behavior, like the use of specific system calls, particular arguments or properties of the calling process, it can send alerts to admins.</p>\n<h2>Clair</h2>\n<p><img class=\"ezlazyload aligncenter\" src=\"data:image/svg+xml,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20width%3D%22512%22%20height%3D%22307%22%3E%3C%2Fsvg%3E\" alt=\"containers\" width=\"1011\" height=\"863\" ezimgfmt=\"rs rscb2 src\" data-ezsrc=\"http://techgenix.com/tgwordpress/wp-content/uploads/2020/01/unnamed-2.png\"></p>\n<p><a href=\"https://coreos.com/clair/\" target=\"_blank\" rel=\"noopener noreferrer\">Clair</a> is an open-source vulnerability scanner and static analysis tool for container images provided by CoreOS. This tool routinely collects the vulnerability information from multiple sources and stores it in the database. It exposes APIs for clients to perform and invoke scans. Users of this tool can use the Clair API to list their container images, which will create a list of features existing in the image and save them in the database. Also, when updates to vulnerability metadata happen, an alarm/notification can be sent to alert systems that a change has occurred. Several third-party tools can be used with Clair to scan images from a terminal as part of a deploy script. One of the good options is <a href=\"https://github.com/optiopay/klar\" target=\"_blank\" rel=\"noopener noreferrer\">Klar</a>, which can be downloaded from the <a href=\"https://github.com/optiopay/klar/releases/latest\" target=\"_blank\" rel=\"noopener noreferrer\">GitHub page</a>.</p><div class=\"code-block code-block-2\" style=\"margin: 22px 15px 8px 0; float: left;\">\n<!-- Ezoic - VA Middle of Content  - mid_content -->\n<span id=\"ezoic-pub-ad-placeholder-146\"></span><span style=\"display:inline-block;float:none !important;margin-bottom:1px !important;margin-left:0px !important;margin-right:0px !important;margin-top:1px !important;min-height:270px;min-width:300px;\" class=\"ezoic-ad mid_content adtester-container adtester-container-146\" data-ez-name=\"techgenix_com-mid_content\"><span id=\"div-gpt-ad-techgenix_com-mid_content-0\" ezaw=\"300\" ezah=\"250\" style=\"position:relative;z-index:0;display:inline-block;min-height:250px;min-width:300px;\" class=\"ezoic-ad ezfound\"><script data-ezscrex=\"false\" data-cfasync=\"false\" type=\"text/javascript\" style=\"display:none;\">eval(ez_write_tag([[300,250],'techgenix_com-mid_content','ezslot_2',146,'0','0']));</script><div id=\"google_ads_iframe_/40773523/techgenix_com-mid_content_0__container__\" style=\"border: 0pt none; width: 300px; height: 250px;\"></div></span></span>\n<!-- End Ezoic - VA Middle of Content  - mid_content --></div>\n\n<p>This tool’s installation details are available at<a href=\"https://github.com/coreos/clair/blob/master/Documentation/running-clair.md\" target=\"_blank\" rel=\"noopener noreferrer\"> GitHub</a>, and it can be run as a container with Docker. It also comes with a<a href=\"https://github.com/coreos/clair/blob/master/Documentation/running-clair.md#docker-compose\" target=\"_blank\" rel=\"noopener noreferrer\"> Docker</a> Compose file and a<a href=\"https://github.com/coreos/clair/blob/master/Documentation/running-clair.md#kubernetes-helm\" target=\"_blank\" rel=\"noopener noreferrer\"> Helm Chart</a> to make the installation easier, or it can be<a href=\"https://github.com/optiopay/klar#installation-from-source-code\" target=\"_blank\" rel=\"noopener noreferrer\"> compiled from the source</a>. The goal behind the Clair project is to facilitate a transparent view of the security of the container-based infrastructure. So, the project was named after the French word, which has English meaning of bright, clear, and transparent.</p>\n<h2>Dagda</h2>\n<p><a href=\"https://github.com/eliasgranderubio/dagda\" target=\"_blank\" rel=\"noopener noreferrer\">Dagda </a>is an open-source tool, which is used to performs static analysis of known vulnerabilities, malware, viruses, Trojans, and other malicious threats in Docker images or containers. It can be used to monitor the Docker daemon and running Docker containers for finding out irregular or uncommon activities. This tool supports several Linux base images such as Red Hat, CentOS, Fedora, Debian, Ubuntu, OpenSUSE, and Alpine.</p>\n<p>Dagda also comes with a Docker Compose file as well, which makes it easy to evaluate. Even though Dagda supports the monitoring of containers, it must be integrated with<a href=\"https://sysdig.com/opensource/falco/\" target=\"_blank\" rel=\"noopener noreferrer\"> Sysdig Falco</a> (an open-source cloud-native runtime security project). It does not support scanning of registries or repositories, which makes it a more fitting solution for on-demand scans than scheduled registry scans. After installation, vulnerabilities and known exploits database are imported and saved into a MongoDB. Then it collects details about the software installed into a Docker image to verify that each product and its version is free of vulnerabilities against the previously stored details in the MongoDB. Also, this tool uses ClamAV as an antivirus engine for identifying Trojans, malware, viruses, and other malicious threats included within the Docker containers/images. Primary target users for this tool are system administrators, developers, and security professionals. The Docker Compose file and related installation details are available in Dagda’s<a href=\"https://github.com/eliasgranderubio/dagda/\" target=\"_blank\" rel=\"noopener noreferrer\"> GitHub repository</a>.</p>\n<div id=\"attachment_1006446\" style=\"width: 1034px\" class=\"wp-caption aligncenter\"><img aria-describedby=\"caption-attachment-1006446\" class=\"ezlazyload size-large wp-image-1006446\" src=\"data:image/svg+xml,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20width%3D%221024%22%20height%3D%22724%22%3E%3C%2Fsvg%3E\" alt=\"\" width=\"1024\" height=\"724\" ezimgfmt=\"rs rscb2 src\" data-ezsrc=\"http://techgenix.com/tgwordpress/wp-content/uploads/2019/09/cloud-security-shutterstock_213317992-1024x724.jpg\"><p id=\"caption-attachment-1006446\" class=\"wp-caption-text\">Shutterstock</p></div>\n<h2>OpenSCAP</h2>\n<p><a href=\"http://www.open-scap.org/\" target=\"_blank\" rel=\"noopener noreferrer\">OpenSCAP</a> is a command-line auditing tool that enables its users to scan, load, edit, validate, and export SCAP documents. SCAP (<a href=\"https://csrc.nist.gov/projects/security-content-automation-protocol\" target=\"_blank\" rel=\"noopener noreferrer\">Security Content Automation Protocol</a>) is a compliance checking solution for enterprise-level Linux infrastructure, which is maintained by the<a href=\"http://www.nist.gov/\" target=\"_blank\" rel=\"noopener noreferrer\"> NIST</a>. It uses the Extensible Configuration Checklist Description Format (XCCDF), a usual way of showing checklist content and outlines security checklists.</p>\n<p>OpenSCAP provides a set of tools for compliance management and scanning, which can scan a container image. With the help of tools like <a href=\"https://github.com/OpenSCAP/container-compliance/blob/master/oscap-docker\" target=\"_blank\" rel=\"noopener noreferrer\">oscap-docker</a>, it can also help users scan for compliance like <a href=\"https://csrc.nist.gov/projects/security-content-automation-protocol/specifications/xccdf/\" target=\"_blank\" rel=\"noopener noreferrer\">xccdf</a> (Extensible Configuration Checklist Description Format). This package also has several additional tools/components such as OpenSCAP Base (to perform configuration and vulnerability scans), OpenSCAP Daemon (a service running in the background), SCAP Workbench (a graphical utility that offers an easy way to perform common oscap tasks) and SCAPtimony (middleware that stores SCAP results for user’s infrastructure). The detailed user manual guide of OpenSCAP can be found on the <a href=\"https://github.com/OpenSCAP/openscap/blob/maint-1.3/docs/manual/manual.adoc\" target=\"_blank\" rel=\"noopener noreferrer\">user manual</a> page. Also, the compilation, testing and debugging related information is available at <a href=\"https://github.com/OpenSCAP/openscap/blob/maint-1.3/docs/developer/developer.adoc\" target=\"_blank\" rel=\"noopener noreferrer\">OpenSCAP Developer Manual</a>.</p><div class=\"code-block code-block-7\" style=\"margin: 22px 0px 8px 0; float: left;\">\n<!-- Ezoic - Content Long - long_content -->\n<span id=\"ezoic-pub-ad-placeholder-107\"></span><span style=\"display:inline-block;float:none !important;margin-bottom:0 !important;margin-left:0px !important;margin-right:15px !important;margin-top:0 !important;min-height:400px;min-width:580px;\" class=\"ezoic-ad long_content adtester-container adtester-container-107\" data-ez-name=\"techgenix_com-long_content\"><span id=\"div-gpt-ad-techgenix_com-long_content-0\" ezaw=\"580\" ezah=\"400\" style=\"position:relative;z-index:0;display:inline-block;min-height:400px;min-width:580px;\" class=\"ezoic-ad ezfound\"><script data-ezscrex=\"false\" data-cfasync=\"false\" type=\"text/javascript\" style=\"display:none;\">eval(ez_write_tag([[580,400],'techgenix_com-long_content','ezslot_1',107,'0','0']));</script><div id=\"google_ads_iframe_/40773523/techgenix_com-long_content_0__container__\" style=\"border: 0pt none; width: 580px; height: 400px;\"></div></span></span>\n<!-- End Ezoic - Content Long - long_content --></div>\n\n<h2>Pick the right open-source security tools for you</h2>\n<p>Open-source security tools play an important role in securing your container-based infrastructure. Tools such as Anchore can be used for strong governance capabilities, while on the other hand, Dagda can be used to perform static analysis of known vulnerabilities. Two other tools, OpenSCAP and Clair, also provide good capabilities for vulnerability scanning and compliance management. So, depending upon your business requirements and priorities, you can select the right tool to secure your container investments.</p>\n<p><em>Featured image: <a href=\"https://www.freepik.com/free-photos-vectors/background\" target=\"_blank\" rel=\"noopener noreferrer\">Freepik / rawpixel.com</a></em></p>\n<div class=\"post-views post-1015652 entry-meta\">\n\t\t\t<span class=\"post-views-icon dashicons dashicons-chart-bar\"></span>\n\t\t\t<span class=\"post-views-label\">Post Views: </span>\n\t\t\t<span class=\"post-views-count\">3,922</span>\n\t\t\t</div><div class=\"code-block code-block-10\" style=\"margin: 8px auto; text-align: center; display: block; clear: both;\">\n</div>\n\t\t\t\t\n\t\t\t\t<div class=\"post_share_center\">\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\n\t\t\t\t<!-- Post read event -->\n\t\t\t\t<div id=\"full_post_read\" pid=\"1015652\" style=\"height:1px\"></div>\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t<!-- Series links -->\n\t\t\t\t\t\t\t\t<!-- Series links END -->\n\n\t\t\t\t\t\t\t\t\t<div id=\"featured-links\" class=\"pp_ads_single_before_related\">\n\t\t\t\t\t\t\t\t\t\t</div><!-- #featured-links -->\n\t\t\t\t\t\t\t\t\n\t\t\t\t<hr>\n\t\t\t\t\n\t\t\t\t<!-- Ezoic - Content Bottom - Below Featured Links - bottom_of_page -->\n\t\t\t\t<span id=\"ezoic-pub-ad-placeholder-109\"></span>\n\t\t\t\t<!-- End Ezoic - Content Bottom - Below Featured Links - bottom_of_page -->\n\t\t\t\t\n\t\t\t\t\t\t\t</div>\n\n\t\t    \t\t\t    <div class=\"post_excerpt post_tag\">\n\t\t\t    \t<i class=\"fa fa-tags\"></i>\n\t\t\t    \t<a href=\"http://techgenix.com/tag/alcide/\" rel=\"tag\">alcide</a><a href=\"http://techgenix.com/tag/anchore-engine/\" rel=\"tag\">anchore engine</a><a href=\"http://techgenix.com/tag/clair/\" rel=\"tag\">clair</a><a href=\"http://techgenix.com/tag/cloud-security-tools/\" rel=\"tag\">cloud security tools</a><a href=\"http://techgenix.com/tag/container-applications-security-tools/\" rel=\"tag\">container applications security tools</a><a href=\"http://techgenix.com/tag/dagda/\" rel=\"tag\">dagda</a><a href=\"http://techgenix.com/tag/openscap/\" rel=\"tag\">openSCAP</a><br>\t\t\t    </div>\n\t\t\t\t\t\t<br class=\"clear\"><br>\n\t\t\t\n\t\t\t<!-- Ezoic - Content Bottom - Below Tags - bottom_of_page -->\n\t\t\t<span id=\"ezoic-pub-ad-placeholder-110\"></span><span style=\"display:block !important;float:none !important;margin-bottom:2px !important;margin-left:0px !important;margin-right:0px !important;margin-top:2px !important;min-height:110px;min-width:250px;text-align:center !important;\" class=\"ezoic-ad bottom_of_page adtester-container adtester-container-110\" data-ez-name=\"techgenix_com-bottom_of_page\"><span id=\"div-gpt-ad-techgenix_com-bottom_of_page-0\" ezaw=\"250\" ezah=\"250\" style=\"position: relative; z-index: 0; min-height: 250px; min-width: 250px;\" class=\"ezoic-ad ezoic-adl ezfound\" data-google-query-id=\"CN_pxb3q_ugCFQ-BvQodFswDlw\"><div id=\"google_ads_iframe_/40773523/techgenix_com-bottom_of_page_0__container__\" style=\"border: 0pt none;\"><iframe id=\"google_ads_iframe_/40773523/techgenix_com-bottom_of_page_0\" title=\"3rd party ad content\" name=\"google_ads_iframe_/40773523/techgenix_com-bottom_of_page_0\" width=\"300\" height=\"250\" scrolling=\"no\" marginwidth=\"0\" marginheight=\"0\" frameborder=\"0\" srcdoc=\"\" data-google-container-id=\"5\" style=\"border: 0px; vertical-align: bottom;\" data-load-complete=\"true\"></iframe></div></span></span>\n\t\t\t<!-- End Ezoic - Content Bottom - Below Tags - bottom_of_page -->\n\n\t\t\t<p id=\"breadcrumbs\" class=\"post-breadcrumbs\"><span><span><a href=\"http://techgenix.com/\">Home</a> » <span><a href=\"http://techgenix.com/articles/\">Articles</a> » <span class=\"breadcrumb_last\" aria-current=\"page\">Open-source security tools for cloud and container applications</span></span></span></span></p>\t\t\t\n\t\t\t<div id=\"about_the_author\">\n    <div class=\"gravatar\"><img alt=\"\" src=\"data:image/svg+xml,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20width%3D%22200%22%20height%3D%22200%22%3E%3C%2Fsvg%3E\" class=\"ezlazyload avatar avatar-200 photo\" height=\"200\" width=\"200\" ezimgfmt=\"rs rscb2 src\" data-ezsrc=\"http://techgenix.com/ezoimgfmt/1.gravatar.com/avatar/d74c40b3d8a837873c68f0760df7cd1e?s=200&amp;d=mm&amp;r=g\" data-ezsrcset=\"http://1.gravatar.com/avatar/d74c40b3d8a837873c68f0760df7cd1e?s=400&amp;d=mm&amp;r=g 2x\"></div>\n    <div class=\"author_detail\">\n     \t<div class=\"author_content\">\n     \t\t<div class=\"author_label\">Author</div>\n     \t\t<h4>Twain Taylor</h4>\n     \t\t<p>My interests lie in DevOps, IoT, and cloud applications. I began my career in tech B2B marketing at Google India, after which I headed marketing for multiple startups. Today, I consult with companies in The Valley on their content marketing initiatives, and write for tech journals.</p>     \t\t\n\t\t \t<ul class=\"author_social\">\n\t     \t\t\t\t    \t\t\t    \t\t\t    \t\t\t    \t\t\t \t</ul>\n     \t</div>\n    </div>\n    <br class=\"clear\">\n</div>\n\t\t\t\n\t\t\t<!-- Ezoic - TG Bottom 300x250 - bottom_of_page -->\n\t\t\t<span id=\"ezoic-pub-ad-placeholder-142\"></span>\n\t\t\t<!-- End Ezoic - TG Bottom 300x250 - bottom_of_page -->\n\n\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t    </div>\n\t    \n\t</div>\n\n</div>\n<!-- End each blog post -->\n\n\n<div class=\"fullwidth_comment_wrapper sidebar\">\n\t<h5 class=\"single_subtitle\">Leave A Reply</h5><br class=\"clear\">\n  \n\n\n\n\n \n\n\t<div id=\"respond\" class=\"comment-respond\">\n\t\t<h3 id=\"reply-title\" class=\"comment-reply-title\">Leave a Reply <small><a rel=\"nofollow\" id=\"cancel-comment-reply-link\" href=\"/open-source-security-tools/#respond\" style=\"display:none;\">Cancel reply</a></small></h3><form action=\"http://techgenix.com/tgwordpress/wp-comments-post.php\" method=\"post\" id=\"commentform\" class=\"comment-form\"><p class=\"comment-notes\"><span id=\"email-notes\">Your email address will not be published.</span> Required fields are marked <span class=\"required\">*</span></p><p class=\"comment-form-comment\"><label for=\"comment\">Comment</label> <textarea id=\"comment\" name=\"comment\" cols=\"45\" rows=\"8\" maxlength=\"65525\" required=\"required\"></textarea></p><p class=\"comment-form-author\"><label for=\"author\">Name <span class=\"required\">*</span></label> <input placeholder=\"Name*\" id=\"author\" name=\"author\" type=\"text\" value=\"\" size=\"30\" maxlength=\"245\" required=\"required\"></p>\n<p class=\"comment-form-email\"><label for=\"email\">Email <span class=\"required\">*</span></label> <input type=\"email\" placeholder=\"Email*\" id=\"email\" name=\"email\" value=\"\" size=\"30\" maxlength=\"100\" aria-describedby=\"email-notes\" required=\"required\"></p>\n\n<p class=\"form-submit\"><input name=\"submit\" type=\"submit\" id=\"submit\" class=\"submit\" value=\"Post Comment\"> <input type=\"hidden\" name=\"comment_post_ID\" value=\"1015652\" id=\"comment_post_ID\">\n<input type=\"hidden\" name=\"comment_parent\" id=\"comment_parent\" value=\"0\">\n</p><p style=\"display: none;\"><input type=\"hidden\" id=\"akismet_comment_nonce\" name=\"akismet_comment_nonce\" value=\"5037c9cbbd\"></p><p style=\"display: none;\"></p><input type=\"hidden\" id=\"ak_js\" name=\"ak_js\" value=\"1587654671345\"></form>\t</div><!-- #respond -->\n\t\t\t\t\n </div>\n\n<!-- Ezoic - Content Bottom - Below Comments - bottom_of_page -->\n<span id=\"ezoic-pub-ad-placeholder-112\"></span><!-- placeholder 112 blocked.  Reason : inactive -->\n<!-- End Ezoic - Content Bottom - Below Comments - bottom_of_page -->\n\n\t\t\t\t\t\t\n    \t</div>\n\n    \t\t<div class=\"sidebar_wrapper\">\n    \t\t\n    \t\t\t<div class=\"sidebar_top\"></div>\n    \t\t\n    \t\t\t<div class=\"sidebar\">\n    \t\t\t\n    \t\t\t\t<div class=\"content\">\n\n    \t\t\t\t\t\t\t    \t    \t\t<ul class=\"sidebar_widget\">\n\t\t    \t    \t\t<li id=\"text-49\" class=\"widget widget_text\">\t\t\t<div class=\"textwidget\"><h2 class=\"widgettitle\"><span>Featured Product</span></h2>\n<div id=\"ad_pos_tg-300x100-featured-product\" class=\"ad_pos_tg-300x100-featured-product TG-300x100-Featured-Product dfp_ad_pos ezfound\" data-google-query-id=\"COLr0Lzq_ugCFQ5fvQodgRUEcg\">\n\n<div id=\"google_ads_iframe_/40773523/TG-300x100-Featured-Product_0__container__\" style=\"border: 0pt none;\"><iframe id=\"google_ads_iframe_/40773523/TG-300x100-Featured-Product_0\" title=\"3rd party ad content\" name=\"google_ads_iframe_/40773523/TG-300x100-Featured-Product_0\" width=\"300\" height=\"100\" scrolling=\"no\" marginwidth=\"0\" marginheight=\"0\" frameborder=\"0\" srcdoc=\"\" style=\"border: 0px; vertical-align: bottom;\" data-google-container-id=\"2\" data-load-complete=\"true\"></iframe></div></div></div>\n\t\t</li>\n<li id=\"custom_html-3\" class=\"widget_text widget widget_custom_html\"><div class=\"textwidget custom-html-widget\"><style>\n.sidebar-optin {\n\tmax-width: 400px;\n\tmargin-left: auto;\n\tmargin-right: auto;\n\tbackground-color: #f2f2f2;\n\tborder-radius: 5px;\n\ttext-align: center;\n}\n.sidebar-optin-title {\n\tfont-family: \"Lato\",Helvetica,Arial,sans-serif;\n\tfont-size: 27px;\n\tfont-weight: 700;\n\tline-height: 1em;\n\tpadding-bottom: 20px !important;\n}\n.sidebar-optin-desc {\n\tfont-family: \"Lato\",Helvetica,Arial,sans-serif;\n\tfont-size: 18px;\n\ttext-align: center;\n\tline-height: 1.5em;\n\tpadding: 20px;\n}\n.sidebar-optin-input-field {\n\tfont-size: 15px !important;\n\tline-height: 19px !important;\n\twidth: 100% !important;\n\tmax-width: 350px !important;\n\theight: 43px !important;\n\t-webkit-appearance: none !important;\n\tbackground: rgb(255,255,255) !important;\n\tborder: 1px solid rgb(223,223,223) !important;\n\tborder-radius: 4px !important;\n\tpadding: 10px !important;\n\tfont-family: Open Sans !important;\n\tmargin-top: 5px !important;\n\tmargin-bottom: 5px !important;\n\t-webkit-box-sizing: border-box !important;\n\t-moz-box-sizing: border-box !important;\n\tbox-sizing: border-box !important;\n}\n.sidebar-optin-subscribe-button {\n\tbackground: #ff5036 !important;\n\tborder-color: #ff5036 !important;\n\tmax-width: 350px;\n\tborder-radius: 4px !important;\n\tmargin-top: 5px;\n\twidth: 100%;\n}\n.consent-checkbox {\n\tmax-width: 350px !important; \n\tmargin:auto !important;\n\tpadding-top: 5px !important;\n\tpadding-bottom: 5px !important;\n}\n.consent-checkbox label {\n\tfont-family: \"Lato\",Helvetica,Arial,sans-serif !important;\n\tfont-size: 12px !important;\n\ttext-align: left !important;\n\tline-height: 1.5em !important;\n\tdisplay: block !important;\n\tfloat: left !important;\n\tpadding-right: 10px !important;\n\tpadding-left: 22px !important;\n\ttext-indent: -22px !important;\n\ttext-transform: none;\n\tletter-spacing: normal;\n\tfont-weight: normal;\n}\n.consent-checkbox input {\n\tvertical-align: middle !important;\n}\n.consent-checkbox span {\n\tvertical-align: middle !important;\n}\n</style>\n<div class=\"sidebar-optin\">\n<img src=\"http://techgenix.com/tgwordpress/wp-content/uploads/2018/03/email_icon.png?ezimgfmt=rs:120x120/rscb2\" alt=\"\" ezimgfmt=\"rs rscb2 src\" class=\" ezlazyloaded\" data-ezsrc=\"http://techgenix.com/tgwordpress/wp-content/uploads/2018/03/email_icon.png?ezimgfmt=rs:120x120/rscb2\" ezoid=\"0.937684664363962\">\n<p class=\"sidebar-optin-title\">Join Our Newsletter</p>\n<p class=\"sidebar-optin-desc\">Learn about the latest security threats, system optimization tricks, and the hottest new technologies in the industry.<br><br>\n<strong>Over 1,000,000 fellow IT Pros are already on-board, don't be left out!</strong></p>\n<form action=\"http://www.elabs12.com/functions/mailing_list.html\" method=\"post\" name=\"UPTml30713\" id=\"sidebar-optin\">\n    <div style=\"display: none;\"> \n\t\t<input type=\"hidden\" name=\"mlid\" value=\"30713\"> \n\t\t<input type=\"hidden\" name=\"siteid\" value=\"2012001135\"> \n\t\t<input type=\"hidden\" name=\"tagtype\" value=\"q2\"> \n\t\t<input type=\"hidden\" name=\"demographics\" value=\"-1,47758,47760,47756,48091,48906, 86076\"> \n\t\t<input type=\"hidden\" name=\"redirection\" id=\"current-tg-url\" value=\"http://techgenix.com/open-source-security-tools/\"> \n\t\t<input type=\"hidden\" name=\"uredirection\" value=\"\"> \n\t\t<input type=\"hidden\" name=\"welcome\" value=\"on\"> \n\t\t<input type=\"hidden\" name=\"double_optin\" value=\"\"> \n\t\t<input type=\"hidden\" name=\"append\" value=\"\">        \n\t\t<input type=\"hidden\" name=\"update\" value=\"\"> \n\t\t<input type=\"hidden\" name=\"activity\" value=\"submit\"> \n\t\t<input type=\"hidden\" id=\"showpopup\" value=\"\" name=\"showpopup\"> \n\t\t<input type=\"checkbox\" name=\"val_47756\" checked=\"\" style=\"display: none;\"> \n\t\t<input type=\"checkbox\" name=\"val_47758\" checked=\"\" style=\"display: none;\"> \n\t\t<input type=\"checkbox\" name=\"val_48091\" checked=\"\" style=\"display: none;\"> \n\t\t<input type=\"checkbox\" name=\"val_48906\" checked=\"\" style=\"display: none;\"> \n\t\t<input type=\"checkbox\" name=\"val_47760\" checked=\"\" style=\"display: none;\">        \n\t</div> \n\t<div style=\"display: block;\">\n\t\t<input type=\"text\" name=\"email\" value=\"\" class=\"sidebar-optin-input-field\" placeholder=\"Email address\" required=\"\"> \n\t</div>\n\t<div class=\"consent-checkbox\">\n\t\t<label for=\"consent\">\n\t\t\t<input type=\"checkbox\" name=\"val_86076\" id=\"consent\" required=\"\">\n\t\t\t<span>I understand that by submitting this form my personal information is subject to the <a href=\"http://techgenix.com/privacy-policy/\" target=\"_blank\" style=\"text-decoration: underline\" rel=\"noopener noreferrer\">TechGenix Privacy Policy</a>.</span>\n\t\t</label>\n\t</div>\n\t<div style=\"display: block;\">\n\t\t<input type=\"submit\" value=\"SUBSCRIBE\" class=\"sidebar-optin-subscribe-button\"> \n\t</div>\n</form>\n<script type=\"text/javascript\">\n\tdocument.getElementById('current-tg-url').value = window.location.href;\n</script>\n<div style=\"height:30px\"></div>\n</div></div></li>\n<li id=\"custom_html-25\" class=\"widget_text widget widget_custom_html\"><div class=\"textwidget custom-html-widget\"><!-- Ezoic - TG Middle Sidebar 300x250 - sidebar_middle -->\n<span id=\"ezoic-pub-ad-placeholder-140\"></span><span style=\"display:inline-block;float:none !important;margin-bottom:2px !important;margin-left:0px !important;margin-right:0px !important;margin-top:2px !important;min-height:620px;min-width:300px;\" class=\"ezoic-ad sidebar_middle adtester-container adtester-container-140\" data-ez-name=\"techgenix_com-sidebar_middle\"><span id=\"div-gpt-ad-techgenix_com-sidebar_middle-0\" ezaw=\"300\" ezah=\"600\" style=\"position: relative; z-index: 0; min-height: 600px; min-width: 300px;\" class=\"ezoic-ad ezfound\" data-google-query-id=\"CKHg1Lzq_ugCFebKfAodhIwHZQ\"><div id=\"google_ads_iframe_/40773523/techgenix_com-sidebar_middle_0__container__\" style=\"border: 0pt none;\"><iframe id=\"google_ads_iframe_/40773523/techgenix_com-sidebar_middle_0\" title=\"3rd party ad content\" name=\"google_ads_iframe_/40773523/techgenix_com-sidebar_middle_0\" width=\"300\" height=\"600\" scrolling=\"no\" marginwidth=\"0\" marginheight=\"0\" frameborder=\"0\" srcdoc=\"\" data-google-container-id=\"3\" style=\"border: 0px; vertical-align: bottom;\" data-load-complete=\"true\"></iframe></div></span><span style=\"width:300px;display:block;height:14px;margin:auto\" class=\"reportline\"><span style=\"text-align:center;font-size: smaller;float:left;line-height:normal;\"><a href=\"https://www.ezoic.com/what-is-ezoic/\" target=\"_blank\" rel=\"noopener noreferrer nofollow\" style=\"cursor:pointer\"><img src=\"data:image/svg+xml,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20width%3D%2287%22%20height%3D%2218%22%3E%3C%2Fsvg%3E\" style=\"height:12px !important; padding:2px !important; border:0px !important; cursor:pointer !important; width: 58px !important; margin:0 !important; box-sizing: content-box !important;\" ezimgfmt=\"rs rscb2 src\" class=\"ezlazyload\" data-ezsrc=\"https://techgenix.com/ezoimgfmt/go.ezoic.net/utilcave_com/img/ezoic.png\"></a></span><span class=\"ez-report-ad-button\" name=\"?pageview_id=d4058a77-ffd7-4b7c-7871-87b400187ca7&amp;ad_position_id=140&amp;impression_group_id=techgenix_com-sidebar_middle/2020-04-23/887635&amp;ad_size=300x600&amp;domain_id=75594&amp;url=http://techgenix.com/open-source-security-tools/\" style=\"cursor: pointer!important; font-size:12px !important;color: #a5a5a5 ;float:right;text-decoration:none !important;font-family:arial !important;line-height:normal;\">report this ad</span></span></span>\n<!-- End Ezoic - TG Middle Sidebar 300x250 - sidebar_middle --></div></li>\n<li id=\"soundcloud_is_gold_widget-3\" class=\"widget widget_soundcloud_is_gold_widget\"><h2 class=\"widgettitle\"><span>Latest Podcast</span></h2>\n<div class=\"soundcloudIsGold \" id=\"soundcloud-765796846\"><iframe width=\"100%\" height=\"166px\" scrolling=\"no\" frameborder=\"no\" src=\"https://w.soundcloud.com/player/?url=https%3A%2F%2Fapi.soundcloud.com%2Ftracks%2F765796846&amp;auto_play=false&amp;show_artwork=false&amp;color=ff7700&amp;visual=false&amp;show_comments=false\"></iframe></div></li>\n<li id=\"custom_html-30\" class=\"widget_text widget widget_custom_html\"><div class=\"textwidget custom-html-widget\"><!-- Ezoic - TG Bottom Sidebar 300x600 - sidebar_bottom -->\n<span id=\"ezoic-pub-ad-placeholder-141\"></span><span style=\"display:inline-block;float:none;margin-bottom:2px !important;margin-left:0px !important;margin-right:0px !important;margin-top:2px !important;min-height:620px;min-width:160px;\" class=\"ezoic-ad sidebar_bottom adtester-container adtester-container-141\" data-ez-name=\"techgenix_com-sidebar_bottom\"><span id=\"div-gpt-ad-techgenix_com-sidebar_bottom-0\" ezaw=\"160\" ezah=\"600\" style=\"position: relative; z-index: 0; min-height: 600px; min-width: 160px;\" class=\"ezoic-ad ezfound\" data-google-query-id=\"CIjEjsDq_ugCFYsAXAod5rYNwQ\"><div id=\"google_ads_iframe_/40773523/techgenix_com-sidebar_bottom_0__container__\" style=\"border: 0pt none; width: 160px; height: 600px;\"></div></span><span style=\"width:160px;display:block;height:14px;margin:auto\" class=\"reportline\"><span style=\"text-align:center;font-size: smaller;float:left;line-height:normal;\"><a href=\"https://www.ezoic.com/what-is-ezoic/\" target=\"_blank\" rel=\"noopener noreferrer nofollow\" style=\"cursor:pointer\"><img src=\"data:image/svg+xml,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20width%3D%2287%22%20height%3D%2218%22%3E%3C%2Fsvg%3E\" style=\"height:12px !important; padding:2px !important; border:0px !important; cursor:pointer !important; width: 58px !important; margin:0 !important; box-sizing: content-box !important;\" ezimgfmt=\"rs rscb2 src\" class=\"ezlazyload\" data-ezsrc=\"https://techgenix.com/ezoimgfmt/go.ezoic.net/utilcave_com/img/ezoic.png\"></a></span><span class=\"ez-report-ad-button\" name=\"?pageview_id=d4058a77-ffd7-4b7c-7871-87b400187ca7&amp;ad_position_id=141&amp;impression_group_id=techgenix_com-sidebar_bottom/2020-04-23/876634&amp;ad_size=160x600&amp;domain_id=75594&amp;url=http://techgenix.com/open-source-security-tools/\" style=\"cursor: pointer!important; font-size:12px !important;color: #a5a5a5 ;float:right;text-decoration:none !important;font-family:arial !important;line-height:normal;\">report this ad</span></span></span>\n<!-- End Ezoic - TG Bottom Sidebar 300x600 - sidebar_bottom --></div></li>\n<li id=\"grand_news_social_profiles_posts-5\" class=\"widget Grand_News_Social_Profiles_Posts\"><h2 class=\"widgettitle\"><span>Follow Us</span></h2><div class=\"textwidget\"><div class=\"social_wrapper shortcode light small\"><ul><li class=\"facebook\"><a target=\"_blank\" title=\"Facebook\" href=\"https://www.facebook.com/techgenix\"><i class=\"fa fa-facebook\"></i></a></li><li class=\"twitter\"><a target=\"_blank\" title=\"Twitter\" href=\"https://twitter.com/techgenix\"><i class=\"fa fa-twitter\"></i></a></li></ul></div></div></li>\n\t\t    \t    \t\t</ul>\n\t\t    \t    \t    \t\t\t\t\n    \t\t\t\t</div>\n    \t\t\n    \t\t\t</div>\n    \t\t\t<br class=\"clear\">\n    \t\n    \t\t\t<div class=\"sidebar_bottom\"></div>\n    \t\t</div>\n    \n    </div>\n    <!-- End main content -->\n   \n</div>\n\n</div>\n\n<div id=\"post_info_bar\">\n\t<div id=\"post_indicator\"></div>\n\t<div class=\"standard_wrapper\">\n\t\t\t\t<div class=\"post_info_thumb\"><img src=\"http://techgenix.com/tgwordpress/wp-content/uploads/2020/01/open-source-security-tools-Freepik-150x150.jpg?ezimgfmt=rs:47x47/rscb2\" alt=\"\" class=\" ezlazyloaded\" ezimgfmt=\"rs rscb2 src\" data-ezsrc=\"http://techgenix.com/tgwordpress/wp-content/uploads/2020/01/open-source-security-tools-Freepik-150x150.jpg?ezimgfmt=rs:47x47/rscb2\" ezoid=\"0.9564543340931055\"></div>\n\t\t\t\t<div class=\"post_info\">\n\t\t\t<div class=\"post_info_label\">You are reading</div>\n\t\t\t<div class=\"post_info_title\"><h6>Open-source security tools for cloud and container applications</h6></div>\n\t\t</div>\n\t\t\n\t\t<a id=\"post_info_share\" href=\"javascript:;\"><i class=\"fa fa-share-alt\"></i>Share</a>\n\t\t<a id=\"post_info_comment\" href=\"#respond\"><i class=\"fa fa-comment\"></i>No Comment</a>\n\t</div>\n</div>\n\n\n\n<div class=\"footer_bar   \">\n\n\t\t<div id=\"footer\" class=\"\">\n\t<ul class=\"sidebar_widget three\">\n\t    <li id=\"text-2\" class=\"widget widget_text\"><h2 class=\"widgettitle\"><span>TECHGENIX</span></h2>\n\t\t\t<div class=\"textwidget\"><p><img src=\"data:image/svg+xml,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20width%3D%22220%22%20height%3D%22216%22%3E%3C%2Fsvg%3E\" alt=\"techgenix logo\" style=\"max-width: 130px;height: auto;\" ezimgfmt=\"rs rscb2 src\" class=\"ezlazyload\" data-ezsrc=\"http://techgenix.com/ezoimgfmt/198.58.102.214/tgwordpress/wp-content/uploads/2016/05/splash.png\"></p>\n<p>TechGenix reaches millions of IT Professionals every month, and has set the standard for providing free technical content through its growing family of websites, empowering them with the answers and tools that are needed to set up, configure, maintain and enhance their networks.</p>\n<div style=\"margin-top:15px;\">\n<div class=\"social_wrapper shortcode dark large\">\n<ul>\n<li class=\"facebook\"><a target=\"_blank\" title=\"Facebook\" href=\"https://www.facebook.com/techgenix\" rel=\"noopener noreferrer\"><i class=\"fa fa-facebook\"></i></a></li>\n<li class=\"twitter\"><a target=\"_blank\" title=\"Twitter\" href=\"https://twitter.com/techgenix\" rel=\"noopener noreferrer\"><i class=\"fa fa-twitter\"></i></a></li>\n</ul>\n</div>\n</div>\n</div>\n\t\t</li>\n<li id=\"grand_news_recent_posts-1\" class=\"widget Grand_News_Recent_Posts\"><h2 class=\"widgettitle\"><span>Recent Posts</span></h2><ul class=\"posts blog withthumb \"><li><div class=\"post_circle_thumb\"><a href=\"http://techgenix.com/remote-work-strategy/\"><img src=\"http://techgenix.com/tgwordpress/wp-content/uploads/2020/04/remote-work-strategy-Freepik-300x87.jpg\" class=\"tg-lazy\" alt=\"\"></a></div><a href=\"http://techgenix.com/remote-work-strategy/\">Rebuilding our remote work strategy: It’s more than the tools</a></li><li><div class=\"post_circle_thumb\"><a href=\"http://techgenix.com/byod-policy/\"><img src=\"http://techgenix.com/tgwordpress/wp-content/uploads/2018/10/byod-policy-Shutterstock-300x82.jpg\" class=\"tg-lazy\" alt=\"\"></a></div><a href=\"http://techgenix.com/byod-policy/\">Think your BYOD policy is really secure? You’d better read this now</a></li><li><div class=\"post_circle_thumb\"><a href=\"http://techgenix.com/intel-h-series-mobile-processors/\"><img src=\"http://techgenix.com/tgwordpress/wp-content/uploads/2020/04/Intel-h-series-mobile-processors-Intel-300x75.jpg\" class=\"tg-lazy\" alt=\"\"></a></div><a href=\"http://techgenix.com/intel-h-series-mobile-processors/\">Intel unveils new ‘desktop-caliber’ H-series mobile processors</a></li></ul></li>\n\t</ul>\n\t</div>\n\t<br class=\"clear\">\n\t\n\t<div class=\"footer_bar_wrapper \">\n\t\t\t\t\t<div class=\"social_wrapper\">\n\t\t\t    <ul>\n\t\t\t    \t\t\t\t    \t<li class=\"facebook\"><a target=\"_blank\" href=\"https://www.facebook.com/techgenix\"><i class=\"fa fa-facebook\"></i></a></li>\n\t\t\t    \t\t\t\t    \t\t\t\t    \t<li class=\"twitter\"><a target=\"_blank\" href=\"https://twitter.com/techgenix\"><i class=\"fa fa-twitter\"></i></a></li>\n\t\t\t    \t\t\t\t    \t\t\t\t    \t\t\t\t    \t\t\t\t    \t\t\t\t    \t\t\t\t    \t\t\t\t    \t\t\t\t    \t\t\t\t        \t\t\t        \t\t\t    </ul>\n\t\t\t</div>\n\t\t\t    <div id=\"copyright\">Copyright © 2020 TechGenix Ltd. | <a href=\"http://techgenix.com/privacy-policy\">Privacy Policy</a> | <a href=\"http://techgenix.com/terms-conditions\">Terms &amp; Conditions</a> | <a href=\"http://techgenix.com/advertising/\">Advertise</a></div>\t    \n\t    \t    \n\t    \t</div>\n</div>\n\n</div>\n\n\n<div id=\"overlay_background\">\n\t<div id=\"fullscreen_share_wrapper\">\n\t\t<div class=\"fullscreen_share_content\">\n\t\t<div id=\"social_share_wrapper\">\n\t<ul>\n\t\t<li><a class=\"tooltip\" title=\"Share On Facebook\" target=\"_blank\" href=\"https://www.facebook.com/sharer/sharer.php?u=http://techgenix.com/open-source-security-tools/\"><i class=\"fa fa-facebook marginright\"></i></a></li>\n\t\t<li><a class=\"tooltip\" title=\"Share On Twitter\" target=\"_blank\" href=\"https://twitter.com/intent/tweet?original_referer=http://techgenix.com/open-source-security-tools/&amp;text=Open-source security tools for cloud and container applications&amp;url=http://techgenix.com/open-source-security-tools/\"><i class=\"fa fa-twitter marginright\"></i></a></li>\n\t\t<li><a class=\"tooltip\" title=\"Share On Pinterest\" target=\"_blank\" href=\"https://www.pinterest.com/pin/create/button/?url=http%3A%2F%2Ftechgenix.com%2Fopen-source-security-tools%2F&amp;media=http%3A%2F%2Ftechgenix.com%2Ftgwordpress%2Fwp-content%2Fuploads%2F2020%2F01%2Fopen-source-security-tools-Freepik.jpg\"><i class=\"fa fa-pinterest marginright\"></i></a></li>\n\t\t<li><a class=\"tooltip\" title=\"Share On Google+\" target=\"_blank\" href=\"https://plus.google.com/share?url=http://techgenix.com/open-source-security-tools/\"><i class=\"fa fa-google-plus marginright\"></i></a></li>\n\t\t<li><a class=\"tooltip\" title=\"Share by Email\" href=\"mailto:?Subject=Open-source+security+tools+for+cloud+and+container+applications&amp;Body=http%3A%2F%2Ftechgenix.com%2Fopen-source-security-tools%2F\"><i class=\"fa fa-envelope marginright\"></i></a></li>\n\t</ul>\n</div>\t\t</div>\n\t</div>\n</div>\n\n<div id=\"overlay_background_search\">\n\t<a id=\"search_close_button\" class=\"tooltip\" title=\"Close\" href=\"javascript:;\"><i class=\"fa fa-close\"></i></a>\n\t<div class=\"search_wrapper\">\n\t\t<div class=\"search_content\">\n\t\t    <form role=\"search\" method=\"get\" name=\"searchform\" id=\"searchform\" action=\"http://techgenix.com//\">\n\t\t        <div>\n\t\t        \t<input type=\"text\" value=\"\" name=\"s\" id=\"s\" autocomplete=\"off\" placeholder=\"Enter Keyword\">\n\t\t        \t<div class=\"search_tagline\">Press enter/return to begin your search</div>\n\t\t        \t<button>\n\t\t            \t<i class=\"fa fa-search\"></i>\n\t\t            </button>\n\t\t        </div>\n\t\t        <div id=\"autocomplete\"></div>\n\t\t    </form>\n\t\t</div>\n\t</div>\n</div>\n\n\n\n<script type=\"text/javascript\">\njQuery(document).on('ready', function() {\n\tjQuery('.placeholder-for-hentry').addClass('hentry');\n\tjQuery('.placeholder-for-hentry').removeClass('placeholder-for-hentry');\n});\n</script>\n<!-- This site is converting visitors into subscribers and customers with OptinMonster - https://optinmonster.com :: Campaign Title: Mobile - GFI - Kerio VPN --><script type=\"text/javascript\" src=\"https://a.opmnstr.com/app/js/api.min.js\" data-campaign=\"yqffteftjjwqmmbmcgwq\" data-user=\"26951\"></script><script type=\"text/javascript\" id=\"\" src=\"http://mint.techgenix.com/?js\"></script>\n<script type=\"text/javascript\" id=\"\">!function(b,e,f,g,a,c,d){b.fbq||(a=b.fbq=function(){a.callMethod?a.callMethod.apply(a,arguments):a.queue.push(arguments)},b._fbq||(b._fbq=a),a.push=a,a.loaded=!0,a.version=\"2.0\",a.queue=[],c=e.createElement(f),c.async=!0,c.src=g,d=e.getElementsByTagName(f)[0],d.parentNode.insertBefore(c,d))}(window,document,\"script\",\"https://connect.facebook.net/en_US/fbevents.js\");fbq(\"init\",\"180880295668516\");fbq(\"track\",\"PageView\");fbq(\"track\",\"ViewContent\",{content_type:\"Content page\"});</script>\n<noscript><img height=\"1\" width=\"1\" style=\"display:none\" src=\"https://www.facebook.com/tr?id=180880295668516&amp;ev=PageView&amp;noscript=1\"></noscript>\n\n<!-- / OptinMonster --><!-- This site is converting visitors into subscribers and customers with OptinMonster - https://optinmonster.com :: Campaign Title: Full Screen - GFI - Kerio VPN --><script type=\"text/javascript\" src=\"https://a.opmnstr.com/app/js/api.min.js\" data-campaign=\"bachtlanuvexts8zupgw\" data-user=\"26951\"></script><!-- / OptinMonster -->\t\t\t<style>\n\t\t\t\t.single .post_header {\n\t\t\t\t\tdisplay: none;\n\t\t\t\t}\n\t\t\t</style>\n\t\t\t\t\t<script type=\"text/javascript\">var yqffteftjjwqmmbmcgwq_shortcode = true;var bachtlanuvexts8zupgw_shortcode = true;</script>\n\t\t<script type=\"text/javascript\" src=\"http://techgenix.com/tgwordpress/wp-includes/js/comment-reply.min.js\"></script>\n<script type=\"text/javascript\">\n/* <![CDATA[ */\nvar wpcf7 = {\"apiSettings\":{\"root\":\"http:\\/\\/techgenix.com\\/wp-json\\/contact-form-7\\/v1\",\"namespace\":\"contact-form-7\\/v1\"},\"cached\":\"1\"};\n/* ]]> */\n</script>\n<script type=\"text/javascript\" src=\"http://techgenix.com/tgwordpress/wp-content/plugins/contact-form-7/includes/js/scripts.js\"></script>\n<script type=\"text/javascript\">\n/* <![CDATA[ */\nvar pvcArgsFrontend = {\"mode\":\"js\",\"requestURL\":\"http:\\/\\/techgenix.com\\/tgwordpress\\/wp-admin\\/admin-ajax.php\",\"postID\":\"1015652\",\"nonce\":\"7fdb237027\"};\n/* ]]> */\n</script>\n<script type=\"text/javascript\" src=\"http://techgenix.com/tgwordpress/wp-content/plugins/post-views-counter/js/frontend.js\"></script>\n<script type=\"text/javascript\">\n/* <![CDATA[ */\nvar thirsty_global_vars = {\"home_url\":\"\\/\\/techgenix.com\",\"ajax_url\":\"http:\\/\\/techgenix.com\\/tgwordpress\\/wp-admin\\/admin-ajax.php\",\"link_fixer_enabled\":\"yes\",\"link_prefix\":\"recommends\",\"link_prefixes\":[\"recommends\"],\"post_id\":\"1015652\",\"enable_record_stats\":\"yes\",\"enable_js_redirect\":\"yes\",\"disable_thirstylink_class\":\"\"};\n/* ]]> */\n</script>\n<script type=\"text/javascript\" src=\"http://techgenix.com/tgwordpress/wp-content/plugins/thirstyaffiliates/js/app/ta.js\"></script>\n<script type=\"text/javascript\" src=\"https://www.google.com/recaptcha/api.js?render=6LdhOoAUAAAAAGEoCLMSd1SlIAPRhEw1ti6CleZh\"></script><iframe id=\"google_osd_static_frame_3983188406869\" name=\"google_osd_static_frame\" style=\"display: none; width: 0px; height: 0px;\"></iframe>\n<script type=\"text/javascript\" src=\"http://techgenix.com/tgwordpress/wp-content/themes/grandnews/js/ilightbox.packed.js\"></script>\n<script type=\"text/javascript\" src=\"http://techgenix.com/tgwordpress/wp-content/themes/grandnews/js/jquery.easing.js\"></script>\n<script type=\"text/javascript\" src=\"http://techgenix.com/tgwordpress/wp-content/themes/grandnews/js/jquery.sticky-kit.min.js\"></script>\n<script type=\"text/javascript\" src=\"http://techgenix.com/tgwordpress/wp-content/themes/grandnews/js/jquery.lazy.min.js\"></script>\n<script type=\"text/javascript\" src=\"http://techgenix.com/tgwordpress/wp-content/themes/grandnews/js/jquery.cookie.js\"></script>\n<script type=\"text/javascript\" src=\"http://techgenix.com/tgwordpress/wp-content/themes/grandnews/js/jquery.tooltipster.min.js\"></script>\n<script type=\"text/javascript\" src=\"http://techgenix.com/tgwordpress/wp-content/themes/grandnews/js/custom_plugins.js\"></script>\n<script type=\"text/javascript\" src=\"http://techgenix.com/tgwordpress/wp-content/themes/grandnews/js/custom.js\"></script>\n<script type=\"text/javascript\" src=\"http://techgenix.com/tgwordpress/wp-includes/js/wp-embed.min.js\"></script>\n<script type=\"text/javascript\" src=\"https://cdn.onesignal.com/sdks/OneSignalSDK.js?\" async=\"async\"></script>\n<script async=\"async\" type=\"text/javascript\" src=\"http://techgenix.com/tgwordpress/wp-content/plugins/akismet/_inc/form.js\"></script>\n<script type=\"text/javascript\" src=\"http://techgenix.com/tgwordpress/wp-content/plugins/optinmonster/assets/js/helper.js\"></script>\n<script type=\"text/javascript\">\n( function( grecaptcha, sitekey, actions ) {\n\n\tvar wpcf7recaptcha = {\n\n\t\texecute: function( action ) {\n\t\t\tgrecaptcha.execute(\n\t\t\t\tsitekey,\n\t\t\t\t{ action: action }\n\t\t\t).then( function( token ) {\n\t\t\t\tvar forms = document.getElementsByTagName( 'form' );\n\n\t\t\t\tfor ( var i = 0; i < forms.length; i++ ) {\n\t\t\t\t\tvar fields = forms[ i ].getElementsByTagName( 'input' );\n\n\t\t\t\t\tfor ( var j = 0; j < fields.length; j++ ) {\n\t\t\t\t\t\tvar field = fields[ j ];\n\n\t\t\t\t\t\tif ( 'g-recaptcha-response' === field.getAttribute( 'name' ) ) {\n\t\t\t\t\t\t\tfield.setAttribute( 'value', token );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} );\n\t\t},\n\n\t\texecuteOnHomepage: function() {\n\t\t\twpcf7recaptcha.execute( actions[ 'homepage' ] );\n\t\t},\n\n\t\texecuteOnContactform: function() {\n\t\t\twpcf7recaptcha.execute( actions[ 'contactform' ] );\n\t\t},\n\n\t};\n\n\tgrecaptcha.ready(\n\t\twpcf7recaptcha.executeOnHomepage\n\t);\n\n\tdocument.addEventListener( 'change',\n\t\twpcf7recaptcha.executeOnContactform, false\n\t);\n\n\tdocument.addEventListener( 'wpcf7submit',\n\t\twpcf7recaptcha.executeOnHomepage, false\n\t);\n\n} )(\n\tgrecaptcha,\n\t'6LdhOoAUAAAAAGEoCLMSd1SlIAPRhEw1ti6CleZh',\n\t{\"homepage\":\"homepage\",\"contactform\":\"contactform\"}\n);\n</script>\n\t\t<script type=\"text/javascript\">var omapi_localized = { ajax: 'http://techgenix.com/tgwordpress/wp-admin/admin-ajax.php?optin-monster-ajax-route=1', nonce: '011f42c3c1', slugs: {\"yqffteftjjwqmmbmcgwq\":{\"slug\":\"yqffteftjjwqmmbmcgwq\",\"mailpoet\":false},\"bachtlanuvexts8zupgw\":{\"slug\":\"bachtlanuvexts8zupgw\",\"mailpoet\":false}} };</script>\n\t\t\t\t<script type=\"text/javascript\">var omapi_data = {\"wc_cart\":[],\"object_id\":1015652,\"object_key\":\"post\",\"object_type\":\"post\",\"term_ids\":[56,102566,142857,142856,142858,142861,142862,142859,142860]};</script>\n\t\t\n\n\n<!-- Dynamic page generated in 0.778 seconds. -->\n<!-- Cached page generated by WP-Super-Cache on 2020-04-23 05:06:04 -->\n\n<!-- super cache --><script type=\"text/javascript\">\n\t\t\t\tvar __inScopeForCCPA = false;\n\t\tfunction __uspapi(command, version, callback) {\n\t\t\tvar response = null;\n\t\t\tvar successs = false;\n\t\t\tif (command === \"getUSPData\" && version === 1) {\n\t\t\t\tvar uspString = \"1\"; // Version\n\t\t\t\tif (__inScopeForCCPA) {\n\t\t\t\t\tuspString += \"N\"; // Has Explicit Notice for Opt Out been provided (ex footer or minor consent modal)\n\t\t\t\t\tvar result;\n\t\t\t\t\tvar consentCookie = (result = new RegExp('(?:^|; )ezoccpaconsent=([^;]*)').exec(document.cookie)) ? (result[1]) : null;\n\t\t\t\t\tif (consentCookie === \"nonconsent\") {\n\t\t\t\t\t\tuspString += \"N\";\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tuspString += \"Y\";\n\t\t\t\t\t}\n\t\t\t\t\tuspString += \"N\" // Is pub a signatory to the IAB Limited Service Provider Agreement (http://www.iabprivacy.com/)\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tuspString += \"---\";\n\t\t\t\t}\n\t\t\t\tresponse = {\n\t\t\t\t\tuspString: uspString,\n\t\t\t\t\tversion: 1\n\t\t\t\t};\n\t\t\t\tsuccess = true;\n\t\t\t}\n\t\t\treturn callback(response, success);\n\t\t};\n\t\tfunction __receiveUspapiMessage(event) {\n\t\t\tif (event.data.hasOwnProperty('__uspapiCall')) {\n\t\t\t\t__uspapi('getUSPData', 1, (uspData, success) => {\n\t\t\t\t\tevent.source.postMessage({\n\t\t\t\t\t\t__uspapiReturn: {\n\t\t\t\t\t\t\treturnValue: uspData,\n\t\t\t\t\t\t\tsuccess: success,\n\t\t\t\t\t\t\tcallId: event.data.__uspapiCall.callId\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tevent.origin);\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn null;\n\t\t};\n\t\twindow.addEventListener(\"message\", __receiveUspapiMessage, false);\n</script>\n\n\t\t<script type=\"text/javascript\">\n\t\t(function(f,a){function g(b,a,c){b.addEventListener?b.addEventListener(a,c):b.attachEvent(\"on\"+a,function(){c.call(b)})}function k(b){b&&(\"string\"==typeof b[\"class\"]&&b[\"class\"]&&a.getElementById(\"uglipop_popbox\").setAttribute(\"class\",b[\"class\"]),b.keepLayout&&!b[\"class\"]&&a.getElementById(\"uglipop_popbox\").setAttribute(\"style\",\"position:relative;height:300px;width:300px;background-color:white;opacity:1;\"),\"string\"==typeof b.content&&b.content&&\"html\"==b.source&&(a.getElementById(\"uglipop_popbox\").innerHTML=b.content),\"string\"==typeof b.content&&b.content&&\"div\"==b.source&&(a.getElementById(\"uglipop_popbox\").innerHTML=a.getElementById(b.content).innerHTML));a.getElementById(\"uglipop_overlay_wrapper\").style.display=\"\";a.getElementById(\"uglipop_overlay\").style.display=\"\";a.getElementById(\"uglipop_content_fixed\").style.display=\"\"}function h(){a.getElementById(\"uglipop_overlay_wrapper\").style.display=\"none\";a.getElementById(\"uglipop_overlay\").style.display=\"none\";a.getElementById(\"uglipop_content_fixed\").style.display=\"none\"}g(a,\"DOMContentLoaded\",function(){var b=a.createElement(\"div\"),e=a.createElement(\"div\"),c=a.createElement(\"div\"),d=a.createElement(\"div\");e.id=\"uglipop_content_fixed\";e.setAttribute(\"style\",\"position:fixed;top: 50%;left: 50%;transform: translate(-50%, -50%);-webkit-transform: translate(-50%, -50%);-ms-transform: translate(-50%, -50%);opacity:1;z-index:10000000;\");c.id=\"uglipop_popbox\";d.id=\"uglipop_overlay_wrapper\";d.setAttribute(\"style\",\"position:absolute;top:0;bottom:0;left:0;right:0;display:none\");b.id=\"uglipop_overlay\";b.setAttribute(\"style\",\"position:fixed;top:0;bottom:0;left:0;right:0;opacity:0.3;width:100%;height:100%;background-color:black;\");d.appendChild(b);e.appendChild(c);a.body.appendChild(d);a.body.appendChild(e);a.getElementById(\"uglipop_overlay_wrapper\").style.display=\"none\";a.getElementById(\"uglipop_overlay\").style.display=\"none\";a.getElementById(\"uglipop_content_fixed\").style.display=\"none\";d.addEventListener(\"click\",h);g(f,\"keydown\",function(a){27==a.keyCode&&h()});f.uglipop=k})})(window,document);\n\t\t\tvar ezRBA = (function() {\n\t\t\t  function init() {\n\t\t\t\tvar reportAdsBtns = document.querySelectorAll('.ez-report-ad-button');\n\t\t\t\tfor (var i = 0; i < reportAdsBtns.length; i++) {\n\t\t\t\t  reportAdsBtns[i].addEventListener('click', function(e) {\n\t\t\t\t\tvar url = '<iframe src=\"https://ezoic.com/pub/reportads/reportads.html' + e.target.getAttribute('name') + '\" width=\"400\" height=\"500\" style=\"border-radius: 10px; box-shadow: 2px 2px 30px 6px rgba(0,0,0,0.75); border: 1px solid black;\"></iframe>'\n\t\t\t\t\tuglipop({\n\t\t\t\t\t  class: 'none',\n\t\t\t\t\t  source: 'html',\n\t\t\t\t\t  content: url,\n\t\t\t\t\t});\n\t\t\t\t  });\n\t\t\t\t}\n\t\t\t\tfunction bindEvent(element, eventName, eventHandler) {\n\t\t\t\t\tif (element.addEventListener) {\n\t\t\t\t\t\telement.addEventListener(eventName, eventHandler, false);\n\t\t\t\t\t} else if (element.attachEvent) {\n\t\t\t\t\t\telement.attachEvent('on' + eventName, eventHandler);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbindEvent(window, 'message', function(e) {\n\t\t\t\t\tif (e.data === 'close-report-ad-modal') {\n\t\t\t\t\t\tdocument.getElementById('uglipop_overlay_wrapper').style.display = 'none';\t\n\t\t\t\t\t\tdocument.getElementById('uglipop_overlay').style.display = 'none';\t\n\t\t\t\t\t\tdocument.getElementById('uglipop_content_fixed').style.display = 'none';\t\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t  }\n\n\t\t\t  return {\n\t\t\t\tinit: init\n\t\t\t  };\n\t\t\t})();\n\t\t\tezRBA.init();\n\t\t</script>\n<script type=\"text/javascript\" data-cfasync=\"false\">(function(){function b(a){for(var b=0;b<document.styleSheets.length;b++)if(document.styleSheets[b].href==a)return!0;return!1}var a=function(a,b){for(var d=0;d<b.length;d++){var c=b[d];if(0==c.complete||\"undefined\"!=typeof c.readyState&&4>c.readyState){var g=c.getAttribute(\"src\")||c.currentSrc;\"undefined\"!=typeof c.readyState&&0==c.readyState?c.addEventListener(\"loadstart\",function(a){var b=a.getAttribute(\"src\")||a.currentSrc;window.ezorqs(a,b)}):(g=c.getAttribute(\"src\")||c.currentSrc,window.ezorqs(c,\n\tg));c.addEventListener(\"load\",function(a){var b=a.currentTarget.getAttribute(\"src\")||a.srcElement.currentSrc;window.ezorqe(a,b)});c.addEventListener(\"loadeddata\",function(a){var b=a.currentTarget.getAttribute(\"src\")||a.srcElement.currentSrc;window.ezorqe(a,b)});c.addEventListener(\"error\",function(a){var b=a.currentTarget.getAttribute(\"src\")||a.srcElement.currentSrc;window.ezorqe(a,b)})}}};a(\"img\",document.querySelectorAll(\"img\"));a(\"video\",document.querySelectorAll(\"video\"));a(\"audio\",document.querySelectorAll(\"audio\"));\n\t(function(a){for(var c=0;c<a.length;c++){var d=a[c];if((\"preload\"==d.getAttribute(\"rel\")||\"stylesheet\"==d.getAttribute(\"rel\"))&&null!=d.getAttribute(\"href\")&&b(d.getAttribute(\"href\"))){window.ezorqs(d,d.getAttribute(\"href\"));var e=document.createElement(\"img\");e.onerror=function(a){\"undefined\"!=typeof a.path&&\"undefined\"!=typeof a.path[0].currentSrc?window.ezorqe(d,a.path[0].currentSrc):\"undefined\"!=typeof a.srcElement&&\"undefined\"!=typeof a.srcElement.href&&window.ezorqe(d,a.srcElement.href)};e.src=\n\td.getAttribute(\"href\")}}})(document.querySelectorAll(\"link\"));\"undefined\"!=typeof window.__ez.ssaf&&-1<window.__ez.ssaf.indexOf(16)&&\"undefined\"!==typeof window.__ez.sshsdef&&!1===window.__ez.sshsdef&&Element.prototype.addEventListener&&(\"function\"==typeof window.onload&&(window.addEventListener(\"load\",window.onload),window.onload=null),\"function\"==typeof document.onload&&(document.addEventListener.addEventListener(\"load\",document.onload),document.onload=null))})();</script>\n<script type=\"text/javascript\" style=\"display:none;\">\nvar __ez_dims = (function() {\n\tvar setCookie = function( name, content, expiry ) {\n\t\treturn document.cookie = name+'='+content+((expiry)?';expires='+(new Date(Math.floor(new Date().getTime()+expiry*1000)).toUTCString()):'')+';path=/';\n\t};\n\tvar ffid = 1;\n\tvar oh = window.screen.height;\n\tvar ow = window.screen.width;\n\tvar h = ffid === 1 ? oh : (oh > ow) ? oh : ow;\n\tvar w = ffid === 1 ? ow : (oh > ow) ? ow : oh;\n\tvar uh = window.innerHeight || document.documentElement.clientHeight || document.getElementsByTagName('body')[0].clientHeight;\n\tvar uw = window.innerWidth || document.documentElement.clientWidth || document.getElementsByTagName('body')[0].clientWidth;\n\tsetCookie('ezds', encodeURIComponent('ffid='+ffid+',w='+w+',h='+h), (31536e3*7));\n\tsetCookie('ezohw', encodeURIComponent('w='+uw+',h='+uh), (31536e3*7));\n})();\n</script><script type=\"text/javascript\" style=\"display:none;\" async=\"\">\n__ez.queue.addFile('edmonton.php', '/detroitchicago/edmonton.webp?a=a&cb=188-0&shcb=32', true, [], true, false, false, false);\n__ez.queue.addFile('jellyfish.php', '/porpoiseant/jellyfish.webp?a=a&cb=188-0&shcb=32', false, [], true, false, false, false);\n</script>\n\n<script>var _audins_dom=\"techgenix_com\",_audins_did=75594;__ez.queue.addDelayFunc(\"audins.js\",\"__ez.script.add\", \"//go.ezoic.net/detroitchicago/audins.js?cb=188-0\");</script><noscript><div style=\"display:none;\"><img src=\"//pixel.quantserve.com/pixel/p-31iz6hfFutd16.gif?labels=Domain.techgenix_com,DomainId.75594\" border=\"0\" height=\"1\" width=\"1\" alt=\"Quantcast\"/></div></noscript><noscript><img src=\"https://sb.scorecardresearch.com/p?c1=2&c2=20015427&cv=2.0&cj=1\"/></noscript>\n<!-- cheetah --><script>!function(n){\"use strict\";n.loadCSS||(n.loadCSS=function(){});var o=loadCSS.relpreload={};if(o.support=function(){var e;try{e=n.document.createElement(\"link\").relList.supports(\"preload\")}catch(t){e=!1}return function(){return e}}(),o.bindMediaToggle=function(t){var e=t.media||\"all\";function a(){t.media=e}t.addEventListener?t.addEventListener(\"load\",a):t.attachEvent&&t.attachEvent(\"onload\",a),setTimeout(function(){t.rel=\"stylesheet\",t.media=\"only x\"}),setTimeout(a,3e3)},o.poly=function(){if(!o.support())for(var t=n.document.getElementsByTagName(\"link\"),e=0;e<t.length;e++){var a=t[e];\"preload\"!==a.rel||\"style\"!==a.getAttribute(\"as\")||a.getAttribute(\"data-loadcss\")||(a.setAttribute(\"data-loadcss\",!0),o.bindMediaToggle(a))}},!o.support()){o.poly();var t=n.setInterval(o.poly,500);n.addEventListener?n.addEventListener(\"load\",function(){o.poly(),n.clearInterval(t)}):n.attachEvent&&n.attachEvent(\"onload\",function(){o.poly(),n.clearInterval(t)})}\"undefined\"!=typeof exports?exports.loadCSS=loadCSS:n.loadCSS=loadCSS}(\"undefined\"!=typeof global?global:this);</script><script type=\"text/javascript\" onload=\"__ezcl.handle(true);\" async=\"\" src=\"/utilcave_com/inc/ezcl.webp?cb=4\"></script>\n<iframe src=\"https://s.amazon-adsystem.com/iu3?cm3ppd=1&amp;d=dtb-pub&amp;csif=t&amp;dl=r1u\" style=\"display: none;\"></iframe><div id=\"uglipop_overlay_wrapper\" style=\"position:absolute;top:0;bottom:0;left:0;right:0;display:none\"><div id=\"uglipop_overlay\" style=\"position: fixed; top: 0px; bottom: 0px; left: 0px; right: 0px; opacity: 0.3; width: 100%; height: 100%; background-color: black; display: none;\"></div></div><div id=\"uglipop_content_fixed\" style=\"position: fixed; top: 50%; left: 50%; transform: translate(-50%, -50%); opacity: 1; z-index: 10000000; display: none;\"><div id=\"uglipop_popbox\"></div></div><div id=\"om-yqffteftjjwqmmbmcgwq-holder\"></div><div id=\"om-bachtlanuvexts8zupgw-holder\"></div><iframe src=\"https://techgenix.os.tc/webPushIframe\" sandbox=\"allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts allow-top-navigation\" style=\"display: none;\"></iframe><iframe src=\"https://techgenix.os.tc/webPushAnalytics\" style=\"display: none;\"></iframe><div id=\"onesignal-bell-container\" class=\"onesignal-bell-container onesignal-reset onesignal-bell-container-bottom-left\"><div id=\"onesignal-bell-launcher\" class=\"onesignal-bell-launcher onesignal-bell-launcher-md onesignal-bell-launcher-bottom-left onesignal-bell-launcher-theme-default onesignal-bell-launcher-active\"><div class=\"onesignal-bell-launcher-button\"><svg class=\"onesignal-bell-svg\" xmlns=\"http://www.w3.org/2000/svg\" width=\"99.7\" height=\"99.7\" viewBox=\"0 0 99.7 99.7\" style=\"filter: drop-shadow(0 2px 4px rgba(34,36,38,0.35));; -webkit-filter: drop-shadow(0 2px 4px rgba(34,36,38,0.35));;\"><circle class=\"background\" cx=\"49.9\" cy=\"49.9\" r=\"49.9\" style=\"\"></circle><path class=\"foreground\" d=\"M50.1 66.2H27.7s-2-.2-2-2.1c0-1.9 1.7-2 1.7-2s6.7-3.2 6.7-5.5S33 52.7 33 43.3s6-16.6 13.2-16.6c0 0 1-2.4 3.9-2.4 2.8 0 3.8 2.4 3.8 2.4 7.2 0 13.2 7.2 13.2 16.6s-1 11-1 13.3c0 2.3 6.7 5.5 6.7 5.5s1.7.1 1.7 2c0 1.8-2.1 2.1-2.1 2.1H50.1zm-7.2 2.3h14.5s-1 6.3-7.2 6.3-7.3-6.3-7.3-6.3z\" style=\"\"></path><ellipse class=\"stroke\" cx=\"49.9\" cy=\"49.9\" rx=\"37.4\" ry=\"36.9\" style=\"\"></ellipse></svg></div><div class=\"onesignal-bell-launcher-badge\" style=\"filter: drop-shadow(0 2px 4px rgba(34,36,38,0));; -webkit-filter: drop-shadow(0 2px 4px rgba(34,36,38,0));;\"></div><div class=\"onesignal-bell-launcher-message\"><div class=\"onesignal-bell-launcher-message-body\"></div></div><div class=\"onesignal-bell-launcher-dialog\" style=\"filter: drop-shadow(0px 2px 2px rgba(34,36,38,.15));; -webkit-filter: drop-shadow(0px 2px 2px rgba(34,36,38,.15));;\"><div class=\"onesignal-bell-launcher-dialog-body\"></div></div></div></div><div id=\"onesignal-popover-container\" class=\"onesignal-popover-container onesignal-reset slide-down\"><div id=\"onesignal-popover-dialog\" class=\"onesignal-popover-dialog\"><div id=\"normal-popover\"><div class=\"popover-body\"><div class=\"popover-body-icon\"><img alt=\"notification icon\" class=\"\" src=\"http://techgenix.com/tgwordpress/wp-content/uploads/2016/10/techgenix-logo-256x256.png\"></div><div class=\"popover-body-message\">We'd like to show you notifications for the latest news and updates.</div><div class=\"clearfix\"></div></div><div class=\"popover-footer\"><button id=\"onesignal-popover-allow-button\" class=\"align-right primary popover-button\">Allow</button><button id=\"onesignal-popover-cancel-button\" class=\"align-right secondary popover-button\">No Thanks</button><div class=\"clearfix\"></div></div></div></div></div>","text":"Sections\nCloud Computing\nAmazon Web Services\nGoogle Cloud\nHybrid Cloud\nMicrosoft Azure\nOffice 365\nContainerization\nData Center\nBig Data &amp; Machine Learning\nDisaster Recovery\nInfrastructure Management\nStorage\nMobile Technology\nMS Exchange Server\nCompliance, Policies &amp; Archiving\nDeployment &amp; Migration\nHigh Availability &amp; Recovery\nManagement &amp; Administration\nMobility &amp; Client Access\nMonitoring &amp; Operations\nPlanning &amp; Architecture\nSecurity &amp; Message Hygiene\nTools\nNetworking\nInternet of Things\nNetwork Troubleshooting\nWindows Networking\nSecurity\nHacking &amp; Cyberattacks\nMalware\nCompliance &amp; Privacy\nPatch Management\nRansomware\nSocial Engineering\nVulnerabilities\nVirtualization\nCitrix\nMicrosoft Hyper-V\nTerminal Services\nVirtualBox\nVMware\nWindows Server\nWindows 10\nTech News\nTutorials\nReviews\nNewsletters\nWServerNews\nFitITproNews\nPodcast\nProduct Directory\nWebinars\nAbout\nAdvertising\nAbout Us\nContact Us\nMeet The Team\nLegal\nPrivacy Policy\nTerms &amp; Conditions\nSections\nCloud Computing\nAmazon Web Services\nGoogle Cloud\nHybrid Cloud\nMicrosoft Azure\nOffice 365\nContainerization\nData Center\nBig Data &amp; Machine Learning\nDisaster Recovery\nInfrastructure Management\nStorage\nMobile Technology\nMS Exchange Server\nCompliance, Policies &amp; Archiving\nDeployment &amp; Migration\nHigh Availability &amp; Recovery\nManagement &amp; Administration\nMobility &amp; Client Access\nMonitoring &amp; Operations\nPlanning &amp; Architecture\nSecurity &amp; Message Hygiene\nTools\nNetworking\nInternet of Things\nNetwork Troubleshooting\nWindows Networking\nSecurity\nHacking &amp; Cyberattacks\nMalware\nCompliance &amp; Privacy\nPatch Management\nRansomware\nSocial Engineering\nVulnerabilities\nVirtualization\nCitrix\nMicrosoft Hyper-V\nTerminal Services\nVirtualBox\nVMware\nWindows Server\nWindows 10\nTech News\nTutorials\nReviews\nNewsletters\nWServerNews\nFitITproNews\nPodcast\nProduct Directory\nWebinars\nAbout\nAdvertising\nAbout Us\nContact Us\nMeet The Team\nLegal\nPrivacy Policy\nTerms &amp; Conditions\nOpen-source security tools for cloud and container applications\nTwain Taylor March 18, 2020\n0\n3.9K&nbsp;Views\nShare On Facebook\nTweet It\nShare On LinkedIn\nAs the use of containers is becoming more popular and streamlined, the security aspects related to containers have also become more critical for businesses. Containerization has particular structural and operational elements that need special attention. The architectural differences like a shared kernel for containers demand a different security approach altogether, in comparison to traditional security approaches. This makes it very important to understand and perform container-specific security scanning at the earlier stages of the build process. To meet these dynamic requirements of the DevOps teams, several open-source security tools are available in the market. This article covers some popular open-source security tools your DevOps teams can use to ensure the security of your container environment.\nAnchore Engine\nAnchore Engine is an open-source security tool created for analyzing and scanning container images for vulnerabilities. This tool is available as a Docker container image that can be run as a standalone installation or within an orchestration platform. It lets DevOps engineers identify, test, and address vulnerabilities in the Docker images they are using to create applications. It also has the OSS foundation for Anchore Enterprise, which provides policy management, a summary dashboard, user management, security and policy evaluation reports, graphical client controls, and other backend modules and features.\nThere are multiple methods to get started with Anchore Engine. This tool has a simple and easy install process thanks to the Docker compose file. It implements the backend/serverside component for scanning the images. The scanner can be used in the form of a CLI tool such as an Anchore CLI or a Jenkins plugin. It can also scan repositories and add any tags in the repository. Once added, it polls the registry regularly and schedules them to be analyzed. Users of this tool can also extend Anchore Engine with plugins that add new queries, policies, and image analysis. It can be accessed directly via a RESTful API or via the Anchore CLI. The latest installation guides and details are available on the GitHub page as well as on the support knowledge base.\nFalco\nFalco is an open-source Kubernetes-aware security auditing tool. It was created by Sysdig and now it is a part of the Cloud Native Computing Foundation (CNCF). This tool provides behavioral monitoring for containers, network, and host activities. Some key features include complete container visibility using a single sensor that allows DevOps to gain insight into container behavior. It can detect malicious or unknown behavior and send alerts to users by logging and notifications.\nFalco can track and analyze the behavior of actions happening inside the container, including Linux System Calls. It can track container-based incidents including shellcode running inside containers, any container running in privileged mode, mounting of any sensitive directory path (like /proc) from the host, unexpected attempts to read sensitive files (like /etc/shadow), or use of any standard system binary for making outbound network connections. Upon detection of any malicious behavior, like the use of specific system calls, particular arguments or properties of the calling process, it can send alerts to admins.\nClair\nClair is an open-source vulnerability scanner and static analysis tool for container images provided by CoreOS. This tool routinely collects the vulnerability information from multiple sources and stores it in the database. It exposes APIs for clients to perform and invoke scans. Users of this tool can use the Clair API to list their container images, which will create a list of features existing in the image and save them in the database. Also, when updates to vulnerability metadata happen, an alarm/notification can be sent to alert systems that a change has occurred. Several third-party tools can be used with Clair to scan images from a terminal as part of a deploy script. One of the good options is Klar, which can be downloaded from the GitHub page.\nThis tool’s installation details are available at GitHub, and it can be run as a container with Docker. It also comes with a Docker Compose file and a Helm Chart to make the installation easier, or it can be compiled from the source. The goal behind the Clair project is to facilitate a transparent view of the security of the container-based infrastructure. So, the project was named after the French word, which has English meaning of bright, clear, and transparent.\nDagda\nDagda is an open-source tool, which is used to performs static analysis of known vulnerabilities, malware, viruses, Trojans, and other malicious threats in Docker images or containers. It can be used to monitor the Docker daemon and running Docker containers for finding out irregular or uncommon activities. This tool supports several Linux base images such as Red Hat, CentOS, Fedora, Debian, Ubuntu, OpenSUSE, and Alpine.\nDagda also comes with a Docker Compose file as well, which makes it easy to evaluate. Even though Dagda supports the monitoring of containers, it must be integrated with Sysdig Falco (an open-source cloud-native runtime security project). It does not support scanning of registries or repositories, which makes it a more fitting solution for on-demand scans than scheduled registry scans. After installation, vulnerabilities and known exploits database are imported and saved into a MongoDB. Then it collects details about the software installed into a Docker image to verify that each product and its version is free of vulnerabilities against the previously stored details in the MongoDB. Also, this tool uses ClamAV as an antivirus engine for identifying Trojans, malware, viruses, and other malicious threats included within the Docker containers/images. Primary target users for this tool are system administrators, developers, and security professionals. The Docker Compose file and related installation details are available in Dagda’s GitHub repository.\nShutterstock\nOpenSCAP\nOpenSCAP is a command-line auditing tool that enables its users to scan, load, edit, validate, and export SCAP documents. SCAP (Security Content Automation Protocol) is a compliance checking solution for enterprise-level Linux infrastructure, which is maintained by the NIST. It uses the Extensible Configuration Checklist Description Format (XCCDF), a usual way of showing checklist content and outlines security checklists.\nOpenSCAP provides a set of tools for compliance management and scanning, which can scan a container image. With the help of tools like oscap-docker, it can also help users scan for compliance like xccdf (Extensible Configuration Checklist Description Format). This package also has several additional tools/components such as OpenSCAP Base (to perform configuration and vulnerability scans), OpenSCAP Daemon (a service running in the background), SCAP Workbench (a graphical utility that offers an easy way to perform common oscap tasks) and SCAPtimony (middleware that stores SCAP results for user’s infrastructure). The detailed user manual guide of OpenSCAP can be found on the user manual page. Also, the compilation, testing and debugging related information is available at OpenSCAP Developer Manual.\nPick the right open-source security tools for you\nOpen-source security tools play an important role in securing your container-based infrastructure. Tools such as Anchore can be used for strong governance capabilities, while on the other hand, Dagda can be used to perform static analysis of known vulnerabilities. Two other tools, OpenSCAP and Clair, also provide good capabilities for vulnerability scanning and compliance management. So, depending upon your business requirements and priorities, you can select the right tool to secure your container investments.\nFeatured image: Freepik / rawpixel.com\nPost Views: 3,922\nalcideanchore engineclaircloud security toolscontainer applications security toolsdagdaopenSCAP\nHome » Articles » Open-source security tools for cloud and container applications\nAuthor\nTwain Taylor\nMy interests lie in DevOps, IoT, and cloud applications. I began my career in tech B2B marketing at Google India, after which I headed marketing for multiple startups. Today, I consult with companies in The Valley on their content marketing initiatives, and write for tech journals.\nLeave A Reply\nLeave a Reply Cancel reply\nYour email address will not be published. Required fields are marked *\nComment\nName *\nEmail *\nFeatured Product\nJoin Our Newsletter\nLearn about the latest security threats, system optimization tricks, and the hottest new technologies in the industry.\nOver 1,000,000 fellow IT Pros are already on-board, don't be left out!\nI understand that by submitting this form my personal information is subject to the TechGenix Privacy Policy.\nreport this ad\nLatest Podcast\nreport this ad\nFollow Us\nYou are reading\nOpen-source security tools for cloud and container applications\nShare No Comment\nTECHGENIX\nTechGenix reaches millions of IT Professionals every month, and has set the standard for providing free technical content through its growing family of websites, empowering them with the answers and tools that are needed to set up, configure, maintain and enhance their networks.\nRecent Posts\nRebuilding our remote work strategy: It’s more than the tools\nThink your BYOD policy is really secure? You’d better read this now\nIntel unveils new ‘desktop-caliber’ H-series mobile processors\nCopyright © 2020 TechGenix Ltd. | Privacy Policy | Terms &amp; Conditions | Advertise\nPress enter/return to begin your search\nWe'd like to show you notifications for the latest news and updates.\nAllowNo Thanks","ctext":"栏目\n云计算\n亚马逊网络服务\n谷歌云\n混合云\n微软Azure\nOffice 365\n货柜化\n数据中心\n数据中心...\n灾难恢复\n基础设施管理\n存储\n移动技术\nMS Exchange服务器\nMS Exchange服务器...\nMS Exchange服务器......\nMS Exchange服务器.........\nMS Exchange服务器............\nMS Exchange服务器...............\nMS Exchange服务器..................\nMS Exchange服务器.....................\nMS Exchange服务器........................\n工具类\n联网\n物联网\n网络故障排除\nWindows网络\n安全\n安全...\n恶意软件\n恶意软件...\n补丁管理\n勒索软件\n社会工程学\n漏洞\n虚拟化\n思杰\n微软Hoper-V\n码头服务\n虚拟盒子\n的VMware\nWindows服务器\nWindows 10\n科技新闻\n讲解\n评论\n时事通讯\nWServer新闻\nFitITproNews\n播客\n产品目录\n网络研讨会\n关于\n广告\n关于我们\n联系我们\n认识团队\n法律\n隐私政策\n隐私政策...\n栏目\n云计算\n亚马逊网络服务\n谷歌云\n混合云\n微软Azure\nOffice 365\n货柜化\n数据中心\n数据中心...\n灾难恢复\n基础设施管理\n存储\n移动技术\nMS Exchange服务器\nMS Exchange服务器...\nMS Exchange服务器......\nMS Exchange服务器.........\nMS Exchange服务器............\nMS Exchange服务器...............\nMS Exchange服务器..................\nMS Exchange服务器.....................\nMS Exchange服务器........................\n工具类\n联网\n物联网\n网络故障排除\nWindows网络\n安全\n安全...\n恶意软件\n恶意软件...\n补丁管理\n勒索软件\n社会工程学\n漏洞\n虚拟化\n思杰\n微软Hoper-V\n码头服务\n虚拟盒子\n的VMware\nWindows服务器\nWindows 10\n科技新闻\n讲解\n评论\n时事通讯\nWServer新闻\nFitITproNews\n播客\n产品目录\n网络研讨会\n关于\n广告\n关于我们\n联系我们\n认识团队\n法律\n隐私政策\n隐私政策...\n面向云和容器应用程序的开源安全工具\n吐温·泰勒（Twain Taylor）2020年3月18日\n0\n0...\n在脸书上分享\n推特\n在领英上分享\n随着容器的使用变得越来越流行和精简，与容器相关的安全性对企业也变得越来越重要。 集装箱化具有特殊的结构和操作要素，需要特别注意。 与传统的安全性方法相比，架构上的差异（例如容器的共享内核）完全需要不同的安全性方法。 这使得在构建过程的早期阶段了解并执行特定于容器的安全性扫描非常重要。 为了满足DevOps团队的这些动态需求，市场上提供了几种开源安全工具。 本文介绍了DevOps团队可以用来确保容器环境安全的一些流行的开源安全工具。\n刮擦引擎\nAnchore Engine是一个开放源代码安全工具，旨在分析和扫描容器映像中的漏洞。 该工具可以作为Docker容器映像使用，可以作为独立安装或在业务流程平台中运行。 它使DevOps工程师能够识别，测试和解决他们用于创建应用程序的Docker映像中的漏洞。 它还具有Anchore Enterprise的OSS基础，该基础提供了策略管理，摘要仪表板，用户管理，安全和策略评估报告，图形客户端控件以及其他后端模块和功能。\n有多种方法可以开始使用Anchore Engine。 多亏了Docker compose文件，该工具的安装过程非常简单。 它实现了用于扫描图像的后端/服务器端组件。 可以以CLI工具（例如Anchore CLI或Jenkins插件）的形式使用扫描仪。 它还可以扫描存储库并在存储库中添加任何标签。 添加后，它将定期轮询注册表，并安排对其进行分析。 该工具的用户还可以使用添加新查询，策略和图像分析的插件来扩展Anchore Engine。 可以通过RESTful API或Anchore CLI直接访问它。 最新的安装指南和详细信息可在GitHub页面以及支持知识库中找到。\n法尔科\nFalco是一个支持Kubernetes的开源安全审计工具。 它是由Sysdig创建的，现在是Cloud Native Computing Foundation（CNCF）的一部分。 该工具提供了对容器，网络和主机活动的行为监视。 一些关键功能包括使用单个传感器的完整容器可见性，该传感器使DevOps可以深入了解容器行为。 它可以检测恶意或未知行为，并通过日志记录和通知向用户发送警报。\nFalco可以跟踪和分析容器内部发生的动作的行为，包括Linux系统调用。 它可以跟踪基于容器的事件，包括在容器内运行的shellcode，在特权模式下运行的任何容器，从主机装入任何敏感目录路径（例如/ proc），意外读取敏感文件的尝试（例如/ etc / shadow）或 使用任何标准系统二进制文件进行出站网络连接。 一旦检测到任何恶意行为，例如使用特定的系统调用，特定的参数或调用过程的属性，它便可以向管理员发送警报。\n清除\nClair是一个开源漏洞扫描程序和静态分析工具，用于CoreOS提供的容器映像。 该工具会定期从多个来源收集漏洞信息，并将其存储在数据库中。 它公开了供客户端执行和调用扫描的API。 该工具的用户可以使用Clair API列出其容器图像，这将创建图像中现有功能的列表并将其保存在数据库中。 另外，当发生漏洞元数据更新时，可以发送警报/通知以警告系统已发生更改。 作为部署脚本的一部分，Clair可以使用几种第三方工具来从终端扫描图像。 Klar是很好的选择之一，可以从GitHub页面下载。\n该工具的安装详细信息可在GitHub上获得，并且可以作为容器与Docker一起运行。 它还带有Docker Compose文件和Helm Chart，以简化安装过程，也可以从源代码进行编译。 Clair项目的目标是促进以透明的方式了解基于容器的基础架构的安全性。 因此，该项目以法语单词命名，法语单词具有明亮，清晰和透明的英语含义。\n达格达\nDagda是一种开源工具，用于对Docker映像或容器中的已知漏洞，恶意软件，病毒，特洛伊木马和其他恶意威胁执行静态分析。 它可用于监视Docker守护程序并运行Docker容器以发现不规则或不常见的活动。 该工具支持几个Linux基本映像，例如Red Hat，CentOS，Fedora，Debian，Ubuntu，OpenSUSE和Alpine。\nDagda还附带了一个Docker Compose文件，可以轻松评估。即使Dagda支持监视容器，也必须将其与Sysdig Falco（一个开源的云原生运行时安全项目）集成。它不支持对注册表或存储库的扫描，这使其比按计划的注册表扫描更适合按需扫描。安装后，将漏洞和已知漏洞利用数据库导入并保存到MongoDB中。然后，它会收集有关安装在Docker映像中的软件的详细信息，以针对MongoDB中先前存储的详细信息验证每个产品及其版本是否没有漏洞。此外，此工具还将ClamAV用作防病毒引擎，用于识别Docker容器/映像中包含的木马，恶意软件，病毒和其他恶意威胁。该工具的主要目标用户是系统管理员，开发人员和安全专业人员。 Docker Compose文件和相关的安装详细信息可在Dagda的GitHub存储库中找到。\n快门\nOpenSCAP\nOpenSCAP是一个命令行审核工具，它使用户可以扫描，加载，编辑，验证和导出SCAP文档。 SCAP（安全内容自动化协议）是用于企业级Linux基础结构的合规性检查解决方案，由NIST维护。 它使用可扩展配置清单描述格式（XCCDF），这是显示清单内容并概述安全清单的常用方法。\nOpenSCAP提供了一组用于合规性管理和扫描的工具，可以扫描容器映像。 借助oscap-docker等工具，它还可以帮助用户扫描xccdf（可扩展配置清单说明格式）之类的合规性。 该软件包还具有其他一些工具/组件，例如OpenSCAP Base（用于执行配置和漏洞扫描），OpenSCAP Daemon（在后台运行的服务），SCAP Workbench（一种提供执行常见oscap任务的简便方法的图形实用程序） 和SCAPtimony（存储用于用户基础结构的SCAP结果的中间件）。 OpenSCAP的详细用户手册指南可在用户手册页面上找到。 此外，OpenSCAP开发人员手册中提供了与编译，测试和调试相关的信息。\n为您选择合适的开源安全工具\n开源安全工具在保护基于容器的基础结构中起着重要作用。 可以使用诸如Anchore之类的工具来提供强大的治理功能，而另一方面，Dagda可以用于对已知漏洞进行静态分析。 OpenSCAP和Clair这两个其他工具也为漏洞扫描和合规性管理提供了良好的功能。 因此，根据您的业务需求和优先级，您可以选择正确的工具来保护您的容器投资。\n特色图片：Freepik / rawpixel.com\n帖子查看：3,922\nalcideanchore引擎claircloud安全工具容器应用程序安全工具dagdaopenSCAP\n主页»文章»用于云和容器应用程序的开源安全工具\n作者\n吐温·泰勒\n我的兴趣在于DevOps，IoT和云应用程序。 我的职业生涯始于Google印度的技术B2B营销，此后，我领导了多家初创公司的营销。 今天，我就其内容营销计划咨询The Valley公司，并为科技杂志撰写文章。\n发表评论\n发表评论取消回复\n您的电子邮件地址不会被公开。 必需的地方已做标记 *\n评论\nname *\n电邮*\n特色产品\n加入我们的时事通讯\n了解最新的安全威胁，系统优化技巧以及业内最热门的新技术。\n已有超过一百万的IT专业人士加入，请不要错过！\n我了解提交此表格会导致我的个人信息受TechGenix隐私政策的约束。\n报告此广告\n最新播客\n报告此广告\n跟着我们\n您正在阅读\n面向云和容器应用程序的开源安全工具\n分享没有评论\nTECHGENIX\nTechGenix每月都会接触数百万的IT专业人员，并且已经设置了通过其不断增长的网站系列提供免费技术内容的标准，从而为他们提供了设置，配置，维护和增强其网络所需的答案和工具。\n最近的帖子\n重建我们的远程工作策略：不仅仅是工具\n认为您的BYOD政策真的很安全吗？ 你最好现在读这个\n英特尔推出新的“台式机” H系列移动处理器\n英特尔推出新的“台式机” H系列移动处理器...\n按Enter /返回开始搜索\n我们想向您显示有关最新新闻和更新的通知。\n不用了，谢谢\n"}

{"l":"https://rastersoft.com/programas/cronopete.html","n":"cronopete","html":"\n\t\t<header>\n\t\t\t<div class=\"minimenu\"><a href=\"cronopete_es.html\">Español</a></div>\n\t\t\t<img src=\"../imagen/top2.png\" alt=\"fondo de menu\"><span>Rastersoft</span>\n\t\t\t<div class=\"ham\"><a href=\"#\" onclick=\"togglemenu();\"><img src=\"../imagen/hamburguer.png\"></a></div>\n\t\t\t<nav id=\"mainmenu\">\n\t\t\t\t<ul>\n\t\t\t\t\t<li><a href=\"../index.html\">Main</a></li>\n\t\t\t\t\t<li><a href=\"software_en.html\">Programs</a></li>\n\t\t\t\t\t<li><a href=\"https://blog.rastersoft.com\">Blog</a></li>\n\t\t\t\t\t<li><a href=\"../cacharreo/cacharreo.html\">Self-built</a></li>\n\t\t\t\t\t<li><a href=\"../articulos/articulos.html\">Articles</a></li>\n\t\t\t\t\t<li><a href=\"../contacto.html\">Contact</a></li>\n\t\t\t\t</ul>\n\t\t\t</nav>\n\t\t</header>\n\t\t<section class=\"program\">\n\t\t\t<h1>Cronopete</h1>\n\t\t\t<p class=\"version_actual\">\nCurrent version: 4.12.0\n</p>\n<div class=\"screenshot\">\n<a href=\"../imagen/cronopete.png\">\n<img class=\"example\" src=\"../imagen/cronopete_mini.jpg\" alt=\"${PROGRAM_PICTURE_ALT}\">\n</a>\n</div>\n\n<p>Cronopete is a Linux clone of Time Machine, the backup utility for Mac from Apple. It aims to mimic it as closely as possible.</p>\n    <p>As a backup utility, it makes periodically a copy of all the user files in a separate hard disk, thus allowing to recover them in case of accidentally\n    deleting a file, or if the main hard disk gets damaged. Each copy is stored separately (one copy per hour is kept for the last 24 hours, one daily copy for the\n    last 15 days, and one weekly copy for the rest), which means that the user can choose which copy to restore. Files that do not change between backups\n    are stored as hard links, and thus each new copy uses much less disk space than a true full copy. Internally, it uses RSync to do all the backup work.</p>\n<p>The name comes from <i>anacronopete</i> (\"who flies through time\"), which is a time machine featured in the novel from Enrique Gaspar y Rimbaud, and\npublished in 1887 (eight years before than H.G. Wells'<i>Time Machine</i>).</p>\n\n<div style=\"clear:both;\"></div>\n<h2>\nDownloads\n</h2>\n\n<a href=\"https://gitlab.com/rastersoft/cronopete\"><p class=\"git\">GIT Repository</p></a>\n<a href=\"../descargas/cronopete/cronopete-buster_4.12.0-debian1_amd64.deb\" download=\"\"><p class=\"descarga\">Package for Debian buster 64bit (665 Kbytes)</p></a>\n<a href=\"../descargas/cronopete/cronopete-buster_4.12.0-debian1_i386.deb\" download=\"\"><p class=\"descarga\">Package for Debian buster 32bit (675 Kbytes)</p></a>\n<a href=\"../descargas/cronopete/cronopete-sid_4.12.0-debian1_amd64.deb\" download=\"\"><p class=\"descarga\">Package for Debian sid 64bit (665 Kbytes)</p></a>\n<a href=\"../descargas/cronopete/cronopete-sid_4.12.0-debian1_i386.deb\" download=\"\"><p class=\"descarga\">Package for Debian sid 32bit (675 Kbytes)</p></a>\n<a href=\"../descargas/cronopete/cronopete-bionic_4.12.0-ubuntu1_amd64.deb\" download=\"\"><p class=\"descarga\">Package for Ubuntu bionic 64bit (675 Kbytes)</p></a>\n<a href=\"../descargas/cronopete/cronopete-bionic_4.12.0-ubuntu1_i386.deb\" download=\"\"><p class=\"descarga\">Package for Ubuntu bionic 32bit (686 Kbytes)</p></a>\n<a href=\"../descargas/cronopete/cronopete-disco_4.12.0-ubuntu1_amd64.deb\" download=\"\"><p class=\"descarga\">Package for Ubuntu disco 64bit (665 Kbytes)</p></a>\n<a href=\"../descargas/cronopete/cronopete-disco_4.12.0-ubuntu1_i386.deb\" download=\"\"><p class=\"descarga\">Package for Ubuntu disco 32bit (676 Kbytes)</p></a>\n<a href=\"../descargas/cronopete/cronopete.fedora29-4.12.0-1.x86_64.rpm\" download=\"\"><p class=\"descarga\">Package for fedora29 64bit (688 Kbytes)</p></a>\n<a href=\"../descargas/cronopete/cronopete.fedora29-4.12.0-1.i386.rpm\" download=\"\"><p class=\"descarga\">Package for fedora29 32bit (699 Kbytes)</p></a>\n<a href=\"../descargas/cronopete/cronopete-4.12.0-1-x86_64.pkg.tar.xz\" download=\"\"><p class=\"descarga\">Package for Arch Linux 64bit (661 Kbytes)</p></a>\n\n<h2>\nHistory of versions\n</h2>\n\n<ul>\n<li class=\"version\">version 4.12.0 (2019/10/11)</li>\n<li class=\"version_elemento\">Don't show warning if a file vanishes</li>\n<li class=\"version_elemento\">Removed FORK to have two processes</li>\n<li class=\"version_elemento\">Removed timed retry when there is another cronopete process; just exits</li>\n<li class=\"version_elemento\">Now allows to copy to the clipboard the log</li>\n<li class=\"version\">version 4.11.0 (2019/07/22)</li>\n<li class=\"version_elemento\">Detect and notify if the destination disk is too small for backups</li>\n<li class=\"version\">version 4.10.0 (2019/07/14)</li>\n<li class=\"version_elemento\">Don't backup .cache, .dbus, .gvfs or .var/app/*/cache folders</li>\n<li class=\"version_elemento\">Allows to quit cronopete</li>\n<li class=\"version_elemento\">Adjusted some texts in the UI</li>\n<li class=\"version\">version 4.9.0 (2019/05/05)</li>\n<li class=\"version_elemento\">Fixed full disk detection: now, if the disk gets full, it will delete old backups</li>\n<li class=\"version_elemento\">Ensures that, at least, will backup the personal folder if leaved unconfigured</li>\n<li class=\"version_elemento\">Fixed some translations</li>\n<li class=\"version_elemento\">Updated .desktop files texts</li>\n<li class=\"version\">version 4.8.0 (2019/04/20)</li>\n<li class=\"version_elemento\">Now shows an alert if there is a problem during backup</li>\n<li class=\"version_elemento\">Now the warning and error messages are shown in color as expected</li>\n<li class=\"version_elemento\">Updated to Autovala 1.14 (doesn't require python for being compiled with meson)</li>\n<li class=\"version_elemento\">Speeded up the rotating arrow</li>\n<li class=\"version\">version 4.7.0 (2019/02/15)</li>\n<li class=\"version_elemento\">Now doesn't keep stuck trying to delete an old backup which contains one or more files/folders without writting permissions</li>\n<li class=\"version_elemento\">Also now doesn't fill the log with errors when that happens</li>\n<li class=\"version_elemento\">Now detects when the destination folder is read-only and doesn't fail</li>\n<li class=\"version_elemento\">Refactored code to make use of asynchronous functions</li>\n<li class=\"version\">version 4.6.0 (2018/09/07)</li>\n<li class=\"version_elemento\">Now doesn't fail if there are blank spaces in the disk name</li>\n<li class=\"version\">version 4.5.1 (2018/08/25)</li>\n<li class=\"version_elemento\">Can be compiled only with Vala 0.36 or later</li>\n<li class=\"version_elemento\">Updated Czech translation</li>\n<li class=\"version\">version 4.5.0 (2018/08/09)</li>\n<li class=\"version_elemento\">Added extra initialization code</li>\n<li class=\"version\">version 4.4.0 (2018/05/28)</li>\n<li class=\"version_elemento\">Added remote control for unmounting the backup disk</li>\n<li class=\"version\">version 4.3.0 (2018/05/24)</li>\n<li class=\"version_elemento\">Now allows to unmount the backup drive</li>\n<li class=\"version_elemento\">Now shows more information about the drive when formatting a disk to be used for backup</li>\n<li class=\"version_elemento\">Updated translations</li>\n<li class=\"version\">version 4.2.0 (2018/05/11)</li>\n<li class=\"version_elemento\">Now only sets low priority to RSYNC itself, not to the whole program</li>\n<li class=\"version_elemento\">Better management of external disks with UDisks2</li>\n<li class=\"version_elemento\">Now the format doesn't fail if it last too much time</li>\n<li class=\"version_elemento\">Fixed french translation (thanks to Maieul)</li>\n<li class=\"version_elemento\">Now doesn't show CDROMs or Squashfs file systems</li>\n<li class=\"version\">version 4.1.1 (2018/05/08)</li>\n<li class=\"version_elemento\">Allows to open an specific folder to restore files (allows to integrate with file managers)</li>\n<li class=\"version_elemento\">Preliminar integration with Nautilus</li>\n<li class=\"version\">version 4.1.0 (2018/05/06)</li>\n<li class=\"version_elemento\">Now detects better the external disks</li>\n<li class=\"version\">version 4.0.1 (2018/04/23)</li>\n<li class=\"version_elemento\">Updated GL translation</li>\n<li class=\"version\">version 4.0.0 (2018/04/19)</li>\n<li class=\"version_elemento\">Code refactorization</li>\n<li class=\"version_elemento\">Now utilizes RSYNC instead of own code</li>\n<li class=\"version_elemento\">Allows to go to a date in the restore interface by clicking in the timeline</li>\n<li class=\"version_elemento\">Shows dates in the timeline when restoring files</li>\n<li class=\"version_elemento\">Now remembers whether the user preffers an icon view or an icon list in the restore window</li>\n<li class=\"version_elemento\">Allows to sort the files and folders in the restore window by clicking on the column name</li>\n<li class=\"version_elemento\">Shows the file type in the restore window and allows to sort by file type</li>\n<li class=\"version_elemento\">Added extra security checks when deleting old backups</li>\n<li class=\"version_elemento\">Now ensures that half-deleted old backups won't interfere with the restoring window, and won't be used as base for a backup</li>\n<li class=\"version_elemento\">Uses the current Gtk fonts in the restore interface</li>\n<li class=\"version_elemento\">Ensures that the main \"cronopete\" folder is writable by anyone, to allow to use the same disk by several users in the same computer</li>\n<li class=\"version_elemento\">Ensures that the backup folder for each user is readable and writable ONLY by the owner, to ensure security and privacy</li>\n<li class=\"version_elemento\">Now deletes the old backups after doing the backup, not before, to ensure to make the first backup as soon as possible</li>\n<li class=\"version_elemento\">Architecture designed to allow the use of new backends in an easier way</li>\n<li class=\"version_elemento\">Now shows the capacity in GB instead of Gib</li>\n<li class=\"version_elemento\">Uses colors when showing warning and error messages in the log</li>\n<li class=\"version_elemento\">Experimental backend for backing up to a \"folder\" instead of an \"external disk\"</li>\n<li class=\"version\">version 3.27.0 (2018/02/04)</li>\n<li class=\"version_elemento\">Now ignores backups \"from the future\" to avoid troubles when creating new backups or listing them</li>\n<li class=\"version\">version 3.26.2 (2018/01/21)</li>\n<li class=\"version_elemento\">Added German translation</li>\n<li class=\"version\">version 3.26.1 (2017/08/26)</li>\n<li class=\"version_elemento\">Added french translation</li>\n<li class=\"version\">version 3.26.0 (2017/06/17)</li>\n<li class=\"version_elemento\">Code cleanup that should fix the folders with odd names</li>\n<li class=\"version\">version 3.25.0 (2017/04/04)</li>\n<li class=\"version_elemento\">Now shows an error if trying to restore files without the backup disk</li>\n<li class=\"version_elemento\">Updated Czech translation</li>\n<li class=\"version\">version 3.24.0 (2017/02/10)</li>\n<li class=\"version_elemento\">Now the restored file is the original one if there is no file with that name in the destination folder</li>\n<li class=\"version_elemento\">Fixed the bookmarks and the path buttons in the restore interface</li>\n<li class=\"version_elemento\">Now doesn't fail to restore files when the destination folder doesn't exist</li>\n<li class=\"version\">version 3.23.0 (2017/02/10)</li>\n<li class=\"version_elemento\">Now supports external drives with blank spaces in their name</li>\n<li class=\"version\">version 3.22.0 (2016/11/10)</li>\n<li class=\"version_elemento\">Now ensures that it doesn't die accidentally</li>\n<li class=\"version_elemento\">Fixed a coding bug with internal IPC</li>\n<li class=\"version\">version 3.21.0 (2015/12/05)</li>\n<li class=\"version_elemento\">Now launches cronopete automagically when calling \"restore\" or \"settings\" icons from the launch menu (DBUS activation works again)</li>\n<li class=\"version\">version 3.20.2 (2015/12/05)</li>\n<li class=\"version_elemento\">Fixed again the cathegories in the .desktop files</li>\n<li class=\"version\">version 3.20.1 (2015/12/05)</li>\n<li class=\"version_elemento\">Fixed the cathegories in the .desktop files</li>\n<li class=\"version\">version 3.20.0 (2015/09/10)</li>\n<li class=\"version_elemento\">The multithreading race condition that made cronopete to crash randomly seems to be fixed</li>\n<li class=\"version_elemento\">Removed deprecated GTK functions and properties</li>\n<li class=\"version\">version 3.19.0 (2015/08/30)</li>\n<li class=\"version_elemento\">Updated to Vala 0.26</li>\n<li class=\"version_elemento\">Now uses the new Thread and Mutex syntax</li>\n<li class=\"version_elemento\">Removed deprecated parameters in glade files</li>\n<li class=\"version_elemento\">Now does all the string processing in the main thread</li>\n<li class=\"version\">version 3.18.5 (2015/04/23)</li>\n<li class=\"version_elemento\">Fixed a bug when detecting and listing hard disks</li>\n<li class=\"version\">version 3.18.4 (2015/04/04)</li>\n<li class=\"version_elemento\">Now uses only the UUID to find disks, to guarantee that the path used is the right one, even if it changes after launching cronopete</li>\n<li class=\"version_elemento\">If the backup is enabled, cronopete will remount the disk if it is unmounted; if the backup is disabled, the disk can be removed</li>\n<li class=\"version_elemento\">Now shows the GTK2 and GTK3 bookmarks in the Restore files window</li>\n<li class=\"version_elemento\">The window asking for formating a disk now has the right size</li>\n<li class=\"version_elemento\">Code cleanup</li>\n<li class=\"version_elemento\">Removed deprecated GTK and GDK methods, like Gtk.Stock</li>\n<li class=\"version\">version 3.18.3 (2015/04/03)</li>\n<li class=\"version_elemento\">Migrated to UDisks2, to fix the problems when formating disks</li>\n<li class=\"version\">version 3.18.2 (2015/04/03)</li>\n<li class=\"version_elemento\">Now doesn't fail if, at startup, the hard disk isn't mounted</li>\n<li class=\"version_elemento\">Now the main window doesn't get expanded if the status text is too big</li>\n<li class=\"version\">version 3.18.1 (2015/04/03)</li>\n<li class=\"version_elemento\">Fixed bugs when choosing a new disk</li>\n<li class=\"version\">version 3.18.0 (2015/04/02)</li>\n<li class=\"version_elemento\">Now searchs disks using the UUID</li>\n<li class=\"version\">version 3.17.0 (2015/02/23)</li>\n<li class=\"version_elemento\">Added Czech translation</li>\n<li class=\"version_elemento\">Fixed the icon path</li>\n<li class=\"version_elemento\">Allows to add several folders simultaneously</li>\n<li class=\"version\">version 3.16.0 (2014/08/08)</li>\n<li class=\"version_elemento\">Removed GTK2 support</li>\n<li class=\"version_elemento\">Fixed the problems when mixing fullscreen and popup windows</li>\n<li class=\"version\">version 3.15.3 (2013/12/14)</li>\n<li class=\"version_elemento\">Now uses Gee 0.8</li>\n<li class=\"version\">version 3.15.2 (2013/11/01)</li>\n<li class=\"version_elemento\">Fixed galician translation</li>\n<li class=\"version_elemento\">Removed the access to GTK from several threads</li>\n<li class=\"version_elemento\">The CANCEL button when choosing a folder to (or not) backup now works</li>\n<li class=\"version_elemento\">Now doesn't fail if pressing the ACCEPT button in the folder selection dialog without a folder selected</li>\n<li class=\"version_elemento\">Now removes the wellcome message also if the user shows the configuration dialog</li>\n<li class=\"version\">version 3.15.1 (2013/10/26)</li>\n<li class=\"version_elemento\">Added a Welcome window</li>\n<li class=\"version\">version 3.15.0 (2013/10/26)</li>\n<li class=\"version_elemento\">Now doesn't hang when trying to set the partition type during disk formating</li>\n<li class=\"version_elemento\">Changed the schema path from &lt;i&gt;apps.cronopete&lt;/i&gt; to &lt;i&gt;org.rastersoft.cronopete&lt;/i&gt; to be compliant with the Gnome rules (requires reconfiguration!!!)</li>\n<li class=\"version_elemento\">Removed formating in ReiserFS; now only formats in Ext4, but still supports ReiserFS if formated manually by the user</li>\n<li class=\"version_elemento\">Allows to show the non-usb disks directly from the interface</li>\n<li class=\"version_elemento\">Now automounts the drive during launch</li>\n<li class=\"version_elemento\">Build system migrated to Autovala+CMake</li>\n<li class=\"version_elemento\">The code now uses the data automatically detected by Autovala</li>\n<li class=\"version\">version 3.14.0 (2013/06/15)</li>\n<li class=\"version_elemento\">Fixed the refresh bug when the timer line has to do a big jump.</li>\n<li class=\"version\">version 3.13.0 (2013/06/09)</li>\n<li class=\"version_elemento\">Fixed picture refresh bug in the file restoring system.</li>\n<li class=\"version_elemento\">Fixed bug when formating external drives without partition table.</li>\n<li class=\"version_elemento\">Removed several deprecated calls.</li>\n<li class=\"version\">version 3.12.0 (2013/05/11)</li>\n<li class=\"version_elemento\">Fixed a bug when trying to do a backup in a disk 100% full.</li>\n<li class=\"version\">version 3.11.0 (2013/05/05)</li>\n<li class=\"version_elemento\">Added a delay to avoid failure launch in Gnome Shell</li>\n<li class=\"version_elemento\">Fixed return value in DRAW y EXPOSE-EVENT callbacks</li>\n<li class=\"version\">version 3.10.0 (2013/01/27)</li>\n<li class=\"version_elemento\">Fixed colors in symbolic icons.</li>\n<li class=\"version\">version 3.9.0 ()</li>\n<li class=\"version_elemento\">Development version</li>\n<li class=\"version\">version 3.8.0/1 (2013/01/20)</li>\n<li class=\"version_elemento\">Fixed the scroll and the icons in the restore interface.</li>\n<li class=\"version_elemento\">Fixed the background painting in the restore interface.</li>\n<li class=\"version_elemento\">Added texts in the buttons of the restore interface.</li>\n<li class=\"version_elemento\">Fixed compilation under Gtk2.</li>\n<li class=\"version_elemento\">Added .deb packages for Gtk2.</li>\n<li class=\"version\">version 3.7.0 ()</li>\n<li class=\"version_elemento\">Development version</li>\n<li class=\"version\">version 3.6.0 (2012/12/21)</li>\n<li class=\"version_elemento\">New restoring interface</li>\n<li class=\"version_elemento\">Allows to use internal, non-removable drives (for testing)</li>\n<li class=\"version_elemento\">Added new icons based in the -symbolic standard</li>\n<li class=\"version_elemento\">Fixed the bug that made the restore window to grow each time the user changed the folder</li>\n<li class=\"version_elemento\">Changed DBus bus from com.backup.cronopete to com.rastersoft.cronopete</li>\n<li class=\"version\">version 3.5.0 ()</li>\n<li class=\"version_elemento\">Development version</li>\n<li class=\"version\">version 3.4.6 (2012/10/28)</li>\n<li class=\"version_elemento\">The configuration icon in Elementary will keep in the icon window</li>\n<li class=\"version_elemento\">Removed sleep during startup because, with libappnotify, it's not needed</li>\n<li class=\"version_elemento\">Now doesn't recreate the menu in the system bar each time something changes, but takes advantage of the capabilities of libappindicator (when used)</li>\n<li class=\"version\">version 3.4.5 (2012/10/17)</li>\n<li class=\"version_elemento\">Added D-Bus activation, to launch Cronopete when opening the configuration icon</li>\n<li class=\"version_elemento\">CMake files modified to ensure that the autostart file is copied in the right place even when using a non-standard folder</li>\n<li class=\"version_elemento\">Included the Vala CMake files</li>\n<li class=\"version_elemento\">Added control files for PPA repositories with DEB packages for Ubuntu and Elementary OS</li>\n<li class=\"version\">version 3.4.0 (2012/10/13)</li>\n<li class=\"version_elemento\">Changed to CMake</li>\n<li class=\"version_elemento\">Optional support for libappindicator</li>\n<li class=\"version_elemento\">Simplified messages</li>\n<li class=\"version_elemento\">New graphics</li>\n<li class=\"version_elemento\">Added a progress bar for each file being restored</li>\n<li class=\"version_elemento\">Now uses GConf to store the configuration</li>\n<li class=\"version_elemento\">Now shows only external devices when asking for a drive</li>\n<li class=\"version_elemento\">Added a .PLUG file for Elementary OS compatibility</li>\n<li class=\"version_elemento\">Allows to show or hide the icon in the main bar</li>\n<li class=\"version\">version 3.2.0 (2012/09/09)</li>\n<li class=\"version_elemento\">Now compiles with Vala 0.16 (compatible with Debian)</li>\n<li class=\"version_elemento\">Now new disks are formatted right, without returning a false error</li>\n<li class=\"version_elemento\">Disks are also formatted when the access rights are incorrect</li>\n<li class=\"version_elemento\">Added icons in windows and in window manager</li>\n<li class=\"version_elemento\">Now it uses asynchronous calls when restoring files, instead of a thread</li>\n<li class=\"version_elemento\">Reduced FPS in clock animation to reduce CPU usage</li>\n<li class=\"version_elemento\">Added a \"Restored ended successfully\" message at the end of file restoration</li>\n<li class=\"version_elemento\">Now also shows the date in the windows titlebar during file restoring</li>\n<li class=\"version_elemento\">Updated animation during restoring to do it more efficient and smooth when not having GPU acceleration</li>\n<li class=\"version\">version 3.1.0 ()</li>\n<li class=\"version_elemento\">Internal version</li>\n<li class=\"version\">version 3.0.0 (2011/12/18)</li>\n<li class=\"version_elemento\">Added support for GTK3 (GTK2 still supported)</li>\n<li class=\"version_elemento\">Now keeps the file extension when restoring a file</li>\n<li class=\"version\">version 2.3.0 (2011/12/02)</li>\n<li class=\"version_elemento\">Added launcher from main menu, for systems without systray</li>\n<li class=\"version_elemento\">Added Dbus remote control</li>\n<li class=\"version_elemento\">Added icon cache to speed up the restoring interface</li>\n<li class=\"version\">version 2.2.0 (2011/11/18)</li>\n<li class=\"version_elemento\">It made a window capture when changing the restore view to list or icons. Fixed.</li>\n<li class=\"version_elemento\">Fixed a core dump when unmounting the hard disk after launching the restore interface.</li>\n<li class=\"version\">version 2.1.0 (2011/11/13)</li>\n<li class=\"version_elemento\">Little modification to ensure that the zoom effect works better in slow computers.</li>\n<li class=\"version\">version 2.0.0 (2011/11/11)</li>\n<li class=\"version_elemento\">Added an interface to restore files from the backups.</li>\n<li class=\"version\">version 1.3.0 (2011/10/23)</li>\n<li class=\"version_elemento\">Cronopete closes when trying to format a NTFS-formated external drive. Fixed.</li>\n<li class=\"version\">version 1.2.0 (2011/10/07)</li>\n<li class=\"version_elemento\">Now keeps the modified date and time of the folders in the backups</li>\n<li class=\"version\">version 1.1.0 (2011/09/17)</li>\n<li class=\"version_elemento\">Allows to set the time interval between backups</li>\n<li class=\"version_elemento\">Allows to choose the installation folder in the Makefile</li>\n<li class=\"version_elemento\">Fixed a bug that produced a clock skew of five minutes; now the backups are done precisely at time</li>\n<li class=\"version_elemento\">Now the popup menu is shown under the main bar, not over it</li>\n<li class=\"version_elemento\">Some little adjustments in the interface</li>\n<li class=\"version\">version 1.0.0 (2011/09/03)</li>\n<li class=\"version_elemento\">First public version</li>\n</ul>\n\n\t\t</section>\n\t\t<footer>\n\t\t\t\t<p class=\"copyright\">©1996-2020 Raster Software, Vigo. All rights reserved.</p>\n\t\t</footer>\n\t\n\n","text":"Español\nRastersoft\nMain\nPrograms\nBlog\nSelf-built\nArticles\nContact\nCronopete\nCurrent version: 4.12.0\nCronopete is a Linux clone of Time Machine, the backup utility for Mac from Apple. It aims to mimic it as closely as possible.\nAs a backup utility, it makes periodically a copy of all the user files in a separate hard disk, thus allowing to recover them in case of accidentally deleting a file, or if the main hard disk gets damaged. Each copy is stored separately (one copy per hour is kept for the last 24 hours, one daily copy for the last 15 days, and one weekly copy for the rest), which means that the user can choose which copy to restore. Files that do not change between backups are stored as hard links, and thus each new copy uses much less disk space than a true full copy. Internally, it uses RSync to do all the backup work.\nThe name comes from anacronopete (\"who flies through time\"), which is a time machine featured in the novel from Enrique Gaspar y Rimbaud, and\npublished in 1887 (eight years before than H.G. Wells'Time Machine).\nDownloads\nGIT Repository\nPackage for Debian buster 64bit (665 Kbytes)\nPackage for Debian buster 32bit (675 Kbytes)\nPackage for Debian sid 64bit (665 Kbytes)\nPackage for Debian sid 32bit (675 Kbytes)\nPackage for Ubuntu bionic 64bit (675 Kbytes)\nPackage for Ubuntu bionic 32bit (686 Kbytes)\nPackage for Ubuntu disco 64bit (665 Kbytes)\nPackage for Ubuntu disco 32bit (676 Kbytes)\nPackage for fedora29 64bit (688 Kbytes)\nPackage for fedora29 32bit (699 Kbytes)\nPackage for Arch Linux 64bit (661 Kbytes)\nHistory of versions\nversion 4.12.0 (2019/10/11)\nDon't show warning if a file vanishes\nRemoved FORK to have two processes\nRemoved timed retry when there is another cronopete process; just exits\nNow allows to copy to the clipboard the log\nversion 4.11.0 (2019/07/22)\nDetect and notify if the destination disk is too small for backups\nversion 4.10.0 (2019/07/14)\nDon't backup .cache, .dbus, .gvfs or .var/app/*/cache folders\nAllows to quit cronopete\nAdjusted some texts in the UI\nversion 4.9.0 (2019/05/05)\nFixed full disk detection: now, if the disk gets full, it will delete old backups\nEnsures that, at least, will backup the personal folder if leaved unconfigured\nFixed some translations\nUpdated .desktop files texts\nversion 4.8.0 (2019/04/20)\nNow shows an alert if there is a problem during backup\nNow the warning and error messages are shown in color as expected\nUpdated to Autovala 1.14 (doesn't require python for being compiled with meson)\nSpeeded up the rotating arrow\nversion 4.7.0 (2019/02/15)\nNow doesn't keep stuck trying to delete an old backup which contains one or more files/folders without writting permissions\nAlso now doesn't fill the log with errors when that happens\nNow detects when the destination folder is read-only and doesn't fail\nRefactored code to make use of asynchronous functions\nversion 4.6.0 (2018/09/07)\nNow doesn't fail if there are blank spaces in the disk name\nversion 4.5.1 (2018/08/25)\nCan be compiled only with Vala 0.36 or later\nUpdated Czech translation\nversion 4.5.0 (2018/08/09)\nAdded extra initialization code\nversion 4.4.0 (2018/05/28)\nAdded remote control for unmounting the backup disk\nversion 4.3.0 (2018/05/24)\nNow allows to unmount the backup drive\nNow shows more information about the drive when formatting a disk to be used for backup\nUpdated translations\nversion 4.2.0 (2018/05/11)\nNow only sets low priority to RSYNC itself, not to the whole program\nBetter management of external disks with UDisks2\nNow the format doesn't fail if it last too much time\nFixed french translation (thanks to Maieul)\nNow doesn't show CDROMs or Squashfs file systems\nversion 4.1.1 (2018/05/08)\nAllows to open an specific folder to restore files (allows to integrate with file managers)\nPreliminar integration with Nautilus\nversion 4.1.0 (2018/05/06)\nNow detects better the external disks\nversion 4.0.1 (2018/04/23)\nUpdated GL translation\nversion 4.0.0 (2018/04/19)\nCode refactorization\nNow utilizes RSYNC instead of own code\nAllows to go to a date in the restore interface by clicking in the timeline\nShows dates in the timeline when restoring files\nNow remembers whether the user preffers an icon view or an icon list in the restore window\nAllows to sort the files and folders in the restore window by clicking on the column name\nShows the file type in the restore window and allows to sort by file type\nAdded extra security checks when deleting old backups\nNow ensures that half-deleted old backups won't interfere with the restoring window, and won't be used as base for a backup\nUses the current Gtk fonts in the restore interface\nEnsures that the main \"cronopete\" folder is writable by anyone, to allow to use the same disk by several users in the same computer\nEnsures that the backup folder for each user is readable and writable ONLY by the owner, to ensure security and privacy\nNow deletes the old backups after doing the backup, not before, to ensure to make the first backup as soon as possible\nArchitecture designed to allow the use of new backends in an easier way\nNow shows the capacity in GB instead of Gib\nUses colors when showing warning and error messages in the log\nExperimental backend for backing up to a \"folder\" instead of an \"external disk\"\nversion 3.27.0 (2018/02/04)\nNow ignores backups \"from the future\" to avoid troubles when creating new backups or listing them\nversion 3.26.2 (2018/01/21)\nAdded German translation\nversion 3.26.1 (2017/08/26)\nAdded french translation\nversion 3.26.0 (2017/06/17)\nCode cleanup that should fix the folders with odd names\nversion 3.25.0 (2017/04/04)\nNow shows an error if trying to restore files without the backup disk\nUpdated Czech translation\nversion 3.24.0 (2017/02/10)\nNow the restored file is the original one if there is no file with that name in the destination folder\nFixed the bookmarks and the path buttons in the restore interface\nNow doesn't fail to restore files when the destination folder doesn't exist\nversion 3.23.0 (2017/02/10)\nNow supports external drives with blank spaces in their name\nversion 3.22.0 (2016/11/10)\nNow ensures that it doesn't die accidentally\nFixed a coding bug with internal IPC\nversion 3.21.0 (2015/12/05)\nNow launches cronopete automagically when calling \"restore\" or \"settings\" icons from the launch menu (DBUS activation works again)\nversion 3.20.2 (2015/12/05)\nFixed again the cathegories in the .desktop files\nversion 3.20.1 (2015/12/05)\nFixed the cathegories in the .desktop files\nversion 3.20.0 (2015/09/10)\nThe multithreading race condition that made cronopete to crash randomly seems to be fixed\nRemoved deprecated GTK functions and properties\nversion 3.19.0 (2015/08/30)\nUpdated to Vala 0.26\nNow uses the new Thread and Mutex syntax\nRemoved deprecated parameters in glade files\nNow does all the string processing in the main thread\nversion 3.18.5 (2015/04/23)\nFixed a bug when detecting and listing hard disks\nversion 3.18.4 (2015/04/04)\nNow uses only the UUID to find disks, to guarantee that the path used is the right one, even if it changes after launching cronopete\nIf the backup is enabled, cronopete will remount the disk if it is unmounted; if the backup is disabled, the disk can be removed\nNow shows the GTK2 and GTK3 bookmarks in the Restore files window\nThe window asking for formating a disk now has the right size\nCode cleanup\nRemoved deprecated GTK and GDK methods, like Gtk.Stock\nversion 3.18.3 (2015/04/03)\nMigrated to UDisks2, to fix the problems when formating disks\nversion 3.18.2 (2015/04/03)\nNow doesn't fail if, at startup, the hard disk isn't mounted\nNow the main window doesn't get expanded if the status text is too big\nversion 3.18.1 (2015/04/03)\nFixed bugs when choosing a new disk\nversion 3.18.0 (2015/04/02)\nNow searchs disks using the UUID\nversion 3.17.0 (2015/02/23)\nAdded Czech translation\nFixed the icon path\nAllows to add several folders simultaneously\nversion 3.16.0 (2014/08/08)\nRemoved GTK2 support\nFixed the problems when mixing fullscreen and popup windows\nversion 3.15.3 (2013/12/14)\nNow uses Gee 0.8\nversion 3.15.2 (2013/11/01)\nFixed galician translation\nRemoved the access to GTK from several threads\nThe CANCEL button when choosing a folder to (or not) backup now works\nNow doesn't fail if pressing the ACCEPT button in the folder selection dialog without a folder selected\nNow removes the wellcome message also if the user shows the configuration dialog\nversion 3.15.1 (2013/10/26)\nAdded a Welcome window\nversion 3.15.0 (2013/10/26)\nNow doesn't hang when trying to set the partition type during disk formating\nChanged the schema path from &lt;i&gt;apps.cronopete&lt;/i&gt; to &lt;i&gt;org.rastersoft.cronopete&lt;/i&gt; to be compliant with the Gnome rules (requires reconfiguration!!!)\nRemoved formating in ReiserFS; now only formats in Ext4, but still supports ReiserFS if formated manually by the user\nAllows to show the non-usb disks directly from the interface\nNow automounts the drive during launch\nBuild system migrated to Autovala+CMake\nThe code now uses the data automatically detected by Autovala\nversion 3.14.0 (2013/06/15)\nFixed the refresh bug when the timer line has to do a big jump.\nversion 3.13.0 (2013/06/09)\nFixed picture refresh bug in the file restoring system.\nFixed bug when formating external drives without partition table.\nRemoved several deprecated calls.\nversion 3.12.0 (2013/05/11)\nFixed a bug when trying to do a backup in a disk 100% full.\nversion 3.11.0 (2013/05/05)\nAdded a delay to avoid failure launch in Gnome Shell\nFixed return value in DRAW y EXPOSE-EVENT callbacks\nversion 3.10.0 (2013/01/27)\nFixed colors in symbolic icons.\nversion 3.9.0 ()\nDevelopment version\nversion 3.8.0/1 (2013/01/20)\nFixed the scroll and the icons in the restore interface.\nFixed the background painting in the restore interface.\nAdded texts in the buttons of the restore interface.\nFixed compilation under Gtk2.\nAdded .deb packages for Gtk2.\nversion 3.7.0 ()\nDevelopment version\nversion 3.6.0 (2012/12/21)\nNew restoring interface\nAllows to use internal, non-removable drives (for testing)\nAdded new icons based in the -symbolic standard\nFixed the bug that made the restore window to grow each time the user changed the folder\nChanged DBus bus from com.backup.cronopete to com.rastersoft.cronopete\nversion 3.5.0 ()\nDevelopment version\nversion 3.4.6 (2012/10/28)\nThe configuration icon in Elementary will keep in the icon window\nRemoved sleep during startup because, with libappnotify, it's not needed\nNow doesn't recreate the menu in the system bar each time something changes, but takes advantage of the capabilities of libappindicator (when used)\nversion 3.4.5 (2012/10/17)\nAdded D-Bus activation, to launch Cronopete when opening the configuration icon\nCMake files modified to ensure that the autostart file is copied in the right place even when using a non-standard folder\nIncluded the Vala CMake files\nAdded control files for PPA repositories with DEB packages for Ubuntu and Elementary OS\nversion 3.4.0 (2012/10/13)\nChanged to CMake\nOptional support for libappindicator\nSimplified messages\nNew graphics\nAdded a progress bar for each file being restored\nNow uses GConf to store the configuration\nNow shows only external devices when asking for a drive\nAdded a .PLUG file for Elementary OS compatibility\nAllows to show or hide the icon in the main bar\nversion 3.2.0 (2012/09/09)\nNow compiles with Vala 0.16 (compatible with Debian)\nNow new disks are formatted right, without returning a false error\nDisks are also formatted when the access rights are incorrect\nAdded icons in windows and in window manager\nNow it uses asynchronous calls when restoring files, instead of a thread\nReduced FPS in clock animation to reduce CPU usage\nAdded a \"Restored ended successfully\" message at the end of file restoration\nNow also shows the date in the windows titlebar during file restoring\nUpdated animation during restoring to do it more efficient and smooth when not having GPU acceleration\nversion 3.1.0 ()\nInternal version\nversion 3.0.0 (2011/12/18)\nAdded support for GTK3 (GTK2 still supported)\nNow keeps the file extension when restoring a file\nversion 2.3.0 (2011/12/02)\nAdded launcher from main menu, for systems without systray\nAdded Dbus remote control\nAdded icon cache to speed up the restoring interface\nversion 2.2.0 (2011/11/18)\nIt made a window capture when changing the restore view to list or icons. Fixed.\nFixed a core dump when unmounting the hard disk after launching the restore interface.\nversion 2.1.0 (2011/11/13)\nLittle modification to ensure that the zoom effect works better in slow computers.\nversion 2.0.0 (2011/11/11)\nAdded an interface to restore files from the backups.\nversion 1.3.0 (2011/10/23)\nCronopete closes when trying to format a NTFS-formated external drive. Fixed.\nversion 1.2.0 (2011/10/07)\nNow keeps the modified date and time of the folders in the backups\nversion 1.1.0 (2011/09/17)\nAllows to set the time interval between backups\nAllows to choose the installation folder in the Makefile\nFixed a bug that produced a clock skew of five minutes; now the backups are done precisely at time\nNow the popup menu is shown under the main bar, not over it\nSome little adjustments in the interface\nversion 1.0.0 (2011/09/03)\nFirst public version\n©1996-2020 Raster Software, Vigo. All rights reserved.","ctext":"西班牙文\n光栅软件\n主要\n程式\n博客\n自建\n文章\n联系\nCronopete\n当前版本：4.12.0\nCronopete是Time Machine的Linux克隆，Time Machine是Apple的Mac备份工具。 它旨在尽可能地模仿它。\n作为备份实用程序，它会定期在单独的硬盘中复制所有用户文件，从而在意外删除文件或主硬盘损坏的情况下可以恢复它们。 每份副本分别存储（过去24小时每小时保留一份副本，过去15天每天保留一份副本，其余则每周保留一份副本），这意味着用户可以选择要还原的副本。 备份之间不变的文件存储为硬链接，因此每个新副本使用的磁盘空间都比真正的完整副本少得多。 在内部，它使用RSync来完成所有备份工作。\n该名称来自anacronopete（“穿越时空的人”），这是Enrique Gaspar y Rimbaud的小说中的时间机器，以及\n1887年出版（比H.G. Wells'Time Machine早八年）。\n资料下载\nGIT存储库\nDebian buster 64bit软件包（665 KB）\nDebian buster 32bit软件包（675 KB）\nDebian sid 64bit的软件包（665 KB）\nDebian sid 32bit的软件包（675 KB）\nUbuntu仿生64位软件包（675 KB）\nUbuntu仿生32位（686 KB）软件包\nUbuntu迪斯科64位软件包（665 KB）\nUbuntu迪斯科32位软件包（676 KB）\nfedora29 64bit（688 Kbytes）的软件包\nfedora 29 32位（699 KB）的软件包\n用于Arch Linux 64位（661 KB）的软件包\n版本历史\n版本4.12.0（2019/10/11）\n如果文件消失，则不显示警告\n删除了FORK，使其具有两个过程\n当存在另一个cronopete进程时，删除了定时重试； 刚刚退出\n现在允许将日志复制到剪贴板\n版本4.11.0（2019/07/22）\n检测并通知目标磁盘是否太小而无法进行备份\n版本4.10.0（2019/07/14）\n不要备份.cache，.dbus，.gvfs或.var / app / * / cache文件夹\n允许退出cronopete\n调整了用户界面中的一些文本\n版本4.9.0（2019/05/05）\n修复了完整磁盘检测：现在，如果磁盘已满，它将删除旧备份\n确保至少在未配置的情况下备份个人文件夹\n修复了一些翻译\n更新的.desktop文件文本\n版本4.8.0（2019/04/20）\n现在显示备份期间出现问题的警报\n现在，警告和错误消息以预期的颜色显示\n更新到Autovala 1.14（不需要使用介子编译python）\n加快旋转箭头\n版本4.7.0（2019/02/15）\n现在无需尝试删除包含一个或多个文件/文件夹的旧备份而无需写权限就不会遇到麻烦\n现在在发生这种情况时现在也不会用错误填充日志\n现在检测目标文件夹何时为只读且不会失败\n重构代码以使用异步功能\n版本4.6.0（2018/09/07）\n如果磁盘名称中有空格，现在不会失败\n版本4.5.1（2018/08/25）\n只能使用Vala 0.36或更高版本进行编译\n更新捷克语翻译\n版本4.5.0（2018/08/09）\n添加了额外的初始化代码\n版本4.4.0（2018/05/28）\n添加了用于卸载备份磁盘的远程控制\n版本4.3.0（2018/05/24）\n现在允许卸载备份驱动器\n现在在格式化要用于备份的磁盘时显示有关驱动器的更多信息\n更新的翻译\n版本4.2.0（2018/05/11）\n现在只为RSYNC本身设置低优先级，而不是整个程序\n使用UDisks2更好地管理外部磁盘\n现在，如果持续太多时间，格式不会失败\n固定法语翻译（感谢Maieul）\n现在不显示CDROM或Squashfs文件系统\n版本4.1.1（2018/05/08）\n允许打开特定的文件夹来还原文件（允许与文件管理器集成）\n与Nautilus的初步集成\n版本4.1.0（2018/05/06）\n现在可以更好地检测外部磁盘\n版本4.0.1（2018/04/23）\n更新了GL翻译\n版本4.0.0（2018/04/19）\n代码重构\n现在利用RSYNC代替自己的代码\n通过单击时间线，可以在还原界面中找到日期\n恢复文件时在时间轴上显示日期\n现在可以记住用户是否在还原窗口中显示图标视图或图标列表\n通过单击列名称，可以对还原窗口中的文件和文件夹进行排序\n在还原窗口中显示文件类型，并允许按文件类型排序\n删除旧备份时添加了额外的安全检查\n现在，确保半删除的旧备份不会干扰还原窗口，并且不会用作备份的基础\n在还原界面中使用当前的Gtk字体\n确保任何人都可以写入主“ cronopete”文件夹，以允许同一台计算机上的多个用户使用同一磁盘\n确保所有者只能读写每个用户的备份文件夹，以确保安全和隐私\n现在，请在执行备份后而不是之前删除旧备份，以确保尽快进行第一次备份\n旨在允许更轻松地使用新后端的体系结构\n现在以GB代替Gib显示容量\n在日志中显示警告和错误消息时使用颜色\n实验性后端，用于备份到“文件夹”而不是“外部磁盘”\n版本3.27.0（2018/02/04）\n现在忽略“将来”的备份，以避免在创建新备份或列出备份时遇到麻烦\n版本3.26.2（2018/01/21）\n新增德语翻译\n版本3.26.1（2017/08/26）\n添加了法语翻译\n版本3.26.0（2017/06/17）\n代码清理应修复具有奇数名称的文件夹\n版本3.25.0（2017/04/04）\n现在，如果尝试在没有备份磁盘的情况下还原文件，则会显示错误\n更新捷克语翻译\n版本3.24.0（2017/02/10）\n现在，如果目标文件夹中没有该名称的文件，则还原的文件将是原始文件。\n修复了还原界面中的书签和路径按钮\n现在，当目标文件夹不存在时，恢复文件不会失败\n版本3.23.0（2017/02/10）\n现在支持名称中带有空格的外部驱动器\n版本3.22.0（2016/11/10）\n现在确保它不会意外死亡\n修复了内部IPC的编码错误\n版本3.21.0（2015/12/05）\n现在，从启动菜单中调用“恢复”或“设置”图标时，将自动启动cronopete（DBUS激活再次起作用）\n版本3.20.2（2015/12/05）\n再次修复了.desktop文件中的类别\n版本3.20.1（2015/12/05）\n修复了.desktop文件中的类别\n版本3.20.0（2015/09/10）\n使cronopete随机崩溃的多线程竞争条件似乎已修复\n删除了不推荐使用的GTK函数和属性\n版本3.19.0（2015/08/30）\n更新为Vala 0.26\n现在使用新的Thread和Mutex语法\n删除了Glade文件中不推荐使用的参数\n现在在主线程中进行所有字符串处理\n版本3.18.5（2015/04/23）\n修复了检测和列出硬盘时的错误\n版本3.18.4（2015/04/04）\n现在仅使用UUID查找磁盘，以确保使用的路径是正确的路径，即使在启动cronopete之后该路径发生了更改\n如果启用了备份，则cronopete将在卸载磁盘时重新安装该磁盘； 如果禁用了备份，则可以删除磁盘\n现在在“还原文件”窗口中显示GTK2和GTK3书签\n现在，要求格式化磁盘的窗口具有正确的大小\n代码清理\n删除了不推荐使用的GTK和GDK方法，例如Gtk.Stock\n版本3.18.3（2015/04/03）\n迁移到UDisks2，以修复格式化磁盘时的问题\n版本3.18.2（2015/04/03）\n如果在启动时未安装硬盘，则现在不会失败\n现在，如果状态文本太大，则主窗口不会展开\n版本3.18.1（2015/04/03）\n修复了选择新磁盘时的错误\n版本3.18.0（2015/04/02）\n现在使用UUID搜索磁盘\n版本3.17.0（2015/02/23）\n添加了捷克语翻译\n修复了图标路径\n允许同时添加多个文件夹\n版本3.16.0（2014/08/08）\n删除了GTK2支持\n修复了混合全屏和弹出窗口时的问题\n版本3.15.3（2013/12/14）\n现在使用Gee 0.8\n版本3.15.2（2013/11/01）\n固定加利西亚语翻译\n从多个线程中删除了对GTK的访问\n选择要备份（或不备份）的文件夹时的“取消”按钮现在可以使用\n如果在未选择文件夹的情况下在文件夹选择对话框中按“接受”按钮，则不会失败\n现在，如果用户显示配置对话框，也会删除欢迎消息\n版本3.15.1（2013/10/26）\n添加了一个欢迎窗口\n版本3.15.0（2013/10/26）\n现在在尝试格式化磁盘时设置分区类型时不会挂起\n现在在尝试格式化磁盘时设置分区类型时不会挂起...\n在ReiserFS中删除格式； 现在仅在Ext4中格式化，但如果由用户手动格式化，仍支持ReiserFS\n允许直接从界面显示非USB磁盘\n现在在启动过程中自动挂载驱动器\n将构建系统迁移到Autovala + CMake\n该代码现在使用Autovala自动检测到的数据\n版本3.14.0（2013/06/15）\n修复了计时器行必须大跳时的刷新错误。\n版本3.13.0（2013/06/09）\n修复了文件恢复系统中的图片刷新错误。\n修复了格式化没有分区表的外部驱动器时的错误。\n删除了几个不推荐使用的电话。\n版本3.12.0（2013/05/11）\n修复了尝试在100％满的磁盘上进行备份时的错误。\n版本3.11.0（2013/05/05）\n增加了延迟以避免在Gnome Shell中启动失败\n固定DRAW y EXPOSE-EVENT回调中的返回值\n版本3.10.0（2013/01/27）\n固定符号图标中的颜色。\n版本3.9.0（）\n开发版\n版本3.8.0 / 1（2013/01/20）\n修复了还原界面中的滚动条和图标。\n修复了还原界面中的背景画。\n在还原界面的按钮中添加了文本。\n修复了Gtk2下的编译。\n为Gtk2添加了.deb软件包。\n版本3.7.0（）\n开发版\n版本3.6.0（2012/12/21）\n新的还原界面\n允许使用内部不可移动驱动器（用于测试）\n添加了基于-symbolic标准的新图标\n修复了使用户每次更改文件夹时还原窗口都会增加的错误\n将DBus总线从com.backup.cronopete更改为com.rastersoft.cronopete\n版本3.5.0（）\n开发版\n版本3.4.6（2012/10/28）\nElementary中的配置图标将保留在图标窗口中\n在启动过程中消除了睡眠，因为不需要libappnotify\n现在，不会在每次更改时在系统栏中重新创建菜单，而是利用libappindicator的功能（使用时）\n版本3.4.5（2012/10/17）\n添加了D-Bus激活，以在打开配置图标时启动Cronopete\n修改了CMake文件，以确保即使使用非标准文件夹，也可以将自动启动文件复制到正确的位置\n包括Vala CMake文件\n为带有Ubuntu和Elementary OS的DEB包的PPA存储库添加了控制文件\n版本3.4.0（2012/10/13）\n更改为CMake\n对libappindicator的可选支持\n简化消息\n新图形\n为要还原的每个文件添加了进度条\n现在使用GConf来存储配置\n现在在请求驱动器时仅显示外部设备\n添加了.PLUG文件以实现基本OS兼容性\n允许显示或隐藏主栏中的图标\n版本3.2.0（2012/09/09）\n现在可以使用Vala 0.16编译（与Debian兼容）\n现在，新磁盘已正确格式化，而不会返回错误错误\n当访问权限不正确时，磁盘也会被格式化\n在Windows和窗口管理器中添加了图标\n现在，它在还原文件时使用异步调用，而不是线程\n降低时钟动画中的FPS，以减少CPU使用率\n在文件还原结束时添加了“还原成功结束”消息\n现在还可以在文件还原期间在Windows标题栏中显示日期\n恢复时更新了动画，以在没有GPU加速时更高效，更流畅\n版本3.1.0（）\n内部版本\n版本3.0.0（2011/12/18）\n添加了对GTK3的支持（仍支持GTK2）\n现在，在还原文件时保留文件扩展名\n版本2.3.0（2011/12/02）\n从主菜单添加了启动器，适用于不带系统托盘的系统\n添加了Dbus遥控器\n添加了图标缓存以加快恢复界面\n版本2.2.0（2011/11/18）\n将还原视图更改为列表或图标时，它捕获了一个窗口。 固定。\n修复了启动还原界面后卸载硬盘时的核心转储。\n版本2.1.0（2011/11/13）\n进行少量修改以确保在慢速计算机中缩放效果更好。\n版本2.0.0（2011/11/11）\n添加了一个界面以从备份还原文件。\n版本1.3.0（2011/10/23）\n尝试格式化NTFS格式的外部驱动器时，Crnopete关闭。 固定。\n版本1.2.0（2011/10/07）\n现在，将备份文件的修改后的日期和时间保留在备份中\n版本1.1.0（2011/09/17）\n允许设置两次备份之间的时间间隔\n允许在Makefile中选择安装文件夹\n修复了导致五分钟的时钟偏差的错误。 现在备份恰好在时间上完成\n现在，弹出菜单显示在主栏下方，而不是上方\n界面上的一些小调整\n版本1.0.0（2011/09/03）\n首次公开发行\n©1996-2020 Raster Software，Vigo。 版权所有。\n"}

