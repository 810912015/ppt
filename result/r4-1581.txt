{"ls":[{"s":"class Solution {\n    public double findMedianSortedArrays(int[] nums1,\n int[] nums2) {\n \n    }\n}","lang":"Java"},{"s":"class Solution(object):\n    def findMedianSortedArrays(self, nums1, nums2):\n        \"\"\"\n        :type nums1: List[int]\n        :type nums2: List[int]\n        :rtype: float\n        \"\"\"","lang":"Python"},{"s":"class Solution:\n    def findMedianSortedArrays(self, nums1: List[int]\n, nums2: List[int]) -> float:","lang":"Python3"},{"s":"double findMedianSortedArrays(int* nums1, int \nnums1Size, int* nums2, int nums2Size){\n \n}","lang":"C"},{"s":"public class Solution {\n    public double FindMedianSortedArrays(int[] nums1,\n int[] nums2) {\n \n    }\n}","lang":"C#"},{"s":"/**\n * @param {number[]} nums1\n * @param {number[]} nums2\n * @return {number}\n */\nvar findMedianSortedArrays = function(nums1, nums2) {\n \n};","lang":"JavaScript"}],"page":"4/1581","h":"4. 寻找两个有序数组的中位数","d":"<div class=\"notranslate\"><p>给定两个大小为 m 和 n 的有序数组&nbsp;<code>nums1</code> 和&nbsp;<code>nums2</code>。</p>\n\n<p>请你找出这两个有序数组的中位数，并且要求算法的时间复杂度为&nbsp;O(log(m + n))。</p>\n\n<p>你可以假设&nbsp;<code>nums1</code>&nbsp;和&nbsp;<code>nums2</code>&nbsp;不会同时为空。</p>\n\n<p><strong>示例 1:</strong></p>\n\n<pre>nums1 = [1, 3]\nnums2 = [2]\n\n则中位数是 2.0\n</pre>\n\n<p><strong>示例 2:</strong></p>\n\n<pre>nums1 = [1, 2]\nnums2 = [3, 4]\n\n则中位数是 (2 + 3)/2 = 2.5\n</pre>\n</div>","l":"困难","s":"/**\n * @param {number[]} nums1\n * @param {number[]} nums2\n * @return {number}\n */\nvar findMedianSortedArrays = function(nums1, nums2) {\n \n};","lang":"JavaScript","href":"https://leetcode-cn.com/problems/median-of-two-sorted-arrays/","bb":{"x":490,"y":50}}

