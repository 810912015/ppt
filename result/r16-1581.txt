{"ls":[{"s":"class Solution {\n    public int threeSumClosest(int[] nums, int \ntarget) {\n \n    }\n}","lang":"Java"},{"s":"class Solution(object):\n    def threeSumClosest(self, nums, target):\n        \"\"\"\n        :type nums: List[int]\n        :type target: int\n        :rtype: int\n        \"\"\"","lang":"Python"},{"s":"class Solution:\n    def threeSumClosest(self, nums: List[int], \ntarget: int) -> int:","lang":"Python3"},{"s":"int threeSumClosest(int* nums, int numsSize, int \ntarget){\n \n}","lang":"C"},{"s":"public class Solution {\n    public int ThreeSumClosest(int[] nums, int \ntarget) {\n \n    }\n}","lang":"C#"},{"s":"/**\n * @param {number[]} nums\n * @param {number} target\n * @return {number}\n */\nvar threeSumClosest = function(nums, target) {\n \n};","lang":"JavaScript"}],"page":"16/1581","h":"16. 最接近的三数之和","d":"<div class=\"notranslate\"><p>给定一个包括&nbsp;<em>n</em> 个整数的数组&nbsp;<code>nums</code><em>&nbsp;</em>和 一个目标值&nbsp;<code>target</code>。找出&nbsp;<code>nums</code><em>&nbsp;</em>中的三个整数，使得它们的和与&nbsp;<code>target</code>&nbsp;最接近。返回这三个数的和。假定每组输入只存在唯一答案。</p>\n\n<pre>例如，给定数组 nums = [-1，2，1，-4], 和 target = 1.\n\n与 target 最接近的三个数的和为 2. (-1 + 2 + 1 = 2).\n</pre>\n</div>","l":"中等","s":"/**\n * @param {number[]} nums\n * @param {number} target\n * @return {number}\n */\nvar threeSumClosest = function(nums, target) {\n \n};","lang":"JavaScript","href":"https://leetcode-cn.com/problems/3sum-closest/","bb":{"x":490,"y":50}}

