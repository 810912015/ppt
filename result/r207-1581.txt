{"ls":[{"s":"class Solution {\n    public boolean canFinish(int numCourses, int[][] \nprerequisites) {\n \n    }\n}","lang":"Java"},{"s":"class Solution(object):\n    def canFinish(self, numCourses, prerequisites):\n        \"\"\"\n        :type numCourses: int\n        :type prerequisites: List[List[int]]\n        :rtype: bool\n        \"\"\"","lang":"Python"},{"s":"class Solution:\n    def canFinish(self, numCourses: int, \nprerequisites: List[List[int]]) -> bool:","lang":"Python3"},{"s":"bool canFinish(int numCourses, int** prerequisites, \nint prerequisitesSize, int* prerequisitesColSize){\n \n}","lang":"C"},{"s":"public class Solution {\n    public bool CanFinish(int numCourses, int[][] \nprerequisites) {\n \n    }\n}","lang":"C#"},{"s":"/**\n * @param {number} numCourses\n * @param {number[][]} prerequisites\n * @return {boolean}\n */\nvar canFinish = function(numCourses, prerequisites) {\n \n};","lang":"JavaScript"}],"page":"207/1581","h":"207. 课程表","d":"<div class=\"notranslate\"><p>你这个学期必须选修 <code>numCourse</code> 门课程，记为&nbsp;<code>0</code>&nbsp;到&nbsp;<code>numCourse-1</code> 。</p>\n\n<p>在选修某些课程之前需要一些先修课程。&nbsp;例如，想要学习课程 0 ，你需要先完成课程 1 ，我们用一个匹配来表示他们：<code>[0,1]</code></p>\n\n<p>给定课程总量以及它们的先决条件，请你判断是否可能完成所有课程的学习？</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1:</strong></p>\n\n<pre><strong>输入:</strong> 2, [[1,0]] \n<strong>输出: </strong>true\n<strong>解释:</strong>&nbsp;总共有 2 门课程。学习课程 1 之前，你需要完成课程 0。所以这是可能的。</pre>\n\n<p><strong>示例 2:</strong></p>\n\n<pre><strong>输入:</strong> 2, [[1,0],[0,1]]\n<strong>输出: </strong>false\n<strong>解释:</strong>&nbsp;总共有 2 门课程。学习课程 1 之前，你需要先完成​课程 0；并且学习课程 0 之前，你还应先完成课程 1。这是不可能的。</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ol>\n\t<li>输入的先决条件是由 <strong>边缘列表</strong> 表示的图形，而不是 邻接矩阵 。详情请参见<a href=\"http://blog.csdn.net/woaidapaopao/article/details/51732947\">图的表示法</a>。</li>\n\t<li>你可以假定输入的先决条件中没有重复的边。</li>\n\t<li><code>1 &lt;=&nbsp;numCourses &lt;= 10^5</code></li>\n</ol>\n</div>","l":"中等","s":"/**\n * @param {number} numCourses\n * @param {number[][]} prerequisites\n * @return {boolean}\n */\nvar canFinish = function(numCourses, prerequisites) {\n \n};","lang":"JavaScript","href":"https://leetcode-cn.com/problems/course-schedule/","bb":{"x":490,"y":50}}

