{"ls":[{"s":"class Solution {\n    public double myPow(double x, int n) {\n \n    }\n}","lang":"Java"},{"s":"class Solution(object):\n    def myPow(self, x, n):\n        \"\"\"\n        :type x: float\n        :type n: int\n        :rtype: float\n        \"\"\"","lang":"Python"},{"s":"class Solution:\n    def myPow(self, x: float, n: int) -> float:","lang":"Python3"},{"s":"double myPow(double x, int n){\n \n}","lang":"C"},{"s":"public class Solution {\n    public double MyPow(double x, int n) {\n \n    }\n}","lang":"C#"},{"s":"/**\n * @param {number} x\n * @param {number} n\n * @return {number}\n */\nvar myPow = function(x, n) {\n \n};","lang":"JavaScript"}],"page":"50/1581","h":"50. Pow(x, n)","d":"<div class=\"notranslate\"><p>实现&nbsp;<a href=\"https://www.cplusplus.com/reference/valarray/pow/\">pow(<em>x</em>, <em>n</em>)</a>&nbsp;，即计算 x 的 n 次幂函数。</p>\n\n<p><strong>示例 1:</strong></p>\n\n<pre><strong>输入:</strong> 2.00000, 10\n<strong>输出:</strong> 1024.00000\n</pre>\n\n<p><strong>示例&nbsp;2:</strong></p>\n\n<pre><strong>输入:</strong> 2.10000, 3\n<strong>输出:</strong> 9.26100\n</pre>\n\n<p><strong>示例&nbsp;3:</strong></p>\n\n<pre><strong>输入:</strong> 2.00000, -2\n<strong>输出:</strong> 0.25000\n<strong>解释:</strong> 2<sup>-2</sup> = 1/2<sup>2</sup> = 1/4 = 0.25</pre>\n\n<p><strong>说明:</strong></p>\n\n<ul>\n\t<li>-100.0 &lt;&nbsp;<em>x</em>&nbsp;&lt; 100.0</li>\n\t<li><em>n</em>&nbsp;是 32 位有符号整数，其数值范围是&nbsp;[−2<sup>31</sup>,&nbsp;2<sup>31&nbsp;</sup>− 1] 。</li>\n</ul>\n</div>","l":"中等","s":"/**\n * @param {number} x\n * @param {number} n\n * @return {number}\n */\nvar myPow = function(x, n) {\n \n};","lang":"JavaScript","href":"https://leetcode-cn.com/problems/powx-n/","bb":{"x":490,"y":50}}

