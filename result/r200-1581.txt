{"ls":[{"s":"class Solution {\n    public int numIslands(char[][] grid) {\n \n    }\n}","lang":"Java"},{"s":"class Solution(object):\n    def numIslands(self, grid):\n        \"\"\"\n        :type grid: List[List[str]]\n        :rtype: int\n        \"\"\"","lang":"Python"},{"s":"class Solution:\n    def numIslands(self, grid: List[List[str]]) -> \nint:","lang":"Python3"},{"s":"int numIslands(char** grid, int gridSize, int* \ngridColSize){\n \n}","lang":"C"},{"s":"public class Solution {\n    public int NumIslands(char[][] grid) {\n \n    }\n}","lang":"C#"},{"s":"/**\n * @param {character[][]} grid\n * @return {number}\n */\nvar numIslands = function(grid) {\n \n};","lang":"JavaScript"}],"page":"200/1581","h":"200. 岛屿数量","d":"<div class=\"notranslate\"><p>给定一个由&nbsp;<code>'1'</code>（陆地）和 <code>'0'</code>（水）组成的的二维网格，计算岛屿的数量。一个岛被水包围，并且它是通过水平方向或垂直方向上相邻的陆地连接而成的。你可以假设网格的四个边均被水包围。</p>\n\n<p><strong>示例 1:</strong></p>\n\n<pre><strong>输入:</strong>\n11110\n11010\n11000\n00000\n\n<strong>输出:</strong>&nbsp;1\n</pre>\n\n<p><strong>示例&nbsp;2:</strong></p>\n\n<pre><strong>输入:</strong>\n11000\n11000\n00100\n00011\n\n<strong>输出: </strong>3\n</pre>\n</div>","l":"中等","s":"/**\n * @param {character[][]} grid\n * @return {number}\n */\nvar numIslands = function(grid) {\n \n};","lang":"JavaScript","href":"https://leetcode-cn.com/problems/number-of-islands/","bb":{"x":490,"y":50}}

