{"ls":[{"s":"class Solution {\n    public int searchInsert(int[] nums, int target) {\n \n    }\n}","lang":"Java"},{"s":"class Solution(object):\n    def searchInsert(self, nums, target):\n        \"\"\"\n        :type nums: List[int]\n        :type target: int\n        :rtype: int\n        \"\"\"","lang":"Python"},{"s":"class Solution:\n    def searchInsert(self, nums: List[int], target: \nint) -> int:","lang":"Python3"},{"s":"int searchInsert(int* nums, int numsSize, int target)\n{\n \n}","lang":"C"},{"s":"public class Solution {\n    public int SearchInsert(int[] nums, int target) {\n \n    }\n}","lang":"C#"},{"s":"/**\n * @param {number[]} nums\n * @param {number} target\n * @return {number}\n */\nvar searchInsert = function(nums, target) {\n \n};","lang":"JavaScript"}],"page":"35/1581","h":"35. 搜索插入位置","d":"<div class=\"notranslate\"><p>给定一个排序数组和一个目标值，在数组中找到目标值，并返回其索引。如果目标值不存在于数组中，返回它将会被按顺序插入的位置。</p>\n\n<p>你可以假设数组中无重复元素。</p>\n\n<p><strong>示例 1:</strong></p>\n\n<pre><strong>输入:</strong> [1,3,5,6], 5\n<strong>输出:</strong> 2\n</pre>\n\n<p><strong>示例&nbsp;2:</strong></p>\n\n<pre><strong>输入:</strong> [1,3,5,6], 2\n<strong>输出:</strong> 1\n</pre>\n\n<p><strong>示例 3:</strong></p>\n\n<pre><strong>输入:</strong> [1,3,5,6], 7\n<strong>输出:</strong> 4\n</pre>\n\n<p><strong>示例 4:</strong></p>\n\n<pre><strong>输入:</strong> [1,3,5,6], 0\n<strong>输出:</strong> 0\n</pre>\n</div>","l":"简单","s":"/**\n * @param {number[]} nums\n * @param {number} target\n * @return {number}\n */\nvar searchInsert = function(nums, target) {\n \n};","lang":"JavaScript","href":"https://leetcode-cn.com/problems/search-insert-position/","bb":{"x":490,"y":50}}

