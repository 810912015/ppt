{"ls":[{"s":"class Solution {\n    public int longestValidParentheses(String s) {\n \n    }\n}","lang":"Java"},{"s":"class Solution(object):\n    def longestValidParentheses(self, s):\n        \"\"\"\n        :type s: str\n        :rtype: int\n        \"\"\"","lang":"Python"},{"s":"class Solution:\n    def longestValidParentheses(self, s: str) -> int:","lang":"Python3"},{"s":"int longestValidParentheses(char * s){\n \n}","lang":"C"},{"s":"public class Solution {\n    public int LongestValidParentheses(string s) {\n \n    }\n}","lang":"C#"},{"s":"/**\n * @param {string} s\n * @return {number}\n */\nvar longestValidParentheses = function(s) {\n \n};","lang":"JavaScript"}],"page":"32/1581","h":"32. 最长有效括号","d":"<div class=\"notranslate\"><p>给定一个只包含 <code>'('</code>&nbsp;和 <code>')'</code>&nbsp;的字符串，找出最长的包含有效括号的子串的长度。</p>\n\n<p><strong>示例&nbsp;1:</strong></p>\n\n<pre><strong>输入:</strong> \"(()\"\n<strong>输出:</strong> 2\n<strong>解释:</strong> 最长有效括号子串为 <code>\"()\"</code>\n</pre>\n\n<p><strong>示例 2:</strong></p>\n\n<pre><strong>输入:</strong> \"<code>)()())</code>\"\n<strong>输出:</strong> 4\n<strong>解释:</strong> 最长有效括号子串为 <code>\"()()\"</code>\n</pre>\n</div>","l":"困难","s":"/**\n * @param {string} s\n * @return {number}\n */\nvar longestValidParentheses = function(s) {\n \n};","lang":"JavaScript","href":"https://leetcode-cn.com/problems/longest-valid-parentheses/","bb":{"x":490,"y":50}}

