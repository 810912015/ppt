{"ls":[{"s":"class Solution {\n    public List<List<String>> partition(String s) {\n \n    }\n}","lang":"Java"},{"s":"class Solution(object):\n    def partition(self, s):\n        \"\"\"\n        :type s: str\n        :rtype: List[List[str]]\n        \"\"\"","lang":"Python"},{"s":"class Solution:\n    def partition(self, s: str) -> List[List[str]]:","lang":"Python3"},{"s":"/**\n * Return an array of arrays of size *returnSize.\n * The sizes of the arrays are returned as \n*returnColumnSizes array.\n * Note: Both returned array and *columnSizes array \nmust be malloced, assume caller calls free().\n */\nchar *** partition(char * s, int* returnSize, int** \nreturnColumnSizes){\n \n}","lang":"C"},{"s":"public class Solution {\n    public IList<IList<string>> Partition(string s) {\n \n    }\n}","lang":"C#"},{"s":"/**\n * @param {string} s\n * @return {string[][]}\n */\nvar partition = function(s) {\n \n};","lang":"JavaScript"}],"page":"131/1581","h":"131. 分割回文串","d":"<div class=\"notranslate\"><p>给定一个字符串 <em>s</em>，将<em> s </em>分割成一些子串，使每个子串都是回文串。</p>\n\n<p>返回 <em>s</em> 所有可能的分割方案。</p>\n\n<p><strong>示例:</strong></p>\n\n<pre><strong>输入:</strong>&nbsp;\"aab\"\n<strong>输出:</strong>\n[\n  [\"aa\",\"b\"],\n  [\"a\",\"a\",\"b\"]\n]</pre>\n</div>","l":"中等","s":"/**\n * @param {string} s\n * @return {string[][]}\n */\nvar partition = function(s) {\n \n};","lang":"JavaScript","href":"https://leetcode-cn.com/problems/palindrome-partitioning/","bb":{"x":490,"y":50}}

