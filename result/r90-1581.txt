{"ls":[{"s":"class Solution {\n    public List<List<Integer>> subsetsWithDup(int[] \nnums) {\n \n    }\n}","lang":"Java"},{"s":"class Solution(object):\n    def subsetsWithDup(self, nums):\n        \"\"\"\n        :type nums: List[int]\n        :rtype: List[List[int]]\n        \"\"\"","lang":"Python"},{"s":"class Solution:\n    def subsetsWithDup(self, nums: List[int]) -> List\n[List[int]]:","lang":"Python3"},{"s":"/**\n * Return an array of arrays of size *returnSize.\n * The sizes of the arrays are returned as \n*returnColumnSizes array.\n * Note: Both returned array and *columnSizes array \nmust be malloced, assume caller calls free().\n */\nint** subsetsWithDup(int* nums, int numsSize, int* \nreturnSize, int** returnColumnSizes){\n \n}","lang":"C"},{"s":"public class Solution {\n    public IList<IList<int>> SubsetsWithDup(int[] \nnums) {\n \n    }\n}","lang":"C#"},{"s":"/**\n * @param {number[]} nums\n * @return {number[][]}\n */\nvar subsetsWithDup = function(nums) {\n \n};","lang":"JavaScript"}],"page":"90/1581","h":"90. 子集 II","d":"<div class=\"notranslate\"><p>给定一个可能包含重复元素的整数数组 <em><strong>nums</strong></em>，返回该数组所有可能的子集（幂集）。</p>\n\n<p><strong>说明：</strong>解集不能包含重复的子集。</p>\n\n<p><strong>示例:</strong></p>\n\n<pre><strong>输入:</strong> [1,2,2]\n<strong>输出:</strong>\n[\n  [2],\n  [1],\n  [1,2,2],\n  [2,2],\n  [1,2],\n  []\n]</pre>\n</div>","l":"中等","s":"/**\n * @param {number[]} nums\n * @return {number[][]}\n */\nvar subsetsWithDup = function(nums) {\n \n};","lang":"JavaScript","href":"https://leetcode-cn.com/problems/subsets-ii/","bb":{"x":490,"y":50}}

