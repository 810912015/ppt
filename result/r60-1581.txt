{"ls":[{"s":"class Solution {\n    public String getPermutation(int n, int k) {\n \n    }\n}","lang":"Java"},{"s":"class Solution(object):\n    def getPermutation(self, n, k):\n        \"\"\"\n        :type n: int\n        :type k: int\n        :rtype: str\n        \"\"\"","lang":"Python"},{"s":"class Solution:\n    def getPermutation(self, n: int, k: int) -> str:","lang":"Python3"},{"s":"char * getPermutation(int n, int k){\n \n}","lang":"C"},{"s":"public class Solution {\n    public string GetPermutation(int n, int k) {\n \n    }\n}","lang":"C#"},{"s":"/**\n * @param {number} n\n * @param {number} k\n * @return {string}\n */\nvar getPermutation = function(n, k) {\n \n};","lang":"JavaScript"}],"page":"60/1581","h":"60. 第k个排列","d":"<div class=\"notranslate\"><p>给出集合&nbsp;<code>[1,2,3,…,<em>n</em>]</code>，其所有元素共有&nbsp;<em>n</em>! 种排列。</p>\n\n<p>按大小顺序列出所有排列情况，并一一标记，当&nbsp;<em>n </em>= 3 时, 所有排列如下：</p>\n\n<ol>\n\t<li><code>\"123\"</code></li>\n\t<li><code>\"132\"</code></li>\n\t<li><code>\"213\"</code></li>\n\t<li><code>\"231\"</code></li>\n\t<li><code>\"312\"</code></li>\n\t<li><code>\"321\"</code></li>\n</ol>\n\n<p>给定&nbsp;<em>n</em> 和&nbsp;<em>k</em>，返回第&nbsp;<em>k</em>&nbsp;个排列。</p>\n\n<p><strong>说明：</strong></p>\n\n<ul>\n\t<li>给定<em> n</em>&nbsp;的范围是 [1, 9]。</li>\n\t<li>给定 <em>k&nbsp;</em>的范围是[1, &nbsp;<em>n</em>!]。</li>\n</ul>\n\n<p><strong>示例&nbsp;1:</strong></p>\n\n<pre><strong>输入:</strong> n = 3, k = 3\n<strong>输出:</strong> \"213\"\n</pre>\n\n<p><strong>示例&nbsp;2:</strong></p>\n\n<pre><strong>输入:</strong> n = 4, k = 9\n<strong>输出:</strong> \"2314\"\n</pre>\n</div>","l":"中等","s":"/**\n * @param {number} n\n * @param {number} k\n * @return {string}\n */\nvar getPermutation = function(n, k) {\n \n};","lang":"JavaScript","href":"https://leetcode-cn.com/problems/permutation-sequence/","bb":{"x":490,"y":50}}

