{"ls":[{"s":"class Solution {\n    public boolean containsNearbyAlmostDuplicate(int\n[] nums, int k, int t) {\n \n    }\n}","lang":"Java"},{"s":"class Solution(object):\n    def containsNearbyAlmostDuplicate(self, nums, k, \nt):\n        \"\"\"\n        :type nums: List[int]\n        :type k: int\n        :type t: int\n        :rtype: bool\n        \"\"\"","lang":"Python"},{"s":"class Solution:\n    def containsNearbyAlmostDuplicate(self, nums: \nList[int], k: int, t: int) -> bool:","lang":"Python3"},{"s":"bool containsNearbyAlmostDuplicate(int* nums, int \nnumsSize, int k, int t){\n \n}","lang":"C"},{"s":"public class Solution {\n    public bool ContainsNearbyAlmostDuplicate(int[] \nnums, int k, int t) {\n        \n    }\n}","lang":"C#"},{"s":"/**\n * @param {number[]} nums\n * @param {number} k\n * @param {number} t\n * @return {boolean}\n */\nvar containsNearbyAlmostDuplicate = function(nums, k,\n t) {\n \n};","lang":"JavaScript"}],"page":"220/1581","h":"220. 存在重复元素 III","d":"<div class=\"notranslate\"><p>给定一个整数数组，判断数组中是否有两个不同的索引 <em>i</em> 和 <em>j</em>，使得&nbsp;<strong>nums [i]</strong> 和&nbsp;<strong>nums [j]</strong>&nbsp;的差的绝对值最大为 <em>t</em>，并且 <em>i</em> 和 <em>j</em> 之间的差的绝对值最大为 <em>ķ</em>。</p>\n\n<p><strong>示例&nbsp;1:</strong></p>\n\n<pre><strong>输入:</strong> nums = [1,2,3,1], k<em> </em>= 3, t = 0\n<strong>输出:</strong> true</pre>\n\n<p><strong>示例 2:</strong></p>\n\n<pre><strong>输入: </strong>nums = [1,0,1,1], k<em> </em>=<em> </em>1, t = 2\n<strong>输出:</strong> true</pre>\n\n<p><strong>示例 3:</strong></p>\n\n<pre><strong>输入: </strong>nums = [1,5,9,1,5,9], k = 2, t = 3\n<strong>输出:</strong> false</pre>\n</div>","l":"中等","s":"/**\n * @param {number[]} nums\n * @param {number} k\n * @param {number} t\n * @return {boolean}\n */\nvar containsNearbyAlmostDuplicate = function(nums, k,\n t) {\n \n};","lang":"JavaScript","href":"https://leetcode-cn.com/problems/contains-duplicate-iii/","bb":{"x":490,"y":50}}

