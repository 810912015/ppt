{"ls":[{"s":"class Solution {\n    public int minDistance(String word1, String \nword2) {\n \n    }\n}","lang":"Java"},{"s":"class Solution(object):\n    def minDistance(self, word1, word2):\n        \"\"\"\n        :type word1: str\n        :type word2: str\n        :rtype: int\n        \"\"\"","lang":"Python"},{"s":"class Solution:\n    def minDistance(self, word1: str, word2: str) -> \nint:","lang":"Python3"},{"s":"int minDistance(char * word1, char * word2){\n \n}","lang":"C"},{"s":"public class Solution {\n    public int MinDistance(string word1, string \nword2) {\n \n    }\n}","lang":"C#"},{"s":"/**\n * @param {string} word1\n * @param {string} word2\n * @return {number}\n */\nvar minDistance = function(word1, word2) {\n \n};","lang":"JavaScript"}],"page":"72/1581","h":"72. 编辑距离","d":"<div class=\"notranslate\"><p>给定两个单词&nbsp;<em>word1</em> 和&nbsp;<em>word2</em>，计算出将&nbsp;<em>word1</em>&nbsp;转换成&nbsp;<em>word2 </em>所使用的最少操作数&nbsp;。</p>\n\n<p>你可以对一个单词进行如下三种操作：</p>\n\n<ol>\n\t<li>插入一个字符</li>\n\t<li>删除一个字符</li>\n\t<li>替换一个字符</li>\n</ol>\n\n<p><strong>示例&nbsp;1:</strong></p>\n\n<pre><strong>输入:</strong> word1 = \"horse\", word2 = \"ros\"\n<strong>输出:</strong> 3\n<strong>解释:</strong> \nhorse -&gt; rorse (将 'h' 替换为 'r')\nrorse -&gt; rose (删除 'r')\nrose -&gt; ros (删除 'e')\n</pre>\n\n<p><strong>示例&nbsp;2:</strong></p>\n\n<pre><strong>输入:</strong> word1 = \"intention\", word2 = \"execution\"\n<strong>输出:</strong> 5\n<strong>解释:</strong> \nintention -&gt; inention (删除 't')\ninention -&gt; enention (将 'i' 替换为 'e')\nenention -&gt; exention (将 'n' 替换为 'x')\nexention -&gt; exection (将 'n' 替换为 'c')\nexection -&gt; execution (插入 'u')\n</pre>\n</div>","l":"困难","s":"/**\n * @param {string} word1\n * @param {string} word2\n * @return {number}\n */\nvar minDistance = function(word1, word2) {\n \n};","lang":"JavaScript","href":"https://leetcode-cn.com/problems/edit-distance/","bb":{"x":490,"y":50}}

