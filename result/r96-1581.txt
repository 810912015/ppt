{"ls":[{"s":"class Solution {\n    public int numTrees(int n) {\n \n    }\n}","lang":"Java"},{"s":"class Solution(object):\n    def numTrees(self, n):\n        \"\"\"\n        :type n: int\n        :rtype: int\n        \"\"\"","lang":"Python"},{"s":"class Solution:\n    def numTrees(self, n: int) -> int:","lang":"Python3"},{"s":"int numTrees(int n){\n \n}","lang":"C"},{"s":"public class Solution {\n    public int NumTrees(int n) {\n \n    }\n}","lang":"C#"},{"s":"/**\n * @param {number} n\n * @return {number}\n */\nvar numTrees = function(n) {\n \n};","lang":"JavaScript"}],"page":"96/1581","h":"96. 不同的二叉搜索树","d":"<div class=\"notranslate\"><p>给定一个整数 <em>n</em>，求以&nbsp;1 ...&nbsp;<em>n</em>&nbsp;为节点组成的二叉搜索树有多少种？</p>\n\n<p><strong>示例:</strong></p>\n\n<pre><strong>输入:</strong> 3\n<strong>输出:</strong> 5\n<strong>解释:\n</strong>给定 <em>n</em> = 3, 一共有 5 种不同结构的二叉搜索树:\n\n   1         3     3      2      1\n    \\       /     /      / \\      \\\n     3     2     1      1   3      2\n    /     /       \\                 \\\n   2     1         2                 3</pre>\n</div>","l":"中等","s":"/**\n * @param {number} n\n * @return {number}\n */\nvar numTrees = function(n) {\n \n};","lang":"JavaScript","href":"https://leetcode-cn.com/problems/unique-binary-search-trees/","bb":{"x":490,"y":50}}

