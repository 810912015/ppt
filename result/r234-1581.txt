{"ls":[{"s":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode(int x) { val = x; }\n * }\n */\nclass Solution {\n    public boolean isPalindrome(ListNode head) {\n \n    }\n}","lang":"Java"},{"s":"# Definition for singly-linked list.\n# class ListNode(object):\n#     def __init__(self, x):\n#         self.val = x\n#         self.next = None\n \nclass Solution(object):\n    def isPalindrome(self, head):\n        \"\"\"\n        :type head: ListNode\n        :rtype: bool\n        \"\"\"","lang":"Python"},{"s":"# Definition for singly-linked list.\n# class ListNode:\n#     def __init__(self, x):\n#         self.val = x\n#         self.next = None\n \nclass Solution:\n    def isPalindrome(self, head: ListNode) -> bool:","lang":"Python3"},{"s":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     struct ListNode *next;\n * };\n */\n \n \nbool isPalindrome(struct ListNode* head){\n \n}","lang":"C"},{"s":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     public int val;\n *     public ListNode next;\n *     public ListNode(int x) { val = x; }\n * }\n */\npublic class Solution {\n    public bool IsPalindrome(ListNode head) {\n \n    }\n}","lang":"C#"},{"s":"/**\n * Definition for singly-linked list.\n * function ListNode(val) {\n *     this.val = val;\n *     this.next = null;\n * }\n */\n/**\n * @param {ListNode} head\n * @return {boolean}\n */\nvar isPalindrome = function(head) {\n \n};","lang":"JavaScript"}],"page":"234/1581","h":"234. 回文链表","d":"<div class=\"notranslate\"><p>请判断一个链表是否为回文链表。</p>\n\n<p><strong>示例 1:</strong></p>\n\n<pre><strong>输入:</strong> 1-&gt;2\n<strong>输出:</strong> false</pre>\n\n<p><strong>示例 2:</strong></p>\n\n<pre><strong>输入:</strong> 1-&gt;2-&gt;2-&gt;1\n<strong>输出:</strong> true\n</pre>\n\n<p><strong>进阶：</strong><br>\n你能否用&nbsp;O(n) 时间复杂度和 O(1) 空间复杂度解决此题？</p>\n</div>","l":"简单","s":"/**\n * Definition for singly-linked list.\n * function ListNode(val) {\n *     this.val = val;\n *     this.next = null;\n * }\n */\n/**\n * @param {ListNode} head\n * @return {boolean}\n */\nvar isPalindrome = function(head) {\n \n};","lang":"JavaScript","href":"https://leetcode-cn.com/problems/palindrome-linked-list/","bb":{"x":490,"y":50}}

