{"ls":[{"s":"class Solution {\n    public int addDigits(int num) {\n \n    }\n}","lang":"Java"},{"s":"class Solution(object):\n    def addDigits(self, num):\n        \"\"\"\n        :type num: int\n        :rtype: int\n        \"\"\"","lang":"Python"},{"s":"class Solution:\n    def addDigits(self, num: int) -> int:","lang":"Python3"},{"s":"int addDigits(int num){\n \n}","lang":"C"},{"s":"public class Solution {\n    public int AddDigits(int num) {\n \n    }\n}","lang":"C#"},{"s":"/**\n * @param {number} num\n * @return {number}\n */\nvar addDigits = function(num) {\n \n};","lang":"JavaScript"}],"page":"258/1581","h":"258. 各位相加","d":"<div class=\"notranslate\"><p>给定一个非负整数 <code>num</code>，反复将各个位上的数字相加，直到结果为一位数。</p>\n\n<p><strong>示例:</strong></p>\n\n<pre><strong>输入:</strong> <code>38</code>\n<strong>输出:</strong> 2 \n<strong>解释: </strong>各位相加的过程为<strong>：</strong><code>3 + 8 = 11</code>, <code>1 + 1 = 2</code>。 由于&nbsp;<code>2</code> 是一位数，所以返回 2。\n</pre>\n\n<p><strong>进阶:</strong><br>\n你可以不使用循环或者递归，且在 O(1) 时间复杂度内解决这个问题吗？</p>\n</div>","l":"简单","s":"/**\n * @param {number} num\n * @return {number}\n */\nvar addDigits = function(num) {\n \n};","lang":"JavaScript","href":"https://leetcode-cn.com/problems/add-digits/","bb":{"x":490,"y":50}}

