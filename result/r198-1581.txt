{"ls":[{"s":"class Solution {\n    public int rob(int[] nums) {\n \n    }\n}","lang":"Java"},{"s":"class Solution(object):\n    def rob(self, nums):\n        \"\"\"\n        :type nums: List[int]\n        :rtype: int\n        \"\"\"","lang":"Python"},{"s":"class Solution:\n    def rob(self, nums: List[int]) -> int:","lang":"Python3"},{"s":"int rob(int* nums, int numsSize){\n \n}","lang":"C"},{"s":"public class Solution {\n    public int Rob(int[] nums) {\n \n    }\n}","lang":"C#"},{"s":"/**\n * @param {number[]} nums\n * @return {number}\n */\nvar rob = function(nums) {\n \n};","lang":"JavaScript"}],"page":"198/1581","h":"198. 打家劫舍","d":"<div class=\"notranslate\"><p>你是一个专业的小偷，计划偷窃沿街的房屋。每间房内都藏有一定的现金，影响你偷窃的唯一制约因素就是相邻的房屋装有相互连通的防盗系统，<strong>如果两间相邻的房屋在同一晚上被小偷闯入，系统会自动报警</strong>。</p>\n\n<p>给定一个代表每个房屋存放金额的非负整数数组，计算你<strong>在不触动警报装置的情况下，</strong>能够偷窃到的最高金额。</p>\n\n<p><strong>示例 1:</strong></p>\n\n<pre><strong>输入:</strong> [1,2,3,1]\n<strong>输出:</strong> 4\n<strong>解释:</strong> 偷窃 1 号房屋 (金额 = 1) ，然后偷窃 3 号房屋 (金额 = 3)。\n&nbsp;    偷窃到的最高金额 = 1 + 3 = 4 。</pre>\n\n<p><strong>示例 2:</strong></p>\n\n<pre><strong>输入:</strong> [2,7,9,3,1]\n<strong>输出:</strong> 12\n<strong>解释:</strong> 偷窃 1 号房屋 (金额 = 2), 偷窃 3 号房屋 (金额 = 9)，接着偷窃 5 号房屋 (金额 = 1)。\n&nbsp;    偷窃到的最高金额 = 2 + 9 + 1 = 12 。\n</pre>\n</div>","l":"简单","s":"class Solution {\npublic:\n    int rob(vector<int>& nums) {\n \n    }\n};","lang":"C++","href":"https://leetcode-cn.com/problems/house-robber/","bb":{"x":490,"y":50}}

