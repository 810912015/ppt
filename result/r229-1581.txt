{"ls":[{"s":"class Solution {\n    public List<Integer> majorityElement(int[] nums) \n{\n \n    }\n}","lang":"Java"},{"s":"class Solution(object):\n    def majorityElement(self, nums):\n        \"\"\"\n        :type nums: List[int]\n        :rtype: List[int]\n        \"\"\"","lang":"Python"},{"s":"class Solution:\n    def majorityElement(self, nums: List[int]) -> \nList[int]:","lang":"Python3"},{"s":"/**\n * Note: The returned array must be malloced, assume \ncaller calls free().\n */\nint* majorityElement(int* nums, int numsSize, int* \nreturnSize){\n \n}","lang":"C"},{"s":"public class Solution {\n    public IList<int> MajorityElement(int[] nums) {\n \n    }\n}","lang":"C#"},{"s":"/**\n * @param {number[]} nums\n * @return {number[]}\n */\nvar majorityElement = function(nums) {\n \n};","lang":"JavaScript"}],"page":"229/1581","h":"229. 求众数 II","d":"<div class=\"notranslate\"><p>给定一个大小为&nbsp;<em>n&nbsp;</em>的数组，找出其中所有出现超过&nbsp;<code>⌊ n/3 ⌋</code>&nbsp;次的元素。</p>\n\n<p><strong>说明: </strong>要求算法的时间复杂度为 O(n)，空间复杂度为 O(1)。</p>\n\n<p><strong>示例&nbsp;1:</strong></p>\n\n<pre><strong>输入:</strong> [3,2,3]\n<strong>输出:</strong> [3]</pre>\n\n<p><strong>示例 2:</strong></p>\n\n<pre><strong>输入:</strong> [1,1,1,3,3,2,2,2]\n<strong>输出:</strong> [1,2]</pre>\n</div>","l":"中等","s":"/**\n * @param {number[]} nums\n * @return {number[]}\n */\nvar majorityElement = function(nums) {\n \n};","lang":"JavaScript","href":"https://leetcode-cn.com/problems/majority-element-ii/","bb":{"x":490,"y":50}}

