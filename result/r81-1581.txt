{"ls":[{"s":"class Solution {\n    public boolean search(int[] nums, int target) {\n \n    }\n}","lang":"Java"},{"s":"class Solution(object):\n    def search(self, nums, target):\n        \"\"\"\n        :type nums: List[int]\n        :type target: int\n        :rtype: bool\n        \"\"\"","lang":"Python"},{"s":"class Solution:\n    def search(self, nums: List[int], target: int) \n-> bool:","lang":"Python3"},{"s":"bool search(int* nums, int numsSize, int target){\n \n}","lang":"C"},{"s":"public class Solution {\n    public bool Search(int[] nums, int target) {\n \n    }\n}","lang":"C#"},{"s":"/**\n * @param {number[]} nums\n * @param {number} target\n * @return {boolean}\n */\nvar search = function(nums, target) {\n \n};","lang":"JavaScript"}],"page":"81/1581","h":"81. 搜索旋转排序数组 II","d":"<div class=\"notranslate\"><p>假设按照升序排序的数组在预先未知的某个点上进行了旋转。</p>\n\n<p>( 例如，数组&nbsp;<code>[0,0,1,2,2,5,6]</code>&nbsp;可能变为&nbsp;<code>[2,5,6,0,0,1,2]</code>&nbsp;)。</p>\n\n<p>编写一个函数来判断给定的目标值是否存在于数组中。若存在返回&nbsp;<code>true</code>，否则返回&nbsp;<code>false</code>。</p>\n\n<p><strong>示例&nbsp;1:</strong></p>\n\n<pre><strong>输入:</strong> nums = [2<code>,5,6,0,0,1,2]</code>, target = 0\n<strong>输出:</strong> true\n</pre>\n\n<p><strong>示例&nbsp;2:</strong></p>\n\n<pre><strong>输入:</strong> nums = [2<code>,5,6,0,0,1,2]</code>, target = 3\n<strong>输出:</strong> false</pre>\n\n<p><strong>进阶:</strong></p>\n\n<ul>\n\t<li>这是 <a href=\"https://leetcode-cn.com/problems/search-in-rotated-sorted-array/description/\">搜索旋转排序数组</a>&nbsp;的延伸题目，本题中的&nbsp;<code>nums</code>&nbsp; 可能包含重复元素。</li>\n\t<li>这会影响到程序的时间复杂度吗？会有怎样的影响，为什么？</li>\n</ul>\n</div>","l":"中等","s":"/**\n * @param {number[]} nums\n * @param {number} target\n * @return {boolean}\n */\nvar search = function(nums, target) {\n \n};","lang":"JavaScript","href":"https://leetcode-cn.com/problems/search-in-rotated-sorted-array-ii/","bb":{"x":490,"y":50}}

