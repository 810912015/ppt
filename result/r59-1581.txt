{"ls":[{"s":"class Solution {\n    public int[][] generateMatrix(int n) {\n \n    }\n}","lang":"Java"},{"s":"class Solution(object):\n    def generateMatrix(self, n):\n        \"\"\"\n        :type n: int\n        :rtype: List[List[int]]\n        \"\"\"","lang":"Python"},{"s":"class Solution:\n    def generateMatrix(self, n: int) -> List[List\n[int]]:","lang":"Python3"},{"s":"/**\n * Return an array of arrays of size *returnSize.\n * The sizes of the arrays are returned as \n*returnColumnSizes array.\n * Note: Both returned array and *columnSizes array \nmust be malloced, assume caller calls free().\n */\nint** generateMatrix(int n, int* returnSize, int** \nreturnColumnSizes){\n \n}","lang":"C"},{"s":"public class Solution {\n    public int[][] GenerateMatrix(int n) {\n \n    }\n}","lang":"C#"},{"s":"/**\n * @param {number} n\n * @return {number[][]}\n */\nvar generateMatrix = function(n) {\n \n};","lang":"JavaScript"}],"page":"59/1581","h":"59. 螺旋矩阵 II","d":"<div class=\"notranslate\"><p>给定一个正整数&nbsp;<em>n</em>，生成一个包含 1 到&nbsp;<em>n</em><sup>2</sup>&nbsp;所有元素，且元素按顺时针顺序螺旋排列的正方形矩阵。</p>\n\n<p><strong>示例:</strong></p>\n\n<pre><strong>输入:</strong> 3\n<strong>输出:</strong>\n[\n [ 1, 2, 3 ],\n [ 8, 9, 4 ],\n [ 7, 6, 5 ]\n]</pre>\n</div>","l":"中等","s":"/**\n * @param {number} n\n * @return {number[][]}\n */\nvar generateMatrix = function(n) {\n \n};","lang":"JavaScript","href":"https://leetcode-cn.com/problems/spiral-matrix-ii/","bb":{"x":490,"y":50}}

