{"ls":[{"s":"class Solution {\n    public String longestPalindrome(String s) {\n \n    }\n}","lang":"Java"},{"s":"class Solution(object):\n    def longestPalindrome(self, s):\n        \"\"\"\n        :type s: str\n        :rtype: str\n        \"\"\"","lang":"Python"},{"s":"class Solution:\n    def longestPalindrome(self, s: str) -> str:","lang":"Python3"},{"s":"char * longestPalindrome(char * s){\n \n}","lang":"C"},{"s":"public class Solution {\n    public string LongestPalindrome(string s) {\n \n    }\n}","lang":"C#"},{"s":"/**\n * @param {string} s\n * @return {string}\n */\nvar longestPalindrome = function(s) {\n \n};","lang":"JavaScript"}],"page":"5/1581","h":"5. 最长回文子串","d":"<div class=\"notranslate\"><p>给定一个字符串 <code>s</code>，找到 <code>s</code> 中最长的回文子串。你可以假设&nbsp;<code>s</code> 的最大长度为 1000。</p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre><strong>输入:</strong> \"babad\"\n<strong>输出:</strong> \"bab\"\n<strong>注意:</strong> \"aba\" 也是一个有效答案。\n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre><strong>输入:</strong> \"cbbd\"\n<strong>输出:</strong> \"bb\"\n</pre>\n</div>","l":"中等","s":"/**\n * @param {string} s\n * @return {string}\n */\nvar longestPalindrome = function(s) {\n \n};","lang":"JavaScript","href":"https://leetcode-cn.com/problems/longest-palindromic-substring/","bb":{"x":490,"y":50}}

