{"ls":[{"s":"class Solution {\n    public int findMaximumXOR(int[] nums) {\n \n    }\n}","lang":"Java"},{"s":"class Solution(object):\n    def findMaximumXOR(self, nums):\n        \"\"\"\n        :type nums: List[int]\n        :rtype: int\n        \"\"\"","lang":"Python"},{"s":"class Solution:\n    def findMaximumXOR(self, nums: List[int]) -> int:","lang":"Python3"},{"s":"int findMaximumXOR(int* nums, int numsSize){\n \n}","lang":"C"},{"s":"public class Solution {\n    public int FindMaximumXOR(int[] nums) {\n \n    }\n}","lang":"C#"},{"s":"/**\n * @param {number[]} nums\n * @return {number}\n */\nvar findMaximumXOR = function(nums) {\n \n};","lang":"JavaScript"}],"page":"421/1581","h":"421. 数组中两个数的最大异或值","d":"<div class=\"notranslate\"><p>给定一个非空数组，数组中元素为 a<sub>0</sub>, a<sub>1</sub>, a<sub>2</sub>, … , a<sub>n-1</sub>，其中 0 ≤ a<sub>i</sub> &lt; 2<sup>31&nbsp;</sup>。</p>\n\n<p>找到 a<sub>i</sub> 和a<sub>j&nbsp;</sub>最大的异或 (XOR) 运算结果，其中0 ≤ <em>i</em>,&nbsp;&nbsp;<em>j</em> &lt; <em>n&nbsp;</em>。</p>\n\n<p>你能在O(<em>n</em>)的时间解决这个问题吗？</p>\n\n<p><strong>示例:</strong></p>\n\n<pre><strong>输入:</strong> [3, 10, 5, 25, 2, 8]\n\n<strong>输出:</strong> 28\n\n<strong>解释:</strong> 最大的结果是 <strong>5</strong> ^ <strong>25</strong> = 28.\n</pre>\n</div>","l":"中等","s":"/**\n * @param {number[]} nums\n * @return {number}\n */\nvar findMaximumXOR = function(nums) {\n \n};","lang":"JavaScript","href":"https://leetcode-cn.com/problems/maximum-xor-of-two-numbers-in-an-array/","bb":{"x":490,"y":50}}

