{"ls":[{"s":"class Solution {\n    public int[] numMovesStones(int a, int b, int c) \n{\n \n    }\n}","lang":"Java"},{"s":"class Solution(object):\n    def numMovesStones(self, a, b, c):\n        \"\"\"\n        :type a: int\n        :type b: int\n        :type c: int\n        :rtype: List[int]\n        \"\"\"","lang":"Python"},{"s":"class Solution:\n    def numMovesStones(self, a: int, b: int, c: int) \n-> List[int]:","lang":"Python3"},{"s":"/**\n * Note: The returned array must be malloced, assume \ncaller calls free().\n */\nint* numMovesStones(int a, int b, int c, int* \nreturnSize){\n \n}","lang":"C"},{"s":"public class Solution {\n    public int[] NumMovesStones(int a, int b, int c) \n{\n \n    }\n}","lang":"C#"},{"s":"/**\n * @param {number} a\n * @param {number} b\n * @param {number} c\n * @return {number[]}\n */\nvar numMovesStones = function(a, b, c) {\n \n};","lang":"JavaScript"}],"page":"1033/1581","h":"1033. 移动石子直到连续","d":"<div class=\"notranslate\"><p>三枚石子放置在数轴上，位置分别为 <code>a</code>，<code>b</code>，<code>c</code>。</p>\n\n<p>每一回合，我们假设这三枚石子当前分别位于位置 <code>x, y, z</code> 且 <code>x &lt; y &lt; z</code>。从位置 <code>x</code> 或者是位置 <code>z</code> 拿起一枚石子，并将该石子移动到某一整数位置 <code>k</code> 处，其中 <code>x &lt; k &lt; z</code> 且 <code>k != y</code>。</p>\n\n<p>当你无法进行任何移动时，即，这些石子的位置连续时，游戏结束。</p>\n\n<p>要使游戏结束，你可以执行的最小和最大移动次数分别是多少？ 以长度为 2 的数组形式返回答案：<code>answer = [minimum_moves, maximum_moves]</code></p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre><strong>输入：</strong>a = 1, b = 2, c = 5\n<strong>输出：</strong>[1, 2]\n<strong>解释：</strong>将石子从 5 移动到 4 再移动到 3，或者我们可以直接将石子移动到 3。\n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre><strong>输入：</strong>a = 4, b = 3, c = 2\n<strong>输出：</strong>[0, 0]\n<strong>解释：</strong>我们无法进行任何移动。\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= a &lt;= 100</code></li>\n\t<li><code>1 &lt;= b &lt;= 100</code></li>\n\t<li><code>1 &lt;= c &lt;= 100</code></li>\n\t<li><code>a != b, b != c, c != a</code></li>\n</ol>\n</div>","l":"简单","s":"/**\n * @param {number} a\n * @param {number} b\n * @param {number} c\n * @return {number[]}\n */\nvar numMovesStones = function(a, b, c) {\n \n};","lang":"JavaScript","href":"https://leetcode-cn.com/problems/moving-stones-until-consecutive/","bb":{"x":490,"y":50}}

