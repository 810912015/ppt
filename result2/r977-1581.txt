{"ls":[{"s":"class Solution {\n    public int[] sortedSquares(int[] A) {\n \n    }\n}","lang":"Java"},{"s":"class Solution(object):\n    def sortedSquares(self, A):\n        \"\"\"\n        :type A: List[int]\n        :rtype: List[int]\n        \"\"\"","lang":"Python"},{"s":"class Solution:\n    def sortedSquares(self, A: List[int]) -> List\n[int]:","lang":"Python3"},{"s":"/**\n * Note: The returned array must be malloced, assume \ncaller calls free().\n */\nint* sortedSquares(int* A, int ASize, int* \nreturnSize){\n \n}","lang":"C"},{"s":"public class Solution {\n    public int[] SortedSquares(int[] A) {\n \n    }\n}","lang":"C#"},{"s":"/**\n * @param {number[]} A\n * @return {number[]}\n */\nvar sortedSquares = function(A) {\n \n};","lang":"JavaScript"}],"page":"977/1581","h":"977. 有序数组的平方","d":"<div class=\"notranslate\"><p>给定一个按非递减顺序排序的整数数组 <code>A</code>，返回每个数字的平方组成的新数组，要求也按非递减顺序排序。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre><strong>输入：</strong>[-4,-1,0,3,10]\n<strong>输出：</strong>[0,1,9,16,100]\n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre><strong>输入：</strong>[-7,-3,2,3,11]\n<strong>输出：</strong>[4,9,9,49,121]\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= A.length &lt;= 10000</code></li>\n\t<li><code>-10000 &lt;= A[i] &lt;= 10000</code></li>\n\t<li><code>A</code>&nbsp;已按非递减顺序排序。</li>\n</ol>\n</div>","l":"简单","s":"/**\n * @param {number[]} A\n * @return {number[]}\n */\nvar sortedSquares = function(A) {\n \n};","lang":"JavaScript","href":"https://leetcode-cn.com/problems/squares-of-a-sorted-array/","bb":{"x":490,"y":50}}

