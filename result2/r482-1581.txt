{"ls":[{"s":"class Solution {\n    public String licenseKeyFormatting(String S, int \nK) {\n \n    }\n}","lang":"Java"},{"s":"class Solution(object):\n    def licenseKeyFormatting(self, S, K):\n        \"\"\"\n        :type S: str\n        :type K: int\n        :rtype: str\n        \"\"\"","lang":"Python"},{"s":"class Solution:\n    def licenseKeyFormatting(self, S: str, K: int) \n-> str:","lang":"Python3"},{"s":"char * licenseKeyFormatting(char * S, int K){\n \n}","lang":"C"},{"s":"public class Solution {\n    public string LicenseKeyFormatting(string S, int \nK) {\n \n    }\n}","lang":"C#"},{"s":"/**\n * @param {string} S\n * @param {number} K\n * @return {string}\n */\nvar licenseKeyFormatting = function(S, K) {\n \n};","lang":"JavaScript"}],"page":"482/1581","h":"482. 密钥格式化","d":"<div class=\"notranslate\"><p>给定一个密钥字符串S，只包含字母，数字以及 '-'（破折号）。N 个 '-' 将字符串分成了 N+1 组。给定一个数字 K，重新格式化字符串，除了第一个分组以外，每个分组要包含 K 个字符，第一个分组至少要包含 1 个字符。两个分组之间用 '-'（破折号）隔开，并且将所有的小写字母转换为大写字母。</p>\n\n<p>给定非空字符串 S 和数字 K，按照上面描述的规则进行格式化。</p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre><strong>输入：</strong>S = \"5F3Z-2e-9-w\", K = 4\n\n<strong>输出：</strong>\"5F3Z-2E9W\"\n\n<strong>解释：</strong>字符串 S 被分成了两个部分，每部分 4 个字符；\n&nbsp;    注意，两个额外的破折号需要删掉。\n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre><strong>输入：</strong>S = \"2-5g-3-J\", K = 2\n\n<strong>输出：</strong>\"2-5G-3J\"\n\n<strong>解释：</strong>字符串 S 被分成了 3 个部分，按照前面的规则描述，第一部分的字符可以少于给定的数量，其余部分皆为 2 个字符。\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示:</strong></p>\n\n<ol>\n\t<li>S 的长度不超过 12,000，K 为正整数</li>\n\t<li>S 只包含字母数字（a-z，A-Z，0-9）以及破折号'-'</li>\n\t<li>S 非空</li>\n</ol>\n\n<p>&nbsp;</p>\n</div>","l":"简单","s":"/**\n * @param {string} S\n * @param {number} K\n * @return {string}\n */\nvar licenseKeyFormatting = function(S, K) {\n \n};","lang":"JavaScript","href":"https://leetcode-cn.com/problems/license-key-formatting/","bb":{"x":490,"y":50}}

