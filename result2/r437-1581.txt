{"ls":[{"s":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode(int x) { val = x; }\n * }\n */\nclass Solution {\n    public int pathSum(TreeNode root, int sum) {\n \n    }\n}","lang":"Java"},{"s":"# Definition for a binary tree node.\n# class TreeNode(object):\n#     def __init__(self, x):\n#         self.val = x\n#         self.left = None\n#         self.right = None\n \nclass Solution(object):\n    def pathSum(self, root, sum):\n        \"\"\"\n        :type root: TreeNode\n        :type sum: int\n        :rtype: int\n        \"\"\"","lang":"Python"},{"s":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, x):\n#         self.val = x\n#         self.left = None\n#         self.right = None\n \nclass Solution:\n    def pathSum(self, root: TreeNode, sum: int) -> \nint:","lang":"Python3"},{"s":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     struct TreeNode *left;\n *     struct TreeNode *right;\n * };\n */\n \n \nint pathSum(struct TreeNode* root, int sum){\n \n}","lang":"C"},{"s":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     public int val;\n *     public TreeNode left;\n *     public TreeNode right;\n *     public TreeNode(int x) { val = x; }\n * }\n */\npublic class Solution {\n    public int PathSum(TreeNode root, int sum) {\n \n    }\n}","lang":"C#"},{"s":"/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */\n/**\n * @param {TreeNode} root\n * @param {number} sum\n * @return {number}\n */\nvar pathSum = function(root, sum) {\n \n};","lang":"JavaScript"}],"page":"437/1581","h":"437. 路径总和 III","d":"<div class=\"notranslate\"><p>给定一个二叉树，它的每个结点都存放着一个整数值。</p>\n\n<p>找出路径和等于给定数值的路径总数。</p>\n\n<p>路径不需要从根节点开始，也不需要在叶子节点结束，但是路径方向必须是向下的（只能从父节点到子节点）。</p>\n\n<p>二叉树不超过1000个节点，且节点数值范围是 [-1000000,1000000] 的整数。</p>\n\n<p><strong>示例：</strong></p>\n\n<pre>root = [10,5,-3,3,2,null,11,3,-2,null,1], sum = 8\n\n      10\n     /  \\\n    <strong>5</strong>   <strong>-3</strong>\n   <strong>/</strong> <strong>\\</strong>    <strong>\\</strong>\n  <strong>3</strong>   <strong>2</strong>   <strong>11</strong>\n / \\   <strong>\\</strong>\n3  -2   <strong>1</strong>\n\n返回 3。和等于 8 的路径有:\n\n1.  5 -&gt; 3\n2.  5 -&gt; 2 -&gt; 1\n3.  -3 -&gt; 11\n</pre>\n</div>","l":"简单","s":"/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */\n/**\n * @param {TreeNode} root\n * @param {number} sum\n * @return {number}\n */\nvar pathSum = function(root, sum) {\n \n};","lang":"JavaScript","href":"https://leetcode-cn.com/problems/path-sum-iii/","bb":{"x":490,"y":50}}

