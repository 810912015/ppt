{"ls":[{"s":"class Solution {\n    public boolean isBoomerang(int[][] points) {\n \n    }\n}","lang":"Java"},{"s":"class Solution(object):\n    def isBoomerang(self, points):\n        \"\"\"\n        :type points: List[List[int]]\n        :rtype: bool\n        \"\"\"","lang":"Python"},{"s":"class Solution:\n    def isBoomerang(self, points: List[List[int]]) \n-> bool:","lang":"Python3"},{"s":"bool isBoomerang(int** points, int pointsSize, int* \npointsColSize){\n \n}","lang":"C"},{"s":"public class Solution {\n    public bool IsBoomerang(int[][] points) {\n \n    }\n}","lang":"C#"},{"s":"/**\n * @param {number[][]} points\n * @return {boolean}\n */\nvar isBoomerang = function(points) {\n \n};","lang":"JavaScript"}],"page":"1037/1581","h":"1037. 有效的回旋镖","d":"<div class=\"notranslate\"><p>回旋镖定义为一组三个点，这些点各不相同且<strong>不</strong>在一条直线上。</p>\n\n<p>给出平面上三个点组成的列表，判断这些点是否可以构成回旋镖。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre><strong>输入：</strong>[[1,1],[2,3],[3,2]]\n<strong>输出：</strong>true\n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre><strong>输入：</strong>[[1,1],[2,2],[3,3]]\n<strong>输出：</strong>false</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ol>\n\t<li><code>points.length == 3</code></li>\n\t<li><code>points[i].length == 2</code></li>\n\t<li><code>0 &lt;= points[i][j] &lt;= 100</code></li>\n</ol>\n</div>","l":"简单","s":"/**\n * @param {number[][]} points\n * @return {boolean}\n */\nvar isBoomerang = function(points) {\n \n};","lang":"JavaScript","href":"https://leetcode-cn.com/problems/valid-boomerang/","bb":{"x":490,"y":50}}

