{"ls":[{"s":"class Solution {\n    public double findMaxAverage(int[] nums, int k) {\n \n    }\n}","lang":"Java"},{"s":"class Solution(object):\n    def findMaxAverage(self, nums, k):\n        \"\"\"\n        :type nums: List[int]\n        :type k: int\n        :rtype: float\n        \"\"\"","lang":"Python"},{"s":"class Solution:\n    def findMaxAverage(self, nums: List[int], k: int)\n -> float:","lang":"Python3"},{"s":"double findMaxAverage(int* nums, int numsSize, int k)\n{\n \n}","lang":"C"},{"s":"public class Solution {\n    public double FindMaxAverage(int[] nums, int k) {\n \n    }\n}","lang":"C#"},{"s":"/**\n * @param {number[]} nums\n * @param {number} k\n * @return {number}\n */\nvar findMaxAverage = function(nums, k) {\n \n};","lang":"JavaScript"}],"page":"643/1581","h":"643. 子数组最大平均数 I","d":"<div class=\"notranslate\"><p>给定 <code>n</code> 个整数，找出平均数最大且长度为 <code>k</code> 的连续子数组，并输出该最大平均数。</p>\n\n<p><strong>示例 1:</strong></p>\n\n<pre><strong>输入:</strong> [1,12,-5,-6,50,3], k = 4\n<strong>输出:</strong> 12.75\n<strong>解释:</strong> 最大平均数 (12-5-6+50)/4 = 51/4 = 12.75\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>注意:</strong></p>\n\n<ol>\n\t<li>1 &lt;= <code>k</code> &lt;= <code>n</code> &lt;= 30,000。</li>\n\t<li>所给数据范围 [-10,000，10,000]。</li>\n</ol>\n</div>","l":"简单","s":"/**","lang":"JavaScript","href":"https://leetcode-cn.com/problems/maximum-average-subarray-i/","bb":{"x":490,"y":50}}

