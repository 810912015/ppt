{"ls":[{"s":"class Solution {\n    public boolean checkValidString(String s) {\n \n    }\n}","lang":"Java"},{"s":"class Solution(object):\n    def checkValidString(self, s):\n        \"\"\"\n        :type s: str\n        :rtype: bool\n        \"\"\"","lang":"Python"},{"s":"class Solution:\n    def checkValidString(self, s: str) -> bool:","lang":"Python3"},{"s":"bool checkValidString(char * s){\n \n}","lang":"C"},{"s":"public class Solution {\n    public bool CheckValidString(string s) {\n \n    }\n}","lang":"C#"},{"s":"/**\n * @param {string} s\n * @return {boolean}\n */\nvar checkValidString = function(s) {\n \n};","lang":"JavaScript"}],"page":"678/1581","h":"678. 有效的括号字符串","d":"<div class=\"notranslate\"><p>给定一个只包含三种字符的字符串：<code>（&nbsp;</code>，<code>）</code>&nbsp;和 <code>*</code>，写一个函数来检验这个字符串是否为有效字符串。有效字符串具有如下规则：</p>\n\n<ol>\n\t<li>任何左括号 <code>(</code>&nbsp;必须有相应的右括号 <code>)</code>。</li>\n\t<li>任何右括号 <code>)</code>&nbsp;必须有相应的左括号 <code>(</code>&nbsp;。</li>\n\t<li>左括号 <code>(</code> 必须在对应的右括号之前 <code>)</code>。</li>\n\t<li><code>*</code>&nbsp;可以被视为单个右括号 <code>)</code>&nbsp;，或单个左括号 <code>(</code>&nbsp;，或一个空字符串。</li>\n\t<li>一个空字符串也被视为有效字符串。</li>\n</ol>\n\n<p><strong>示例 1:</strong></p>\n\n<pre><strong>输入:</strong> \"()\"\n<strong>输出:</strong> True\n</pre>\n\n<p><strong>示例 2:</strong></p>\n\n<pre><strong>输入:</strong> \"(*)\"\n<strong>输出:</strong> True\n</pre>\n\n<p><strong>示例 3:</strong></p>\n\n<pre><strong>输入:</strong> \"(*))\"\n<strong>输出:</strong> True\n</pre>\n\n<p><strong>注意:</strong></p>\n\n<ol>\n\t<li>字符串大小将在 [1，100] 范围内。</li>\n</ol>\n</div>","l":"中等","s":"/**\n * @param {string} s\n * @return {boolean}\n */\nvar checkValidString = function(s) {\n \n};","lang":"JavaScript","href":"https://leetcode-cn.com/problems/valid-parenthesis-string/","bb":{"x":490,"y":50}}

