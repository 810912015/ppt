{"ls":[{"s":"class Solution {\n    public int numEquivDominoPairs(int[][] dominoes) \n{\n \n    }\n}","lang":"Java"},{"s":"class Solution(object):\n    def numEquivDominoPairs(self, dominoes):\n        \"\"\"\n        :type dominoes: List[List[int]]\n        :rtype: int\n        \"\"\"","lang":"Python"},{"s":"class Solution:\n    def numEquivDominoPairs(self, dominoes: List[List\n[int]]) -> int:","lang":"Python3"},{"s":"int numEquivDominoPairs(int** dominoes, int \ndominoesSize, int* dominoesColSize){\n \n}","lang":"C"},{"s":"public class Solution {\n    public int NumEquivDominoPairs(int[][] dominoes) \n{\n \n    }\n}","lang":"C#"},{"s":"/**\n * @param {number[][]} dominoes\n * @return {number}\n */\nvar numEquivDominoPairs = function(dominoes) {\n \n};","lang":"JavaScript"}],"page":"1128/1581","h":"1128. 等价多米诺骨牌对的数量","d":"<div class=\"notranslate\"><p>给你一个由一些多米诺骨牌组成的列表&nbsp;<code>dominoes</code>。</p>\n\n<p>如果其中某一张多米诺骨牌可以通过旋转 <code>0</code>&nbsp;度或 <code>180</code> 度得到另一张多米诺骨牌，我们就认为这两张牌是等价的。</p>\n\n<p>形式上，<code>dominoes[i] = [a, b]</code>&nbsp;和&nbsp;<code>dominoes[j] = [c, d]</code>&nbsp;等价的前提是&nbsp;<code>a==c</code>&nbsp;且&nbsp;<code>b==d</code>，或是&nbsp;<code>a==d</code> 且&nbsp;<code>b==c</code>。</p>\n\n<p>在&nbsp;<code>0 &lt;= i &lt; j &lt; dominoes.length</code>&nbsp;的前提下，找出满足&nbsp;<code>dominoes[i]</code> 和&nbsp;<code>dominoes[j]</code>&nbsp;等价的骨牌对 <code>(i, j)</code> 的数量。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例：</strong></p>\n\n<pre><strong>输入：</strong>dominoes = [[1,2],[2,1],[3,4],[5,6]]\n<strong>输出：</strong>1\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= dominoes.length &lt;= 40000</code></li>\n\t<li><code>1 &lt;= dominoes[i][j] &lt;= 9</code></li>\n</ul>\n</div>","l":"简单","s":"/**\n * @param {number[][]} dominoes\n * @return {number}\n */\nvar numEquivDominoPairs = function(dominoes) {\n \n};","lang":"JavaScript","href":"https://leetcode-cn.com/problems/number-of-equivalent-domino-pairs/","bb":{"x":490,"y":50}}

