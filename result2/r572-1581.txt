{"ls":[{"s":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode(int x) { val = x; }\n * }\n */\nclass Solution {\n    public boolean isSubtree(TreeNode s, TreeNode t) \n{\n \n    }\n}","lang":"Java"},{"s":"# Definition for a binary tree node.\n# class TreeNode(object):\n#     def __init__(self, x):\n#         self.val = x\n#         self.left = None\n#         self.right = None\n \nclass Solution(object):\n    def isSubtree(self, s, t):\n        \"\"\"\n        :type s: TreeNode\n        :type t: TreeNode\n        :rtype: bool\n        \"\"\"","lang":"Python"},{"s":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, x):\n#         self.val = x\n#         self.left = None\n#         self.right = None\n \nclass Solution:\n    def isSubtree(self, s: TreeNode, t: TreeNode) -> \nbool:","lang":"Python3"},{"s":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     struct TreeNode *left;\n *     struct TreeNode *right;\n * };\n */\n \n \nbool isSubtree(struct TreeNode* s, struct TreeNode* \nt){\n \n}","lang":"C"},{"s":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     public int val;\n *     public TreeNode left;\n *     public TreeNode right;\n *     public TreeNode(int x) { val = x; }\n * }\n */\npublic class Solution {\n    public bool IsSubtree(TreeNode s, TreeNode t) {\n \n    }\n}","lang":"C#"},{"s":"/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */\n/**\n * @param {TreeNode} s\n * @param {TreeNode} t\n * @return {boolean}\n */\nvar isSubtree = function(s, t) {\n \n};","lang":"JavaScript"}],"page":"572/1581","h":"572. 另一个树的子树","d":"<div class=\"notranslate\"><p>给定两个非空二叉树 <strong>s</strong> 和 <strong>t</strong>，检验&nbsp;<strong>s</strong> 中是否包含和 <strong>t</strong> 具有相同结构和节点值的子树。<strong>s</strong> 的一个子树包括 <strong>s</strong> 的一个节点和这个节点的所有子孙。<strong>s</strong> 也可以看做它自身的一棵子树。</p>\n\n<p><strong>示例 1:</strong><br>\n给定的树 s:</p>\n\n<pre>     3\n    / \\\n   4   5\n  / \\\n 1   2\n</pre>\n\n<p>给定的树 t：</p>\n\n<pre>   4 \n  / \\\n 1   2\n</pre>\n\n<p>返回 <strong>true</strong>，因为 t 与 s 的一个子树拥有相同的结构和节点值。</p>\n\n<p><strong>示例 2:</strong><br>\n给定的树 s：</p>\n\n<pre>     3\n    / \\\n   4   5\n  / \\\n 1   2\n    /\n   0\n</pre>\n\n<p>给定的树 t：</p>\n\n<pre>   4\n  / \\\n 1   2\n</pre>\n\n<p>返回 <strong>false</strong>。</p>\n</div>","l":"简单","s":"/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */\n/**\n * @param {TreeNode} s\n * @param {TreeNode} t\n * @return {boolean}\n */\nvar isSubtree = function(s, t) {\n \n};","lang":"JavaScript","href":"https://leetcode-cn.com/problems/subtree-of-another-tree/","bb":{"x":490,"y":50}}

