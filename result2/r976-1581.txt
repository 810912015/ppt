{"ls":[{"s":"class Solution {\n    public int largestPerimeter(int[] A) {\n \n    }\n}","lang":"Java"},{"s":"class Solution(object):\n    def largestPerimeter(self, A):\n        \"\"\"\n        :type A: List[int]\n        :rtype: int\n        \"\"\"","lang":"Python"},{"s":"class Solution:\n    def largestPerimeter(self, A: List[int]) -> int:","lang":"Python3"},{"s":"int largestPerimeter(int* A, int ASize){\n \n}","lang":"C"},{"s":"public class Solution {\n    public int LargestPerimeter(int[] A) {\n \n    }\n}","lang":"C#"},{"s":"/**\n * @param {number[]} A\n * @return {number}\n */\nvar largestPerimeter = function(A) {\n \n};","lang":"JavaScript"}],"page":"976/1581","h":"976. 三角形的最大周长","d":"<div class=\"notranslate\"><p>给定由一些正数（代表长度）组成的数组 <code>A</code>，返回由其中三个长度组成的、<strong>面积不为零</strong>的三角形的最大周长。</p>\n\n<p>如果不能形成任何面积不为零的三角形，返回&nbsp;<code>0</code>。</p>\n\n<p>&nbsp;</p>\n\n<ol>\n</ol>\n\n<p><strong>示例 1：</strong></p>\n\n<pre><strong>输入：</strong>[2,1,2]\n<strong>输出：</strong>5\n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre><strong>输入：</strong>[1,2,1]\n<strong>输出：</strong>0\n</pre>\n\n<p><strong>示例 3：</strong></p>\n\n<pre><strong>输入：</strong>[3,2,3,4]\n<strong>输出：</strong>10\n</pre>\n\n<p><strong>示例 4：</strong></p>\n\n<pre><strong>输入：</strong>[3,6,2,3]\n<strong>输出：</strong>8\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ol>\n\t<li><code>3 &lt;= A.length &lt;= 10000</code></li>\n\t<li><code>1 &lt;= A[i] &lt;= 10^6</code></li>\n</ol>\n</div>","l":"简单","s":"/**\n * @param {number[]} A\n * @return {number}\n */\nvar largestPerimeter = function(A) {\n \n};","lang":"JavaScript","href":"https://leetcode-cn.com/problems/largest-perimeter-triangle/","bb":{"x":490,"y":50}}

