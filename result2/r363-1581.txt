{"ls":[{"s":"class Solution {\n    public int maxSumSubmatrix(int[][] matrix, int k)\n {\n \n    }\n}","lang":"Java"},{"s":"class Solution(object):\n    def maxSumSubmatrix(self, matrix, k):\n        \"\"\"\n        :type matrix: List[List[int]]\n        :type k: int\n        :rtype: int\n        \"\"\"","lang":"Python"},{"s":"class Solution:\n    def maxSumSubmatrix(self, matrix: List[List[int]]\n, k: int) -> int:","lang":"Python3"},{"s":"int maxSumSubmatrix(int** matrix, int matrixSize, \nint* matrixColSize, int k){\n \n}","lang":"C"},{"s":"public class Solution {\n    public int MaxSumSubmatrix(int[][] matrix, int k)\n {\n \n    }\n}","lang":"C#"},{"s":"/**\n * @param {number[][]} matrix\n * @param {number} k\n * @return {number}\n */\nvar maxSumSubmatrix = function(matrix, k) {\n \n};","lang":"JavaScript"}],"page":"363/1581","h":"363. 矩形区域不超过 K 的最大数值和","d":"<div class=\"notranslate\"><p>给定一个非空二维矩阵&nbsp;<em>matrix&nbsp;</em>和一个整数<em> k</em>，找到这个矩阵内部不大于 <em>k</em> 的最大矩形和。</p>\n\n<p><strong>示例:</strong></p>\n\n<pre><strong>输入: </strong>matrix = [[1,0,1],[0,-2,3]], k = 2\n<strong>输出: </strong>2 \n<strong>解释:</strong>&nbsp;矩形区域&nbsp;<code>[[0, 1], [-2, 3]]</code>&nbsp;的数值和是 2，且 2 是不超过 k 的最大数字（k = 2）。\n</pre>\n\n<p><strong>说明：</strong></p>\n\n<ol>\n\t<li>矩阵内的矩形区域面积必须大于 0。</li>\n\t<li>如果行数远大于列数，你将如何解答呢？</li>\n</ol>\n</div>","l":"困难","s":"/**\n * @param {number[][]} matrix\n * @param {number} k\n * @return {number}\n */\nvar maxSumSubmatrix = function(matrix, k) {\n \n};","lang":"JavaScript","href":"https://leetcode-cn.com/problems/max-sum-of-rectangle-no-larger-than-k/","bb":{"x":490,"y":50}}

