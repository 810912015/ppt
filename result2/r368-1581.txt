{"ls":[{"s":"class Solution {\n    public List<Integer> largestDivisibleSubset(int[]\n nums) {\n \n    }\n}","lang":"Java"},{"s":"class Solution(object):\n    def largestDivisibleSubset(self, nums):\n        \"\"\"\n        :type nums: List[int]\n        :rtype: List[int]\n        \"\"\"","lang":"Python"},{"s":"class Solution:\n    def largestDivisibleSubset(self, nums: List[int])\n -> List[int]:","lang":"Python3"},{"s":"/**\n * Note: The returned array must be malloced, assume \ncaller calls free().\n */\nint* largestDivisibleSubset(int* nums, int numsSize, \nint* returnSize){\n \n}","lang":"C"},{"s":"public class Solution {\n    public IList<int> LargestDivisibleSubset(int[] \nnums) {\n \n    }\n}","lang":"C#"},{"s":"/**\n * @param {number[]} nums\n * @return {number[]}\n */\nvar largestDivisibleSubset = function(nums) {\n \n};","lang":"JavaScript"}],"page":"368/1581","h":"368. 最大整除子集","d":"<div class=\"notranslate\"><p>给出一个由<strong>无重复的</strong>正整数组成的集合，找出其中最大的整除子集，子集中任意一对 (S<sub>i，</sub>S<sub>j</sub>) 都要满足：S<sub>i</sub> % S<sub>j</sub> = 0 或 S<sub>j</sub> % S<sub>i</sub> = 0。</p>\n\n<p>如果有多个目标子集，返回其中任何一个均可。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1:</strong></p>\n\n<pre><strong>输入:</strong> [1,2,3]\n<strong>输出:</strong> [1,2] (当然, [1,3] 也正确)\n</pre>\n\n<p><strong>示例 2:</strong></p>\n\n<pre><strong>输入:</strong> [1,2,4,8]\n<strong>输出:</strong> [1,2,4,8]\n</pre>\n</div>","l":"中等","s":"/**\n * @param {number[]} nums\n * @return {number[]}\n */\nvar largestDivisibleSubset = function(nums) {\n \n};","lang":"JavaScript","href":"https://leetcode-cn.com/problems/largest-divisible-subset/","bb":{"x":490,"y":50}}

