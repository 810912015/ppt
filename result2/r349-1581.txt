{"ls":[{"s":"class Solution {\n    public int[] intersection(int[] nums1, int[] \nnums2) {\n \n    }\n}","lang":"Java"},{"s":"class Solution(object):\n    def intersection(self, nums1, nums2):\n        \"\"\"\n        :type nums1: List[int]\n        :type nums2: List[int]\n        :rtype: List[int]\n        \"\"\"","lang":"Python"},{"s":"class Solution:\n    def intersection(self, nums1: List[int], nums2: \nList[int]) -> List[int]:","lang":"Python3"},{"s":"/**\n * Note: The returned array must be malloced, assume \ncaller calls free().\n */\nint* intersection(int* nums1, int nums1Size, int* \nnums2, int nums2Size, int* returnSize){\n \n}","lang":"C"},{"s":"public class Solution {\n    public int[] Intersection(int[] nums1, int[] \nnums2) {\n \n    }\n}","lang":"C#"},{"s":"/**\n * @param {number[]} nums1\n * @param {number[]} nums2\n * @return {number[]}\n */\nvar intersection = function(nums1, nums2) {\n \n};","lang":"JavaScript"}],"page":"349/1581","h":"349. 两个数组的交集","d":"<div class=\"notranslate\"><p>给定两个数组，编写一个函数来计算它们的交集。</p>\n\n<p><strong>示例 1:</strong></p>\n\n<pre><strong>输入: </strong>nums1 = [1,2,2,1], nums2 = [2,2]\n<strong>输出: </strong>[2]\n</pre>\n\n<p><strong>示例 2:</strong></p>\n\n<pre><strong>输入: </strong>nums1 = [4,9,5], nums2 = [9,4,9,8,4]\n<strong>输出: </strong>[9,4]</pre>\n\n<p><strong>说明:</strong></p>\n\n<ul>\n\t<li>输出结果中的每个元素一定是唯一的。</li>\n\t<li>我们可以不考虑输出结果的顺序。</li>\n</ul>\n</div>","l":"简单","s":"/**\n * @param {number[]} nums1\n * @param {number[]} nums2\n * @return {number[]}\n */\nvar intersection = function(nums1, nums2) {\n \n};","lang":"JavaScript","href":"https://leetcode-cn.com/problems/intersection-of-two-arrays/","bb":{"x":490,"y":50}}

