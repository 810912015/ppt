{"ls":[{"s":"class Solution {\n    public boolean validSquare(int[] p1, int[] p2, \nint[] p3, int[] p4) {\n \n    }\n}","lang":"Java"},{"s":"class Solution(object):\n    def validSquare(self, p1, p2, p3, p4):\n        \"\"\"\n        :type p1: List[int]\n        :type p2: List[int]\n        :type p3: List[int]\n        :type p4: List[int]\n        :rtype: bool\n        \"\"\"","lang":"Python"},{"s":"class Solution:\n    def validSquare(self, p1: List[int], p2: List\n[int], p3: List[int], p4: List[int]) -> bool:","lang":"Python3"},{"s":"bool validSquare(int* p1, int p1Size, int* p2, int \np2Size, int* p3, int p3Size, int* p4, int p4Size){\n \n}","lang":"C"},{"s":"public class Solution {\n    public bool ValidSquare(int[] p1, int[] p2, int[]\n p3, int[] p4) {\n \n    }\n}","lang":"C#"},{"s":"/**\n * @param {number[]} p1\n * @param {number[]} p2\n * @param {number[]} p3\n * @param {number[]} p4\n * @return {boolean}\n */\nvar validSquare = function(p1, p2, p3, p4) {\n \n};","lang":"JavaScript"}],"page":"593/1581","h":"593. 有效的正方形","d":"<div class=\"notranslate\"><p>给定二维空间中四点的坐标，返回四点是否可以构造一个正方形。</p>\n\n<p>一个点的坐标（x，y）由一个有两个整数的整数数组表示。</p>\n\n<p><strong>示例:</strong></p>\n\n<pre><strong>输入:</strong> p1 = [0,0], p2 = [1,1], p3 = [1,0], p4 = [0,1]\n<strong>输出:</strong> True\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>注意:</strong></p>\n\n<ol>\n\t<li>所有输入整数都在 [-10000，10000] 范围内。</li>\n\t<li>一个有效的正方形有四个等长的正长和四个等角（90度角）。</li>\n\t<li>输入点没有顺序。</li>\n</ol>\n</div>","l":"中等","s":"# @param {Integer[]} p1\n# @param {Integer[]} p2\n# @param {Integer[]} p3\n# @param {Integer[]} p4\n# @return {Boolean}\ndef valid_square(p1, p2, p3, p4)\n \nend","lang":"Ruby","href":"https://leetcode-cn.com/problems/valid-square/","bb":{"x":490,"y":50}}

