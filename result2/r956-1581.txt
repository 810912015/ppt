{"ls":[{"s":"class Solution {\n    public int tallestBillboard(int[] rods) {\n \n    }\n}","lang":"Java"},{"s":"class Solution(object):\n    def tallestBillboard(self, rods):\n        \"\"\"\n        :type rods: List[int]\n        :rtype: int\n        \"\"\"","lang":"Python"},{"s":"class Solution:\n    def tallestBillboard(self, rods: List[int]) -> \nint:","lang":"Python3"},{"s":"int tallestBillboard(int* rods, int rodsSize){\n \n}","lang":"C"},{"s":"public class Solution {\n    public int TallestBillboard(int[] rods) {\n \n    }\n}","lang":"C#"},{"s":"/**\n * @param {number[]} rods\n * @return {number}\n */\nvar tallestBillboard = function(rods) {\n \n};","lang":"JavaScript"}],"page":"956/1581","h":"956. 最高的广告牌","d":"<div class=\"notranslate\"><p>你正在安装一个广告牌，并希望它高度最大。这块广告牌将有两个钢制支架，两边各一个。每个钢支架的高度必须相等。</p>\n\n<p>你有一堆可以焊接在一起的钢筋 <code>rods</code>。举个例子，如果钢筋的长度为 1、2 和 3，则可以将它们焊接在一起形成长度为 6 的支架。</p>\n\n<p>返回广告牌的最大可能安装高度。如果没法安装广告牌，请返回 0。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre><strong>输入：</strong>[1,2,3,6]\n<strong>输出：</strong>6\n<strong>解释：</strong>我们有两个不相交的子集 {1,2,3} 和 {6}，它们具有相同的和 sum = 6。\n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre><strong>输入：</strong>[1,2,3,4,5,6]\n<strong>输出：</strong>10\n<strong>解释：</strong>我们有两个不相交的子集 {2,3,5} 和 {4,6}，它们具有相同的和 sum = 10。</pre>\n\n<p><strong>示例 3：</strong></p>\n\n<pre><strong>输入：</strong>[1,2]\n<strong>输出：</strong>0\n<strong>解释：</strong>没法安装广告牌，所以返回 0。</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ol>\n\t<li><code>0 &lt;= rods.length &lt;= 20</code></li>\n\t<li><code>1 &lt;= rods[i] &lt;= 1000</code></li>\n\t<li><code>钢筋的长度总和最多为 5000</code></li>\n</ol>\n</div>","l":"困难","s":"/**\n * @param {number[]} rods\n * @return {number}\n */\nvar tallestBillboard = function(rods) {\n \n};","lang":"JavaScript","href":"https://leetcode-cn.com/problems/tallest-billboard/","bb":{"x":490,"y":50}}

