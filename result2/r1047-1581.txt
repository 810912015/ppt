{"ls":[{"s":"class Solution {\n    public String removeDuplicates(String S) {\n \n    }\n}","lang":"Java"},{"s":"class Solution(object):\n    def removeDuplicates(self, S):\n        \"\"\"\n        :type S: str\n        :rtype: str\n        \"\"\"","lang":"Python"},{"s":"class Solution:\n    def removeDuplicates(self, S: str) -> str:","lang":"Python3"},{"s":"char * removeDuplicates(char * S){\n \n}","lang":"C"},{"s":"public class Solution {\n    public string RemoveDuplicates(string S) {\n \n    }\n}","lang":"C#"},{"s":"/**\n * @param {string} S\n * @return {string}\n */\nvar removeDuplicates = function(S) {\n \n};","lang":"JavaScript"}],"page":"1047/1581","h":"1047. 删除字符串中的所有相邻重复项","d":"<div class=\"notranslate\"><p>给出由小写字母组成的字符串&nbsp;<code>S</code>，<strong>重复项删除操作</strong>会选择两个相邻且相同的字母，并删除它们。</p>\n\n<p>在 S 上反复执行重复项删除操作，直到无法继续删除。</p>\n\n<p>在完成所有重复项删除操作后返回最终的字符串。答案保证唯一。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例：</strong></p>\n\n<pre><strong>输入：</strong>\"abbaca\"\n<strong>输出：</strong>\"ca\"\n<strong>解释：</strong>\n例如，在 \"abbaca\" 中，我们可以删除 \"bb\" 由于两字母相邻且相同，这是此时唯一可以执行删除操作的重复项。之后我们得到字符串 \"aaca\"，其中又只有 \"aa\" 可以执行重复项删除操作，所以最后的字符串为 \"ca\"。\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= S.length &lt;= 20000</code></li>\n\t<li><code>S</code> 仅由小写英文字母组成。</li>\n</ol>\n</div>","l":"简单","s":"/**\n * @param {string} S\n * @return {string}\n */\nvar removeDuplicates = function(S) {\n \n};","lang":"JavaScript","href":"https://leetcode-cn.com/problems/remove-all-adjacent-duplicates-in-string/","bb":{"x":490,"y":50}}

