{"ls":[{"s":"class Solution {\n    public String longestDupSubstring(String S) {\n \n    }\n}","lang":"Java"},{"s":"class Solution(object):\n    def longestDupSubstring(self, S):\n        \"\"\"\n        :type S: str\n        :rtype: str\n        \"\"\"","lang":"Python"},{"s":"class Solution:\n    def longestDupSubstring(self, S: str) -> str:","lang":"Python3"},{"s":"char * longestDupSubstring(char * S){\n \n}","lang":"C"},{"s":"public class Solution {\n    public string LongestDupSubstring(string S) {\n \n    }\n}","lang":"C#"},{"s":"/**\n * @param {string} S\n * @return {string}\n */\nvar longestDupSubstring = function(S) {\n \n};","lang":"JavaScript"}],"page":"1044/1581","h":"1044. 最长重复子串","d":"<div class=\"notranslate\"><p>给出一个字符串&nbsp;<code>S</code>，考虑其所有<strong>重复子串</strong>（<code>S</code> 的连续子串，出现两次或多次，可能会有重叠）。</p>\n\n<p>返回<strong>任何</strong>具有最长可能长度的重复子串。（如果 <code>S</code>&nbsp;不含重复子串，那么答案为&nbsp;<code>\"\"</code>。）</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre><strong>输入：</strong>\"banana\"\n<strong>输出：</strong>\"ana\"\n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre><strong>输入：</strong>\"abcd\"\n<strong>输出：</strong>\"\"\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ol>\n\t<li><code>2 &lt;= S.length &lt;= 10^5</code></li>\n\t<li><code>S</code> 由小写英文字母组成。</li>\n</ol>\n</div>","l":"困难","s":"/**\n * @param {string} S\n * @return {string}\n */\nvar longestDupSubstring = function(S) {\n \n};","lang":"JavaScript","href":"https://leetcode-cn.com/problems/longest-duplicate-substring/","bb":{"x":490,"y":50}}

