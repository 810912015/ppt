{"ls":[{"s":"class Solution {\n    public String shortestCommonSupersequence(String \nstr1, String str2) {\n \n    }\n}","lang":"Java"},{"s":"class Solution(object):\n    def shortestCommonSupersequence(self, str1, str2)\n:\n        \"\"\"\n        :type str1: str\n        :type str2: str\n        :rtype: str\n        \"\"\"","lang":"Python"},{"s":"class Solution:\n    def shortestCommonSupersequence(self, str1: str, \nstr2: str) -> str:","lang":"Python3"},{"s":"char * shortestCommonSupersequence(char * str1, char \n* str2){\n \n}","lang":"C"},{"s":"public class Solution {\n    public string ShortestCommonSupersequence(string \nstr1, string str2) {\n \n    }\n}","lang":"C#"},{"s":"/**\n * @param {string} str1\n * @param {string} str2\n * @return {string}\n */\nvar shortestCommonSupersequence = function(str1, \nstr2) {\n \n};","lang":"JavaScript"}],"page":"1092/1581","h":"1092. 最短公共超序列","d":"<div class=\"notranslate\"><p>给出两个字符串&nbsp;<code>str1</code> 和&nbsp;<code>str2</code>，返回同时以&nbsp;<code>str1</code>&nbsp;和&nbsp;<code>str2</code>&nbsp;作为子序列的最短字符串。如果答案不止一个，则可以返回满足条件的任意一个答案。</p>\n\n<p>（如果从字符串 T 中删除一些字符（也可能不删除，并且选出的这些字符可以位于 T 中的&nbsp;<strong>任意位置</strong>），可以得到字符串 S，那么&nbsp;S 就是&nbsp;T 的子序列）</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例：</strong></p>\n\n<pre><strong>输入：</strong>str1 = \"abac\", str2 = \"cab\"\n<strong>输出：</strong>\"cabac\"\n<strong>解释：</strong>\nstr1 = \"abac\" 是 \"cabac\" 的一个子串，因为我们可以删去 \"cabac\" 的第一个 \"c\"得到 \"abac\"。 \nstr2 = \"cab\" 是 \"cabac\" 的一个子串，因为我们可以删去 \"cabac\" 末尾的 \"ac\" 得到 \"cab\"。\n最终我们给出的答案是满足上述属性的最短字符串。\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= str1.length, str2.length &lt;= 1000</code></li>\n\t<li><code>str1</code> 和&nbsp;<code>str2</code>&nbsp;都由小写英文字母组成。</li>\n</ol>\n</div>","l":"困难","s":"/**\n * @param {string} str1\n * @param {string} str2\n * @return {string}\n */\nvar shortestCommonSupersequence = function(str1, \nstr2) {\n \n};","lang":"JavaScript","href":"https://leetcode-cn.com/problems/shortest-common-supersequence/","bb":{"x":490,"y":50}}

