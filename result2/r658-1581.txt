{"ls":[{"s":"class Solution {\n    public List<Integer> findClosestElements(int[] \narr, int k, int x) {\n \n    }\n}","lang":"Java"},{"s":"class Solution(object):\n    def findClosestElements(self, arr, k, x):\n        \"\"\"\n        :type arr: List[int]\n        :type k: int\n        :type x: int\n        :rtype: List[int]\n        \"\"\"","lang":"Python"},{"s":"class Solution:\n    def findClosestElements(self, arr: List[int], k: \nint, x: int) -> List[int]:","lang":"Python3"},{"s":"/**\n * Note: The returned array must be malloced, assume \ncaller calls free().\n */\nint* findClosestElements(int* arr, int arrSize, int \nk, int x, int* returnSize){\n \n}","lang":"C"},{"s":"public class Solution {\n    public IList<int> FindClosestElements(int[] arr, \nint k, int x) {\n \n    }\n}","lang":"C#"},{"s":"/**\n * @param {number[]} arr\n * @param {number} k\n * @param {number} x\n * @return {number[]}\n */\nvar findClosestElements = function(arr, k, x) {\n \n};","lang":"JavaScript"}],"page":"658/1581","h":"658. 找到 K 个最接近的元素","d":"<div class=\"notranslate\"><p>给定一个排序好的数组，两个整数 <code>k</code> 和 <code>x</code>，从数组中找到最靠近 <code>x</code>（两数之差最小）的 <code>k</code> 个数。返回的结果必须要是按升序排好的。如果有两个数与 <code>x</code> 的差值一样，优先选择数值较小的那个数。</p>\n\n<p><strong>示例&nbsp;1:</strong></p>\n\n<pre><strong>输入:</strong> [1,2,3,4,5], k=4, x=3\n<strong>输出:</strong> [1,2,3,4]\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 2:</strong></p>\n\n<pre><strong>输入:</strong> [1,2,3,4,5], k=4, x=-1\n<strong>输出:</strong> [1,2,3,4]\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>说明:</strong></p>\n\n<ol>\n\t<li>k 的值为正数，且总是小于给定排序数组的长度。</li>\n\t<li>数组不为空，且长度不超过 10<sup>4</sup></li>\n\t<li>数组里的每个元素与&nbsp;x 的绝对值不超过 10<sup>4</sup></li>\n</ol>\n\n<p>&nbsp;</p>\n\n<p><strong>更新(2017/9/19):</strong><br>\n这个参数 <em>arr</em> 已经被改变为一个<strong>整数数组</strong>（而不是整数列表）。<strong><em>&nbsp;请重新加载代码定义以获取最新更改。</em></strong></p>\n</div>","l":"中等","s":"/**\n * @param {number[]} arr\n * @param {number} k\n * @param {number} x\n * @return {number[]}\n */\nvar findClosestElements = function(arr, k, x) {\n \n};","lang":"JavaScript","href":"https://leetcode-cn.com/problems/find-k-closest-elements/","bb":{"x":490,"y":50}}

