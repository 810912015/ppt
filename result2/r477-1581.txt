{"ls":[{"s":"class Solution {\n    public int totalHammingDistance(int[] nums) {\n \n    }\n}","lang":"Java"},{"s":"class Solution(object):\n    def totalHammingDistance(self, nums):\n        \"\"\"\n        :type nums: List[int]\n        :rtype: int\n        \"\"\"","lang":"Python"},{"s":"class Solution:\n    def totalHammingDistance(self, nums: List[int]) \n-> int:","lang":"Python3"},{"s":"int totalHammingDistance(int* nums, int numsSize){\n \n}","lang":"C"},{"s":"public class Solution {\n    public int TotalHammingDistance(int[] nums) {\n \n    }\n}","lang":"C#"},{"s":"/**\n * @param {number[]} nums\n * @return {number}\n */\nvar totalHammingDistance = function(nums) {\n \n};","lang":"JavaScript"}],"page":"477/1581","h":"477. 汉明距离总和","d":"<div class=\"notranslate\"><p>两个整数的&nbsp;<a href=\"https://baike.baidu.com/item/%E6%B1%89%E6%98%8E%E8%B7%9D%E7%A6%BB/475174?fr=aladdin\">汉明距离</a> 指的是这两个数字的二进制数对应位不同的数量。</p>\n\n<p>计算一个数组中，任意两个数之间汉明距离的总和。</p>\n\n<p><strong>示例:</strong></p>\n\n<pre><strong>输入:</strong> 4, 14, 2\n\n<strong>输出:</strong> 6\n\n<strong>解释:</strong> 在二进制表示中，4表示为0100，14表示为1110，2表示为0010。（这样表示是为了体现后四位之间关系）\n所以答案为：\nHammingDistance(4, 14) + HammingDistance(4, 2) + HammingDistance(14, 2) = 2 + 2 + 2 = 6.\n</pre>\n\n<p><strong>注意:</strong></p>\n\n<ol>\n\t<li>数组中元素的范围为从&nbsp;<code>0</code>到&nbsp;<code>10^9</code>。</li>\n\t<li>数组的长度不超过&nbsp;<code>10^4</code>。</li>\n</ol>\n</div>","l":"中等","s":"/**\n * @param {number[]} nums\n * @return {number}\n */\nvar totalHammingDistance = function(nums) {\n \n};","lang":"JavaScript","href":"https://leetcode-cn.com/problems/total-hamming-distance/","bb":{"x":490,"y":50}}

