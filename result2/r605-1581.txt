{"ls":[{"s":"class Solution {\n    public boolean canPlaceFlowers(int[] flowerbed, \nint n) {\n \n    }\n}","lang":"Java"},{"s":"class Solution(object):\n    def canPlaceFlowers(self, flowerbed, n):\n        \"\"\"\n        :type flowerbed: List[int]\n        :type n: int\n        :rtype: bool\n        \"\"\"","lang":"Python"},{"s":"class Solution:\n    def canPlaceFlowers(self, flowerbed: List[int], \nn: int) -> bool:","lang":"Python3"},{"s":"bool canPlaceFlowers(int* flowerbed, int \nflowerbedSize, int n){\n \n}","lang":"C"},{"s":"public class Solution {\n    public bool CanPlaceFlowers(int[] flowerbed, int \nn) {\n \n    }\n}","lang":"C#"},{"s":"/**\n * @param {number[]} flowerbed\n * @param {number} n\n * @return {boolean}\n */\nvar canPlaceFlowers = function(flowerbed, n) {\n \n};","lang":"JavaScript"}],"page":"605/1581","h":"605. 种花问题","d":"<div class=\"notranslate\"><p>假设你有一个很长的花坛，一部分地块种植了花，另一部分却没有。可是，花卉不能种植在相邻的地块上，它们会争夺水源，两者都会死去。</p>\n\n<p>给定一个花坛（表示为一个数组包含0和1，其中0表示没种植花，1表示种植了花），和一个数&nbsp;<strong>n&nbsp;</strong>。能否在不打破种植规则的情况下种入&nbsp;<strong>n&nbsp;</strong>朵花？能则返回True，不能则返回False。</p>\n\n<p><strong>示例 1:</strong></p>\n\n<pre><strong>输入:</strong> flowerbed = [1,0,0,0,1], n = 1\n<strong>输出:</strong> True\n</pre>\n\n<p><strong>示例 2:</strong></p>\n\n<pre><strong>输入:</strong> flowerbed = [1,0,0,0,1], n = 2\n<strong>输出:</strong> False\n</pre>\n\n<p><strong>注意:</strong></p>\n\n<ol>\n\t<li>数组内已种好的花不会违反种植规则。</li>\n\t<li>输入的数组长度范围为 [1, 20000]。</li>\n\t<li><strong>n</strong> 是非负整数，且不会超过输入数组的大小。</li>\n</ol>\n</div>","l":"简单","s":"class Solution {\npublic:\n    bool canPlaceFlowers(vector<int>& flowerbed, int \nn) {\n \n    }\n};","lang":"C++","href":"https://leetcode-cn.com/problems/can-place-flowers/","bb":{"x":490,"y":50}}

