{"ls":[{"s":"class Solution {\n    public int[] sumEvenAfterQueries(int[] A, int[][]\n queries) {\n \n    }\n}","lang":"Java"},{"s":"class Solution(object):\n    def sumEvenAfterQueries(self, A, queries):\n        \"\"\"\n        :type A: List[int]\n        :type queries: List[List[int]]\n        :rtype: List[int]\n        \"\"\"","lang":"Python"},{"s":"class Solution:\n    def sumEvenAfterQueries(self, A: List[int], \nqueries: List[List[int]]) -> List[int]:","lang":"Python3"},{"s":"/**\n * Note: The returned array must be malloced, assume \ncaller calls free().\n */\nint* sumEvenAfterQueries(int* A, int ASize, int** \nqueries, int queriesSize, int* queriesColSize, int* \nreturnSize){\n \n}","lang":"C"},{"s":"public class Solution {\n    public int[] SumEvenAfterQueries(int[] A, int[][]\n queries) {\n \n    }\n}","lang":"C#"},{"s":"/**\n * @param {number[]} A\n * @param {number[][]} queries\n * @return {number[]}\n */\nvar sumEvenAfterQueries = function(A, queries) {\n \n};","lang":"JavaScript"}],"page":"985/1581","h":"985. 查询后的偶数和","d":"<div class=\"notranslate\"><p>给出一个整数数组&nbsp;<code>A</code>&nbsp;和一个查询数组&nbsp;<code>queries</code>。</p>\n\n<p>对于第&nbsp;<code>i</code>&nbsp;次查询，有&nbsp;<code>val =&nbsp;queries[i][0], index&nbsp;= queries[i][1]</code>，我们会把&nbsp;<code>val</code>&nbsp;加到&nbsp;<code>A[index]</code>&nbsp;上。然后，第&nbsp;<code>i</code>&nbsp;次查询的答案是 <code>A</code> 中偶数值的和。</p>\n\n<p><em>（此处给定的&nbsp;<code>index = queries[i][1]</code>&nbsp;是从 0 开始的索引，每次查询都会永久修改数组&nbsp;<code>A</code>。）</em></p>\n\n<p>返回所有查询的答案。你的答案应当以数组&nbsp;<code>answer</code>&nbsp;给出，<code>answer[i]</code>&nbsp;为第&nbsp;<code>i</code>&nbsp;次查询的答案。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例：</strong></p>\n\n<pre><strong>输入：</strong>A = [1,2,3,4], queries = [[1,0],[-3,1],[-4,0],[2,3]]\n<strong>输出：</strong>[8,6,2,4]\n<strong>解释：</strong>\n开始时，数组为 [1,2,3,4]。\n将 1 加到 A[0] 上之后，数组为 [2,2,3,4]，偶数值之和为 2 + 2 + 4 = 8。\n将 -3 加到 A[1] 上之后，数组为 [2,-1,3,4]，偶数值之和为 2 + 4 = 6。\n将 -4 加到 A[0] 上之后，数组为 [-2,-1,3,4]，偶数值之和为 -2 + 4 = 2。\n将 2 加到 A[3] 上之后，数组为 [-2,-1,3,6]，偶数值之和为 -2 + 6 = 4。\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= A.length &lt;= 10000</code></li>\n\t<li><code>-10000 &lt;= A[i] &lt;= 10000</code></li>\n\t<li><code>1 &lt;= queries.length &lt;= 10000</code></li>\n\t<li><code>-10000 &lt;= queries[i][0] &lt;= 10000</code></li>\n\t<li><code>0 &lt;= queries[i][1] &lt; A.length</code></li>\n</ol>\n</div>","l":"简单","s":"/**\n * @param {number[]} A\n * @param {number[][]} queries\n * @return {number[]}\n */\nvar sumEvenAfterQueries = function(A, queries) {\n \n};","lang":"JavaScript","href":"https://leetcode-cn.com/problems/sum-of-even-numbers-after-queries/","bb":{"x":490,"y":50}}

