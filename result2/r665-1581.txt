{"ls":[{"s":"class Solution {\n    public boolean checkPossibility(int[] nums) {\n \n    }\n}","lang":"Java"},{"s":"class Solution(object):\n    def checkPossibility(self, nums):\n        \"\"\"\n        :type nums: List[int]\n        :rtype: bool\n        \"\"\"","lang":"Python"},{"s":"class Solution:\n    def checkPossibility(self, nums: List[int]) -> \nbool:","lang":"Python3"},{"s":"bool checkPossibility(int* nums, int numsSize){\n \n}","lang":"C"},{"s":"public class Solution {\n    public bool CheckPossibility(int[] nums) {\n \n    }\n}","lang":"C#"},{"s":"/**\n * @param {number[]} nums\n * @return {boolean}\n */\nvar checkPossibility = function(nums) {\n \n};","lang":"JavaScript"}],"page":"665/1581","h":"665. 非递减数列","d":"<div class=\"notranslate\"><p>给你一个长度为&nbsp;<code>n</code>&nbsp;的整数数组，请你判断在 <strong>最多 </strong>改变&nbsp;<code>1</code> 个元素的情况下，该数组能否变成一个非递减数列。</p>\n\n<p>我们是这样定义一个非递减数列的：&nbsp;对于数组中所有的&nbsp;<code>i</code> (1 &lt;= i &lt; n)，总满足&nbsp;<code>array[i] &lt;= array[i + 1]</code>。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1:</strong></p>\n\n<pre><strong>输入:</strong> nums = [4,2,3]\n<strong>输出:</strong> true\n<strong>解释:</strong> 你可以通过把第一个4变成1来使得它成为一个非递减数列。\n</pre>\n\n<p><strong>示例 2:</strong></p>\n\n<pre><strong>输入:</strong> nums = [4,2,1]\n<strong>输出:</strong> false\n<strong>解释:</strong> 你不能在只改变一个元素的情况下将其变为非递减数列。\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>说明：</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= n &lt;= 10 ^ 4</code></li>\n\t<li><code>- 10 ^ 5&nbsp;&lt;= nums[i] &lt;= 10 ^ 5</code></li>\n</ul>\n</div>","l":"简单","s":"/**\n * @param {number[]} nums\n * @return {boolean}\n */\nvar checkPossibility = function(nums) {\n \n};","lang":"JavaScript","href":"https://leetcode-cn.com/problems/non-decreasing-array/","bb":{"x":490,"y":50}}

