{"ls":[{"s":"class Solution {\n    public int integerBreak(int n) {\n \n    }\n}","lang":"Java"},{"s":"class Solution(object):\n    def integerBreak(self, n):\n        \"\"\"\n        :type n: int\n        :rtype: int\n        \"\"\"","lang":"Python"},{"s":"class Solution:\n    def integerBreak(self, n: int) -> int:","lang":"Python3"},{"s":"int integerBreak(int n){\n \n}","lang":"C"},{"s":"public class Solution {\n    public int IntegerBreak(int n) {\n \n    }\n}","lang":"C#"},{"s":"/**\n * @param {number} n\n * @return {number}\n */\nvar integerBreak = function(n) {\n \n};","lang":"JavaScript"}],"page":"343/1581","h":"343. 整数拆分","d":"<div class=\"notranslate\"><p>给定一个正整数&nbsp;<em>n</em>，将其拆分为<strong>至少</strong>两个正整数的和，并使这些整数的乘积最大化。 返回你可以获得的最大乘积。</p>\n\n<p><strong>示例 1:</strong></p>\n\n<pre><strong>输入: </strong>2\n<strong>输出: </strong>1\n<strong>解释: </strong>2 = 1 + 1, 1 × 1 = 1。</pre>\n\n<p><strong>示例&nbsp;2:</strong></p>\n\n<pre><strong>输入: </strong>10\n<strong>输出: </strong>36\n<strong>解释: </strong>10 = 3 + 3 + 4, 3 ×&nbsp;3 ×&nbsp;4 = 36。</pre>\n\n<p><strong>说明: </strong>你可以假设&nbsp;<em>n&nbsp;</em>不小于 2 且不大于 58。</p>\n</div>","l":"中等","s":"/**\n * @param {number} n\n * @return {number}\n */\nvar integerBreak = function(n) {\n \n};","lang":"JavaScript","href":"https://leetcode-cn.com/problems/integer-break/","bb":{"x":490,"y":50}}

