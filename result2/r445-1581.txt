{"ls":[{"s":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode(int x) { val = x; }\n * }\n */\nclass Solution {\n    public ListNode addTwoNumbers(ListNode l1, \nListNode l2) {\n \n    }\n}","lang":"Java"},{"s":"# Definition for singly-linked list.\n# class ListNode(object):\n#     def __init__(self, x):\n#         self.val = x\n#         self.next = None\n \nclass Solution(object):\n    def addTwoNumbers(self, l1, l2):\n        \"\"\"\n        :type l1: ListNode\n        :type l2: ListNode\n        :rtype: ListNode\n        \"\"\"","lang":"Python"},{"s":"# Definition for singly-linked list.\n# class ListNode:\n#     def __init__(self, x):\n#         self.val = x\n#         self.next = None\n \nclass Solution:\n    def addTwoNumbers(self, l1: ListNode, l2: \nListNode) -> ListNode:","lang":"Python3"},{"s":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     struct ListNode *next;\n * };\n */\n \n \nstruct ListNode* addTwoNumbers(struct ListNode* l1, \nstruct ListNode* l2){\n \n}","lang":"C"},{"s":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     public int val;\n *     public ListNode next;\n *     public ListNode(int x) { val = x; }\n * }\n */\npublic class Solution {\n    public ListNode AddTwoNumbers(ListNode l1, \nListNode l2) {\n \n    }\n}","lang":"C#"},{"s":"/**\n * Definition for singly-linked list.\n * function ListNode(val) {\n *     this.val = val;\n *     this.next = null;\n * }\n */\n/**\n * @param {ListNode} l1\n * @param {ListNode} l2\n * @return {ListNode}\n */\nvar addTwoNumbers = function(l1, l2) {\n \n};","lang":"JavaScript"}],"page":"445/1581","h":"445. 两数相加 II","d":"<div class=\"notranslate\"><p>给定两个<strong>非空</strong>链表来代表两个非负整数。数字最高位位于链表开始位置。它们的每个节点只存储单个数字。将这两数相加会返回一个新的链表。</p>\n\n<p>&nbsp;</p>\n\n<p>你可以假设除了数字 0 之外，这两个数字都不会以零开头。</p>\n\n<p><strong>进阶:</strong></p>\n\n<p>如果输入链表不能修改该如何处理？换句话说，你不能对列表中的节点进行翻转。</p>\n\n<p><strong>示例:</strong></p>\n\n<pre><strong>输入:</strong> (7 -&gt; 2 -&gt; 4 -&gt; 3) + (5 -&gt; 6 -&gt; 4)\n<strong>输出:</strong> 7 -&gt; 8 -&gt; 0 -&gt; 7\n</pre>\n</div>","l":"中等","s":"/**\n * Definition for singly-linked list.\n * function ListNode(val) {\n *     this.val = val;\n *     this.next = null;\n * }\n */\n/**\n * @param {ListNode} l1\n * @param {ListNode} l2\n * @return {ListNode}\n */\nvar addTwoNumbers = function(l1, l2) {\n \n};","lang":"JavaScript","href":"https://leetcode-cn.com/problems/add-two-numbers-ii/","bb":{"x":490,"y":50}}

