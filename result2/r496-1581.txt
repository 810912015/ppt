{"ls":[{"s":"class Solution {\n    public int[] nextGreaterElement(int[] nums1, int\n[] nums2) {\n \n    }\n}","lang":"Java"},{"s":"class Solution(object):\n    def nextGreaterElement(self, nums1, nums2):\n        \"\"\"\n        :type nums1: List[int]\n        :type nums2: List[int]\n        :rtype: List[int]\n        \"\"\"","lang":"Python"},{"s":"class Solution:\n    def nextGreaterElement(self, nums1: List[int], \nnums2: List[int]) -> List[int]:","lang":"Python3"},{"s":"/**\n * Note: The returned array must be malloced, assume \ncaller calls free().\n */\nint* nextGreaterElement(int* nums1, int nums1Size, \nint* nums2, int nums2Size, int* returnSize){\n \n}","lang":"C"},{"s":"public class Solution {\n    public int[] NextGreaterElement(int[] nums1, int\n[] nums2) {\n \n    }\n}","lang":"C#"},{"s":"/**\n * @param {number[]} nums1\n * @param {number[]} nums2\n * @return {number[]}\n */\nvar nextGreaterElement = function(nums1, nums2) {\n \n};","lang":"JavaScript"}],"page":"496/1581","h":"496. 下一个更大元素 I","d":"<div class=\"notranslate\"><p>给定两个<strong>没有重复元素</strong>的数组&nbsp;<code>nums1</code> 和&nbsp;<code>nums2</code>&nbsp;，其中<code>nums1</code>&nbsp;是&nbsp;<code>nums2</code>&nbsp;的子集。找到&nbsp;<code>nums1</code>&nbsp;中每个元素在&nbsp;<code>nums2</code>&nbsp;中的下一个比其大的值。</p>\n\n<p><code>nums1</code>&nbsp;中数字&nbsp;<strong>x</strong>&nbsp;的下一个更大元素是指&nbsp;<strong>x</strong>&nbsp;在&nbsp;<code>nums2</code>&nbsp;中对应位置的右边的第一个比&nbsp;<strong>x&nbsp;</strong>大的元素。如果不存在，对应位置输出-1。</p>\n\n<p><strong>示例 1:</strong></p>\n\n<pre><strong>输入:</strong> <strong>nums1</strong> = [4,1,2], <strong>nums2</strong> = [1,3,4,2].\n<strong>输出:</strong> [-1,3,-1]\n<strong>解释:</strong>\n    对于num1中的数字4，你无法在第二个数组中找到下一个更大的数字，因此输出 -1。\n    对于num1中的数字1，第二个数组中数字1右边的下一个较大数字是 3。\n    对于num1中的数字2，第二个数组中没有下一个更大的数字，因此输出 -1。</pre>\n\n<p><strong>示例 2:</strong></p>\n\n<pre><strong>输入:</strong> <strong>nums1</strong> = [2,4], <strong>nums2</strong> = [1,2,3,4].\n<strong>输出:</strong> [3,-1]\n<strong>解释:</strong>\n&nbsp;   对于num1中的数字2，第二个数组中的下一个较大数字是3。\n    对于num1中的数字4，第二个数组中没有下一个更大的数字，因此输出 -1。\n</pre>\n\n<p><strong>注意:</strong></p>\n\n<ol>\n\t<li><code>nums1</code>和<code>nums2</code>中所有元素是唯一的。</li>\n\t<li><code>nums1</code>和<code>nums2</code>&nbsp;的数组大小都不超过1000。</li>\n</ol>\n</div>","l":"简单","s":"/**\n * @param {number[]} nums1\n * @param {number[]} nums2\n * @return {number[]}\n */\nvar nextGreaterElement = function(nums1, nums2) {\n \n};","lang":"JavaScript","href":"https://leetcode-cn.com/problems/next-greater-element-i/","bb":{"x":490,"y":50}}

