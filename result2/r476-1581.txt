{"ls":[{"s":"class Solution {\n    public int findComplement(int num) {\n \n    }\n}","lang":"Java"},{"s":"class Solution(object):\n    def findComplement(self, num):\n        \"\"\"\n        :type num: int\n        :rtype: int\n        \"\"\"","lang":"Python"},{"s":"class Solution:\n    def findComplement(self, num: int) -> int:","lang":"Python3"},{"s":"int findComplement(int num){\n \n}","lang":"C"},{"s":"public class Solution {\n    public int FindComplement(int num) {\n \n    }\n}","lang":"C#"},{"s":"/**\n * @param {number} num\n * @return {number}\n */\nvar findComplement = function(num) {\n \n};","lang":"JavaScript"}],"page":"476/1581","h":"476. 数字的补数","d":"<div class=\"notranslate\"><p>给定一个正整数，输出它的补数。补数是对该数的二进制表示取反。</p>\n\n<p>&nbsp;</p>\n\n<ol>\n</ol>\n\n<p><strong>示例 1:</strong></p>\n\n<pre><strong>输入:</strong> 5\n<strong>输出:</strong> 2\n<strong>解释:</strong> 5 的二进制表示为 101（没有前导零位），其补数为 010。所以你需要输出 2 。\n</pre>\n\n<p><strong>示例 2:</strong></p>\n\n<pre><strong>输入:</strong> 1\n<strong>输出:</strong> 0\n<strong>解释:</strong> 1 的二进制表示为 1（没有前导零位），其补数为 0。所以你需要输出 0 。\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>注意:</strong></p>\n\n<ol>\n\t<li>给定的整数保证在 32 位带符号整数的范围内。</li>\n\t<li>你可以假定二进制数不包含前导零位。</li>\n\t<li>本题与 1009 <a href=\"https://leetcode-cn.com/problems/complement-of-base-10-integer/\">https://leetcode-cn.com/problems/complement-of-base-10-integer/</a> 相同</li>\n</ol>\n</div>","l":"简单","s":"/**\n * @param {number} num\n * @return {number}\n */\nvar findComplement = function(num) {\n \n};","lang":"JavaScript","href":"https://leetcode-cn.com/problems/number-complement/","bb":{"x":490,"y":50}}

