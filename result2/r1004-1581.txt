{"ls":[{"s":"class Solution {\n    public int longestOnes(int[] A, int K) {\n \n    }\n}","lang":"Java"},{"s":"class Solution(object):\n    def longestOnes(self, A, K):\n        \"\"\"\n        :type A: List[int]\n        :type K: int\n        :rtype: int\n        \"\"\"","lang":"Python"},{"s":"class Solution:\n    def longestOnes(self, A: List[int], K: int) -> \nint:","lang":"Python3"},{"s":"int longestOnes(int* A, int ASize, int K){\n \n}","lang":"C"},{"s":"public class Solution {\n    public int LongestOnes(int[] A, int K) {\n \n    }\n}","lang":"C#"},{"s":"/**\n * @param {number[]} A\n * @param {number} K\n * @return {number}\n */\nvar longestOnes = function(A, K) {\n \n};","lang":"JavaScript"}],"page":"1004/1581","h":"1004. 最大连续1的个数 III","d":"<div class=\"notranslate\"><p>给定一个由若干 <code>0</code> 和 <code>1</code> 组成的数组&nbsp;<code>A</code>，我们最多可以将&nbsp;<code>K</code>&nbsp;个值从 0 变成 1 。</p>\n\n<p>返回仅包含 1 的最长（连续）子数组的长度。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre><strong>输入：</strong>A = [1,1,1,0,0,0,1,1,1,1,0], K = 2\n<strong>输出：</strong>6\n<strong>解释： </strong>\n[1,1,1,0,0,<strong>1</strong>,1,1,1,1,<strong>1</strong>]\n粗体数字从 0 翻转到 1，最长的子数组长度为 6。</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre><strong>输入：</strong>A = [0,0,1,1,0,0,1,1,1,0,1,1,0,0,0,1,1,1,1], K = 3\n<strong>输出：</strong>10\n<strong>解释：</strong>\n[0,0,1,1,<strong>1</strong>,<strong>1</strong>,1,1,1,<strong>1</strong>,1,1,0,0,0,1,1,1,1]\n粗体数字从 0 翻转到 1，最长的子数组长度为 10。</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= A.length &lt;= 20000</code></li>\n\t<li><code>0 &lt;= K &lt;= A.length</code></li>\n\t<li><code>A[i]</code> 为&nbsp;<code>0</code>&nbsp;或&nbsp;<code>1</code>&nbsp;</li>\n</ol>\n</div>","l":"中等","s":"/**\n * @param {number[]} A\n * @param {number} K\n * @return {number}\n */\nvar longestOnes = function(A, K) {\n \n};","lang":"JavaScript","href":"https://leetcode-cn.com/problems/max-consecutive-ones-iii/","bb":{"x":490,"y":50}}

