{"ls":[{"s":"class Solution {\n    public List<String> topKFrequent(String[] words, \nint k) {\n \n    }\n}","lang":"Java"},{"s":"class Solution(object):\n    def topKFrequent(self, words, k):\n        \"\"\"\n        :type words: List[str]\n        :type k: int\n        :rtype: List[str]\n        \"\"\"","lang":"Python"},{"s":"class Solution:\n    def topKFrequent(self, words: List[str], k: int) \n-> List[str]:","lang":"Python3"},{"s":"/**\n * Note: The returned array must be malloced, assume \ncaller calls free().\n */\nchar ** topKFrequent(char ** words, int wordsSize, \nint k, int* returnSize){\n \n}","lang":"C"},{"s":"public class Solution {\n    public IList<string> TopKFrequent(string[] words,\n int k) {\n \n    }\n}","lang":"C#"},{"s":"/**\n * @param {string[]} words\n * @param {number} k\n * @return {string[]}\n */\nvar topKFrequent = function(words, k) {\n \n};","lang":"JavaScript"}],"page":"692/1581","h":"692. 前K个高频单词","d":"<div class=\"notranslate\"><p>给一非空的单词列表，返回前&nbsp;<em>k&nbsp;</em>个出现次数最多的单词。</p>\n\n<p>返回的答案应该按单词出现频率由高到低排序。如果不同的单词有相同出现频率，按字母顺序排序。</p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre><strong>输入:</strong> [\"i\", \"love\", \"leetcode\", \"i\", \"love\", \"coding\"], k = 2\n<strong>输出:</strong> [\"i\", \"love\"]\n<strong>解析:</strong> \"i\" 和 \"love\" 为出现次数最多的两个单词，均为2次。\n    注意，按字母顺序 \"i\" 在 \"love\" 之前。\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 2：</strong></p>\n\n<pre><strong>输入:</strong> [\"the\", \"day\", \"is\", \"sunny\", \"the\", \"the\", \"the\", \"sunny\", \"is\", \"is\"], k = 4\n<strong>输出:</strong> [\"the\", \"is\", \"sunny\", \"day\"]\n<strong>解析:</strong> \"the\", \"is\", \"sunny\" 和 \"day\" 是出现次数最多的四个单词，\n    出现次数依次为 4, 3, 2 和 1 次。\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>注意：</strong></p>\n\n<ol>\n\t<li>假定 <em>k</em> 总为有效值， 1 ≤ <em>k</em> ≤ 集合元素数。</li>\n\t<li>输入的单词均由小写字母组成。</li>\n</ol>\n\n<p>&nbsp;</p>\n\n<p><strong>扩展练习：</strong></p>\n\n<ol>\n\t<li>尝试以&nbsp;<em>O</em>(<em>n</em> log <em>k</em>) 时间复杂度和&nbsp;<em>O</em>(<em>n</em>) 空间复杂度解决。</li>\n</ol>\n</div>","l":"中等","s":"/**\n * @param {string[]} words\n * @param {number} k\n * @return {string[]}\n */\nvar topKFrequent = function(words, k) {\n \n};","lang":"JavaScript","href":"https://leetcode-cn.com/problems/top-k-frequent-words/","bb":{"x":490,"y":50}}

