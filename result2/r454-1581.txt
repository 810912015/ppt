{"ls":[{"s":"class Solution {\n    public int fourSumCount(int[] A, int[] B, int[] \nC, int[] D) {\n \n    }\n}","lang":"Java"},{"s":"class Solution(object):\n    def fourSumCount(self, A, B, C, D):\n        \"\"\"\n        :type A: List[int]\n        :type B: List[int]\n        :type C: List[int]\n        :type D: List[int]\n        :rtype: int\n        \"\"\"","lang":"Python"},{"s":"class Solution:\n    def fourSumCount(self, A: List[int], B: List[int]\n, C: List[int], D: List[int]) -> int:","lang":"Python3"},{"s":"int fourSumCount(int* A, int ASize, int* B, int \nBSize, int* C, int CSize, int* D, int DSize){\n \n}","lang":"C"},{"s":"public class Solution {\n    public int FourSumCount(int[] A, int[] B, int[] \nC, int[] D) {\n \n    }\n}","lang":"C#"},{"s":"/**\n * @param {number[]} A\n * @param {number[]} B\n * @param {number[]} C\n * @param {number[]} D\n * @return {number}\n */\nvar fourSumCount = function(A, B, C, D) {\n \n};","lang":"JavaScript"}],"page":"454/1581","h":"454. 四数相加 II","d":"<div class=\"notranslate\"><p>给定四个包含整数的数组列表&nbsp;A , B , C , D ,计算有多少个元组 <code>(i, j, k, l)</code>&nbsp;，使得&nbsp;<code>A[i] + B[j] + C[k] + D[l] = 0</code>。</p>\n\n<p>为了使问题简单化，所有的 A, B, C, D 具有相同的长度&nbsp;N，且 0 ≤ N ≤ 500 。所有整数的范围在 -2<sup>28</sup> 到 2<sup>28</sup> - 1 之间，最终结果不会超过&nbsp;2<sup>31</sup> - 1 。</p>\n\n<p><strong>例如:</strong></p>\n\n<pre><strong>输入:</strong>\nA = [ 1, 2]\nB = [-2,-1]\nC = [-1, 2]\nD = [ 0, 2]\n\n<strong>输出:</strong>\n2\n\n<strong>解释:</strong>\n两个元组如下:\n1. (0, 0, 0, 1) -&gt; A[0] + B[0] + C[0] + D[1] = 1 + (-2) + (-1) + 2 = 0\n2. (1, 1, 0, 0) -&gt; A[1] + B[1] + C[0] + D[0] = 2 + (-1) + (-1) + 0 = 0\n</pre>\n</div>","l":"中等","s":"/**\n * @param {number[]} A\n * @param {number[]} B\n * @param {number[]} C\n * @param {number[]} D\n * @return {number}\n */\nvar fourSumCount = function(A, B, C, D) {\n \n};","lang":"JavaScript","href":"https://leetcode-cn.com/problems/4sum-ii/","bb":{"x":490,"y":50}}

