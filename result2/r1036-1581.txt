{"ls":[{"s":"class Solution {\n    public boolean isEscapePossible(int[][] blocked, \nint[] source, int[] target) {\n \n    }\n}","lang":"Java"},{"s":"class Solution(object):\n    def isEscapePossible(self, blocked, source, \ntarget):\n        \"\"\"\n        :type blocked: List[List[int]]\n        :type source: List[int]\n        :type target: List[int]\n        :rtype: bool\n        \"\"\"","lang":"Python"},{"s":"class Solution:\n    def isEscapePossible(self, blocked: List[List\n[int]], source: List[int], target: List[int]) -> \nbool:","lang":"Python3"},{"s":"bool isEscapePossible(int** blocked, int blockedSize,\n int* blockedColSize, int* source, int sourceSize, \nint* target, int targetSize){\n \n}","lang":"C"},{"s":"public class Solution {\n    public bool IsEscapePossible(int[][] blocked, int\n[] source, int[] target) {\n \n    }\n}","lang":"C#"},{"s":"/**\n * @param {number[][]} blocked\n * @param {number[]} source\n * @param {number[]} target\n * @return {boolean}\n */\nvar isEscapePossible = function(blocked, source, \ntarget) {\n \n};","lang":"JavaScript"}],"page":"1036/1581","h":"1036. 逃离大迷宫","d":"<div class=\"notranslate\"><p>在一个 10^6 x 10^6 的网格中，每个网格块的坐标为&nbsp;<code>(x, y)</code>，其中&nbsp;<code>0 &lt;= x, y &lt; 10^6</code>。</p>\n\n<p>我们从源方格&nbsp;<code>source</code>&nbsp;开始出发，意图赶往目标方格&nbsp;<code>target</code>。每次移动，我们都可以走到网格中在四个方向上相邻的方格，只要该方格不在给出的封锁列表&nbsp;<code>blocked</code>&nbsp;上。</p>\n\n<p>只有在可以通过一系列的移动到达目标方格时才返回&nbsp;<code>true</code>。否则，返回 <code>false</code>。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre><strong>输入：</strong>blocked = [[0,1],[1,0]], source = [0,0], target = [0,2]\n<strong>输出：</strong>false\n<strong>解释：</strong>\n从源方格无法到达目标方格，因为我们无法在网格中移动。\n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre><strong>输入：</strong>blocked = [], source = [0,0], target = [999999,999999]\n<strong>输出：</strong>true\n<strong>解释：</strong>\n因为没有方格被封锁，所以一定可以到达目标方格。\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ol>\n\t<li><code>0 &lt;= blocked.length &lt;= 200</code></li>\n\t<li><code>blocked[i].length == 2</code></li>\n\t<li><code>0 &lt;= blocked[i][j] &lt; 10^6</code></li>\n\t<li><code>source.length == target.length == 2</code></li>\n\t<li><code>0 &lt;= source[i][j], target[i][j] &lt; 10^6</code></li>\n\t<li><code>source != target</code></li>\n</ol>\n</div>","l":"困难","s":"/**\n * @param {number[][]} blocked\n * @param {number[]} source\n * @param {number[]} target\n * @return {boolean}\n */\nvar isEscapePossible = function(blocked, source, \ntarget) {\n \n};","lang":"JavaScript","href":"https://leetcode-cn.com/problems/escape-a-large-maze/","bb":{"x":490,"y":50}}

