{"ls":[{"s":"class Solution {\n    public int subarraysDivByK(int[] A, int K) {\n \n    }\n}","lang":"Java"},{"s":"class Solution(object):\n    def subarraysDivByK(self, A, K):\n        \"\"\"\n        :type A: List[int]\n        :type K: int\n        :rtype: int\n        \"\"\"","lang":"Python"},{"s":"class Solution:\n    def subarraysDivByK(self, A: List[int], K: int) \n-> int:","lang":"Python3"},{"s":"int subarraysDivByK(int* A, int ASize, int K){\n \n}","lang":"C"},{"s":"public class Solution {\n    public int SubarraysDivByK(int[] A, int K) {\n \n    }\n}","lang":"C#"},{"s":"/**\n * @param {number[]} A\n * @param {number} K\n * @return {number}\n */\nvar subarraysDivByK = function(A, K) {\n \n};","lang":"JavaScript"}],"page":"974/1581","h":"974. 和可被 K 整除的子数组","d":"<div class=\"notranslate\"><p>给定一个整数数组 <code>A</code>，返回其中元素之和可被 <code>K</code>&nbsp;整除的（连续、非空）子数组的数目。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例：</strong></p>\n\n<pre><strong>输入：</strong>A = [4,5,0,-2,-3,1], K = 5\n<strong>输出：</strong>7\n<strong>解释：\n</strong>有 7 个子数组满足其元素之和可被 K = 5 整除：\n[4, 5, 0, -2, -3, 1], [5], [5, 0], [5, 0, -2, -3], [0], [0, -2, -3], [-2, -3]\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= A.length &lt;= 30000</code></li>\n\t<li><code>-10000 &lt;= A[i] &lt;= 10000</code></li>\n\t<li><code>2 &lt;= K &lt;= 10000</code></li>\n</ol>\n</div>","l":"中等","s":"/**\n * @param {number[]} A\n * @param {number} K\n * @return {number}\n */\nvar subarraysDivByK = function(A, K) {\n \n};","lang":"JavaScript","href":"https://leetcode-cn.com/problems/subarray-sums-divisible-by-k/","bb":{"x":490,"y":50}}

