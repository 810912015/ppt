{"ls":[{"s":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode(int x) { val = x; }\n * }\n */\nclass Solution {\n    public TreeNode constructMaximumBinaryTree(int[] \nnums) {\n \n    }\n}","lang":"Java"},{"s":"# Definition for a binary tree node.\n# class TreeNode(object):\n#     def __init__(self, x):\n#         self.val = x\n#         self.left = None\n#         self.right = None\n \nclass Solution(object):\n    def constructMaximumBinaryTree(self, nums):\n        \"\"\"\n        :type nums: List[int]\n        :rtype: TreeNode\n        \"\"\"","lang":"Python"},{"s":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, x):\n#         self.val = x\n#         self.left = None\n#         self.right = None\n \nclass Solution:\n    def constructMaximumBinaryTree(self, nums: List\n[int]) -> TreeNode:","lang":"Python3"},{"s":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     struct TreeNode *left;\n *     struct TreeNode *right;\n * };\n */\n \n \nstruct TreeNode* constructMaximumBinaryTree(int* \nnums, int numsSize){\n \n}","lang":"C"},{"s":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     public int val;\n *     public TreeNode left;\n *     public TreeNode right;\n *     public TreeNode(int x) { val = x; }\n * }\n */\npublic class Solution {\n    public TreeNode ConstructMaximumBinaryTree(int[] \nnums) {\n \n    }\n}","lang":"C#"},{"s":"/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */\n/**\n * @param {number[]} nums\n * @return {TreeNode}\n */\nvar constructMaximumBinaryTree = function(nums) {\n \n};","lang":"JavaScript"}],"page":"654/1581","h":"654. 最大二叉树","d":"<div class=\"notranslate\"><p>给定一个不含重复元素的整数数组。一个以此数组构建的最大二叉树定义如下：</p>\n\n<ol>\n\t<li>二叉树的根是数组中的最大元素。</li>\n\t<li>左子树是通过数组中最大值左边部分构造出的最大二叉树。</li>\n\t<li>右子树是通过数组中最大值右边部分构造出的最大二叉树。</li>\n</ol>\n\n<p>通过给定的数组构建最大二叉树，并且输出这个树的根节点。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 ：</strong></p>\n\n<pre><strong>输入：</strong>[3,2,1,6,0,5]\n<strong>输出：</strong>返回下面这棵树的根节点：\n\n      6\n    /   \\\n   3     5\n    \\    / \n     2  0   \n       \\\n        1\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ol>\n\t<li>给定的数组的大小在 [1, 1000] 之间。</li>\n</ol>\n</div>","l":"中等","s":"/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */\n/**\n * @param {number[]} nums\n * @return {TreeNode}\n */\nvar constructMaximumBinaryTree = function(nums) {\n \n};","lang":"JavaScript","href":"https://leetcode-cn.com/problems/maximum-binary-tree/","bb":{"x":490,"y":50}}

