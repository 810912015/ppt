{"ls":[{"s":"class Solution {\n    public boolean canPartition(int[] nums) {\n \n    }\n}","lang":"Java"},{"s":"class Solution(object):\n    def canPartition(self, nums):\n        \"\"\"\n        :type nums: List[int]\n        :rtype: bool\n        \"\"\"","lang":"Python"},{"s":"class Solution:\n    def canPartition(self, nums: List[int]) -> bool:","lang":"Python3"},{"s":"bool canPartition(int* nums, int numsSize){\n \n}","lang":"C"},{"s":"public class Solution {\n    public bool CanPartition(int[] nums) {\n \n    }\n}","lang":"C#"},{"s":"/**\n * @param {number[]} nums\n * @return {boolean}\n */\nvar canPartition = function(nums) {\n \n};","lang":"JavaScript"}],"page":"416/1581","h":"416. 分割等和子集","d":"<div class=\"notranslate\"><p>给定一个<strong>只包含正整数</strong>的<strong>非空</strong>数组。是否可以将这个数组分割成两个子集，使得两个子集的元素和相等。</p>\n\n<p><strong>注意:</strong></p>\n\n<ol>\n\t<li>每个数组中的元素不会超过 100</li>\n\t<li>数组的大小不会超过 200</li>\n</ol>\n\n<p><strong>示例 1:</strong></p>\n\n<pre>输入: [1, 5, 11, 5]\n\n输出: true\n\n解释: 数组可以分割成 [1, 5, 5] 和 [11].\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>示例&nbsp;2:</strong></p>\n\n<pre>输入: [1, 2, 3, 5]\n\n输出: false\n\n解释: 数组不能分割成两个元素和相等的子集.\n</pre>\n\n<p>&nbsp;</p>\n</div>","l":"中等","s":"/**\n * @param {number[]} nums\n * @return {boolean}\n */\nvar canPartition = function(nums) {\n \n};","lang":"JavaScript","href":"https://leetcode-cn.com/problems/partition-equal-subset-sum/","bb":{"x":490,"y":50}}

