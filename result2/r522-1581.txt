{"ls":[{"s":"class Solution {\n    public int findLUSlength(String[] strs) {\n \n    }\n}","lang":"Java"},{"s":"class Solution(object):\n    def findLUSlength(self, strs):\n        \"\"\"\n        :type strs: List[str]\n        :rtype: int\n        \"\"\"","lang":"Python"},{"s":"class Solution:\n    def findLUSlength(self, strs: List[str]) -> int:","lang":"Python3"},{"s":"int findLUSlength(char ** strs, int strsSize){\n \n}","lang":"C"},{"s":"public class Solution {\n    public int FindLUSlength(string[] strs) {\n \n    }\n}","lang":"C#"},{"s":"/**\n * @param {string[]} strs\n * @return {number}\n */\nvar findLUSlength = function(strs) {\n \n};","lang":"JavaScript"}],"page":"522/1581","h":"522. 最长特殊序列 II","d":"<div class=\"notranslate\"><p>给定字符串列表，你需要从它们中找出最长的特殊序列。最长特殊序列定义如下：该序列为某字符串独有的最长子序列（即不能是其他字符串的子序列）。</p>\n\n<p><strong>子序列</strong>可以通过删去字符串中的某些字符实现，但不能改变剩余字符的相对顺序。空序列为所有字符串的子序列，任何字符串为其自身的子序列。</p>\n\n<p>输入将是一个字符串列表，输出是最长特殊序列的长度。如果最长特殊序列不存在，返回 -1 。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例：</strong></p>\n\n<pre><strong>输入:</strong> \"aba\", \"cdc\", \"eae\"\n<strong>输出:</strong> 3\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ol>\n\t<li>所有给定的字符串长度不会超过 10 。</li>\n\t<li>给定字符串列表的长度将在 [2, 50 ] 之间。</li>\n</ol>\n\n<p>&nbsp;</p>\n</div>","l":"中等","s":"/**\n * @param {string[]} strs\n * @return {number}\n */\nvar findLUSlength = function(strs) {\n \n};","lang":"JavaScript","href":"https://leetcode-cn.com/problems/longest-uncommon-subsequence-ii/","bb":{"x":490,"y":50}}

