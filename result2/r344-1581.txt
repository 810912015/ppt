{"ls":[{"s":"class Solution {\n    public void reverseString(char[] s) {\n \n    }\n}","lang":"Java"},{"s":"class Solution(object):\n    def reverseString(self, s):\n        \"\"\"\n        :type s: List[str]\n        :rtype: None Do not return anything, modify \ns in-place instead.\n        \"\"\"","lang":"Python"},{"s":"class Solution:\n    def reverseString(self, s: List[str]) -> None:\n        \"\"\"\n        Do not return anything, modify s in-place \ninstead.\n        \"\"\"","lang":"Python3"},{"s":"void reverseString(char* s, int sSize){\n \n}","lang":"C"},{"s":"public class Solution {\n    public void ReverseString(char[] s) {\n \n    }\n}","lang":"C#"},{"s":"/**\n * @param {character[]} s\n * @return {void} Do not return anything, modify s \nin-place instead.\n */\nvar reverseString = function(s) {\n \n};","lang":"JavaScript"}],"page":"344/1581","h":"344. 反转字符串","d":"<div class=\"notranslate\"><p>编写一个函数，其作用是将输入的字符串反转过来。输入字符串以字符数组 <code>char[]</code> 的形式给出。</p>\n\n<p>不要给另外的数组分配额外的空间，你必须<strong><a href=\"https://baike.baidu.com/item/原地算法\">原地</a>修改输入数组</strong>、使用 O(1) 的额外空间解决这一问题。</p>\n\n<p>你可以假设数组中的所有字符都是 <a href=\"https://baike.baidu.com/item/ASCII\">ASCII</a> 码表中的可打印字符。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre><strong>输入：</strong>[\"h\",\"e\",\"l\",\"l\",\"o\"]\n<strong>输出：</strong>[\"o\",\"l\",\"l\",\"e\",\"h\"]\n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre><strong>输入：</strong>[\"H\",\"a\",\"n\",\"n\",\"a\",\"h\"]\n<strong>输出：</strong>[\"h\",\"a\",\"n\",\"n\",\"a\",\"H\"]</pre>\n</div>","l":"简单","s":"/**\n * @param {character[]} s\n * @return {void} Do not return anything, modify s \nin-place instead.\n */\nvar reverseString = function(s) {\n \n};","lang":"JavaScript","href":"https://leetcode-cn.com/problems/reverse-string/","bb":{"x":490,"y":50}}

