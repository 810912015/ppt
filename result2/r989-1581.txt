{"ls":[{"s":"class Solution {\n    public List<Integer> addToArrayForm(int[] A, int \nK) {\n \n    }\n}","lang":"Java"},{"s":"class Solution(object):\n    def addToArrayForm(self, A, K):\n        \"\"\"\n        :type A: List[int]\n        :type K: int\n        :rtype: List[int]\n        \"\"\"","lang":"Python"},{"s":"class Solution:\n    def addToArrayForm(self, A: List[int], K: int) \n-> List[int]:","lang":"Python3"},{"s":"/**\n * Note: The returned array must be malloced, assume \ncaller calls free().\n */\nint* addToArrayForm(int* A, int ASize, int K, int* \nreturnSize){\n \n}","lang":"C"},{"s":"public class Solution {\n    public IList<int> AddToArrayForm(int[] A, int K) \n{\n \n    }\n}","lang":"C#"},{"s":"/**\n * @param {number[]} A\n * @param {number} K\n * @return {number[]}\n */\nvar addToArrayForm = function(A, K) {\n \n};","lang":"JavaScript"}],"page":"989/1581","h":"989. 数组形式的整数加法","d":"<div class=\"notranslate\"><p>对于非负整数&nbsp;<code>X</code>&nbsp;而言，<em><code>X</code></em>&nbsp;的<em>数组形式</em>是每位数字按从左到右的顺序形成的数组。例如，如果&nbsp;<code>X = 1231</code>，那么其数组形式为&nbsp;<code>[1,2,3,1]</code>。</p>\n\n<p>给定非负整数 <code>X</code> 的数组形式&nbsp;<code>A</code>，返回整数&nbsp;<code>X+K</code>&nbsp;的数组形式。</p>\n\n<p>&nbsp;</p>\n\n<ol>\n</ol>\n\n<p><strong>示例 1：</strong></p>\n\n<pre><strong>输入：</strong>A = [1,2,0,0], K = 34\n<strong>输出：</strong>[1,2,3,4]\n<strong>解释：</strong>1200 + 34 = 1234\n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre><strong>输入：</strong>A = [2,7,4], K = 181\n<strong>输出：</strong>[4,5,5]\n<strong>解释：</strong>274 + 181 = 455\n</pre>\n\n<p><strong>示例 3：</strong></p>\n\n<pre><strong>输入：</strong>A = [2,1,5], K = 806\n<strong>输出：</strong>[1,0,2,1]\n<strong>解释：</strong>215 + 806 = 1021\n</pre>\n\n<p><strong>示例 4：</strong></p>\n\n<pre><strong>输入：</strong>A = [9,9,9,9,9,9,9,9,9,9], K = 1\n<strong>输出：</strong>[1,0,0,0,0,0,0,0,0,0,0]\n<strong>解释：</strong>9999999999 + 1 = 10000000000\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= A.length &lt;= 10000</code></li>\n\t<li><code>0 &lt;= A[i] &lt;= 9</code></li>\n\t<li><code>0 &lt;= K &lt;= 10000</code></li>\n\t<li>如果&nbsp;<code>A.length &gt; 1</code>，那么&nbsp;<code>A[0] != 0</code></li>\n</ol>\n</div>","l":"简单","s":"/**\n * @param {number[]} A\n * @param {number} K\n * @return {number[]}\n */\nvar addToArrayForm = function(A, K) {\n \n};","lang":"JavaScript","href":"https://leetcode-cn.com/problems/add-to-array-form-of-integer/","bb":{"x":490,"y":50}}

