{"ls":[{"s":"class Solution {\n    public String[] findRestaurant(String[] list1, \nString[] list2) {\n \n    }\n}","lang":"Java"},{"s":"class Solution(object):\n    def findRestaurant(self, list1, list2):\n        \"\"\"\n        :type list1: List[str]\n        :type list2: List[str]\n        :rtype: List[str]\n        \"\"\"","lang":"Python"},{"s":"class Solution:\n    def findRestaurant(self, list1: List[str], \nlist2: List[str]) -> List[str]:","lang":"Python3"},{"s":"/**\n * Note: The returned array must be malloced, assume \ncaller calls free().\n */\nchar ** findRestaurant(char ** list1, int list1Size, \nchar ** list2, int list2Size, int* returnSize){\n \n}","lang":"C"},{"s":"public class Solution {\n    public string[] FindRestaurant(string[] list1, \nstring[] list2) {\n \n    }\n}","lang":"C#"},{"s":"/**\n * @param {string[]} list1\n * @param {string[]} list2\n * @return {string[]}\n */\nvar findRestaurant = function(list1, list2) {\n \n};","lang":"JavaScript"}],"page":"599/1581","h":"599. 两个列表的最小索引总和","d":"<div class=\"notranslate\"><p>假设Andy和Doris想在晚餐时选择一家餐厅，并且他们都有一个表示最喜爱餐厅的列表，每个餐厅的名字用字符串表示。</p>\n\n<p>你需要帮助他们用<strong>最少的索引和</strong>找出他们<strong>共同喜爱的餐厅</strong>。 如果答案不止一个，则输出所有答案并且不考虑顺序。 你可以假设总是存在一个答案。</p>\n\n<p><strong>示例 1:</strong></p>\n\n<pre><strong>输入:</strong>\n[\"Shogun\", \"Tapioca Express\", \"Burger King\", \"KFC\"]\n[\"Piatti\", \"The Grill at Torrey Pines\", \"Hungry Hunter Steakhouse\", \"Shogun\"]\n<strong>输出:</strong> [\"Shogun\"]\n<strong>解释:</strong> 他们唯一共同喜爱的餐厅是“Shogun”。\n</pre>\n\n<p><strong>示例 2:</strong></p>\n\n<pre><strong>输入:</strong>\n[\"Shogun\", \"Tapioca Express\", \"Burger King\", \"KFC\"]\n[\"KFC\", \"Shogun\", \"Burger King\"]\n<strong>输出:</strong> [\"Shogun\"]\n<strong>解释:</strong> 他们共同喜爱且具有最小索引和的餐厅是“Shogun”，它有最小的索引和1(0+1)。\n</pre>\n\n<p><strong>提示:</strong></p>\n\n<ol>\n\t<li>两个列表的长度范围都在&nbsp;[1, 1000]内。</li>\n\t<li>两个列表中的字符串的长度将在[1，30]的范围内。</li>\n\t<li>下标从0开始，到列表的长度减1。</li>\n\t<li>两个列表都没有重复的元素。</li>\n</ol>\n</div>","l":"简单","s":"/**\n * @param {string[]} list1\n * @param {string[]} list2\n * @return {string[]}\n */\nvar findRestaurant = function(list1, list2) {\n \n};","lang":"JavaScript","href":"https://leetcode-cn.com/problems/minimum-index-sum-of-two-lists/","bb":{"x":490,"y":50}}

