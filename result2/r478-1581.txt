{"ls":[{"s":"class Solution {\n \n    public Solution(double radius, double x_center, \ndouble y_center) {\n \n    }\n    \n    public double[] randPoint() {\n \n    }\n}\n \n/**\n * Your Solution object will be instantiated and \ncalled as such:\n * Solution obj = new Solution(radius, x_center, \ny_center);\n * double[] param_1 = obj.randPoint();\n */","lang":"Java"},{"s":"class Solution(object):\n \n    def __init__(self, radius, x_center, y_center):\n        \"\"\"\n        :type radius: float\n        :type x_center: float\n        :type y_center: float\n        \"\"\"\n        \n \n    def randPoint(self):\n        \"\"\"\n        :rtype: List[float]\n        \"\"\"\n        \n \n \n# Your Solution object will be instantiated and \ncalled as such:\n# obj = Solution(radius, x_center, y_center)\n# param_1 = obj.randPoint()","lang":"Python"},{"s":"class Solution:\n \n    def __init__(self, radius: float, x_center: \nfloat, y_center: float):\n        \n \n    def randPoint(self) -> List[float]:\n        \n \n \n# Your Solution object will be instantiated and \ncalled as such:\n# obj = Solution(radius, x_center, y_center)\n# param_1 = obj.randPoint()","lang":"Python3"},{"s":"typedef struct {\n    \n} Solution;\n \n \nSolution* solutionCreate(double radius, double \nx_center, double y_center) {\n    \n}\n \ndouble* solutionRandPoint(Solution* obj, int* \nretSize) {\n  \n}\n \nvoid solutionFree(Solution* obj) {\n    \n}\n \n/**\n * Your Solution struct will be instantiated and \ncalled as such:\n * Solution* obj = solutionCreate(radius, x_center, \ny_center);\n * double* param_1 = solutionRandPoint(obj, retSize);\n ","lang":"C"},{"s":"public class Solution {\n \n    public Solution(double radius, double x_center, \ndouble y_center) {\n \n    }\n    \n    public double[] RandPoint() {\n \n    }\n}\n \n/**\n * Your Solution object will be instantiated and \ncalled as such:\n * Solution obj = new Solution(radius, x_center, \ny_center);\n * double[] param_1 = obj.RandPoint();\n */","lang":"C#"},{"s":"/**\n * @param {number} radius\n * @param {number} x_center\n * @param {number} y_center\n */\nvar Solution = function(radius, x_center, y_center) {\n \n};\n \n/**\n * @return {number[]}\n */\nSolution.prototype.randPoint = function() {\n \n};\n \n/**\n * Your Solution object will be instantiated and \ncalled as such:\n * var obj = new Solution(radius, x_center, y_center)\n * var param_1 = obj.randPoint()\n */","lang":"JavaScript"}],"page":"478/1581","h":"478. 在圆内随机生成点","d":"<div class=\"notranslate\"><p>给定圆的半径和圆心的 x、y 坐标，写一个在圆中产生均匀随机点的函数&nbsp;<code>randPoint</code>&nbsp;。</p>\n\n<p>说明:</p>\n\n<ol>\n\t<li>输入值和输出值都将是<a href=\"https://baike.baidu.com/item/%E6%B5%AE%E7%82%B9%E6%95%B0/6162520\">浮点数</a>。</li>\n\t<li>圆的半径和圆心的 x、y 坐标将作为参数传递给类的构造函数。</li>\n\t<li>圆周上的点也认为是在圆中。</li>\n\t<li><code>randPoint</code>&nbsp;返回一个包含随机点的x坐标和y坐标的大小为2的数组。</li>\n</ol>\n\n<p><strong>示例 1：</strong></p>\n\n<pre><strong>输入: \n</strong>[\"Solution\",\"randPoint\",\"randPoint\",\"randPoint\"]\n[[1,0,0],[],[],[]]\n<strong>输出: </strong>[null,[-0.72939,-0.65505],[-0.78502,-0.28626],[-0.83119,-0.19803]]\n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre><strong>输入: \n</strong>[\"Solution\",\"randPoint\",\"randPoint\",\"randPoint\"]\n[[10,5,-7.5],[],[],[]]\n<strong>输出: </strong>[null,[11.52438,-8.33273],[2.46992,-16.21705],[11.13430,-12.42337]]</pre>\n\n<p><strong>输入语法说明：</strong></p>\n\n<p>输入是两个列表：调用成员函数名和调用的参数。<code>Solution</code>&nbsp;的构造函数有三个参数，圆的半径、圆心的 x 坐标、圆心的 y 坐标。<code>randPoint</code>&nbsp;没有参数。输入参数是一个列表，即使参数为空，也会输入一个 [] 空列表。</p>\n</div>","l":"中等","s":"/**\n * @param {number} radius\n * @param {number} x_center\n * @param {number} y_center\n */\nvar Solution = function(radius, x_center, y_center) {\n \n};\n \n/**\n * @return {number[]}\n */\nSolution.prototype.randPoint = function() {\n \n};\n \n/**\n * Your Solution object will be instantiated and \ncalled as such:\n * var obj = new Solution(radius, x_center, y_center)\n * var param_1 = obj.randPoint()\n */","lang":"JavaScript","href":"https://leetcode-cn.com/problems/generate-random-point-in-a-circle/","bb":{"x":490,"y":50}}

