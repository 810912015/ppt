{"ls":[{"s":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode(int x) { val = x; }\n * }\n */\nclass Solution {\n    public int longestUnivaluePath(TreeNode root) {\n \n    }\n}","lang":"Java"},{"s":"# Definition for a binary tree node.\n# class TreeNode(object):\n#     def __init__(self, x):\n#         self.val = x\n#         self.left = None\n#         self.right = None\n \nclass Solution(object):\n    def longestUnivaluePath(self, root):\n        \"\"\"\n        :type root: TreeNode\n        :rtype: int\n        \"\"\"","lang":"Python"},{"s":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, x):\n#         self.val = x\n#         self.left = None\n#         self.right = None\n \nclass Solution:\n    def longestUnivaluePath(self, root: TreeNode) -> \nint:","lang":"Python3"},{"s":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     struct TreeNode *left;\n *     struct TreeNode *right;\n * };\n */\n \n \nint longestUnivaluePath(struct TreeNode* root){\n \n}","lang":"C"},{"s":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     public int val;\n *     public TreeNode left;\n *     public TreeNode right;\n *     public TreeNode(int x) { val = x; }\n * }\n */\npublic class Solution {\n    public int LongestUnivaluePath(TreeNode root) {\n \n    }\n}","lang":"C#"},{"s":"/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */\n/**\n * @param {TreeNode} root\n * @return {number}\n */\nvar longestUnivaluePath = function(root) {\n \n};","lang":"JavaScript"}],"page":"687/1581","h":"687. 最长同值路径","d":"<div class=\"notranslate\"><p>给定一个二叉树，找到最长的路径，这个路径中的每个节点具有相同值。 这条路径可以经过也可以不经过根节点。</p>\n\n<p><strong>注意</strong>：两个节点之间的路径长度由它们之间的边数表示。</p>\n\n<p><strong>示例 1:</strong></p>\n\n<p>输入:</p>\n\n<pre>              5\n             / \\\n            4   5\n           / \\   \\\n          1   1   5\n</pre>\n\n<p>输出:</p>\n\n<pre>2\n</pre>\n\n<p><strong>示例 2:</strong></p>\n\n<p>输入:</p>\n\n<pre>              1\n             / \\\n            4   5\n           / \\   \\\n          4   4   5\n</pre>\n\n<p>输出:</p>\n\n<pre>2\n</pre>\n\n<p><strong>注意:</strong> 给定的二叉树不超过10000个结点。&nbsp;树的高度不超过1000。</p>\n</div>","l":"简单","s":"/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */\n/**\n * @param {TreeNode} root\n * @return {number}\n */\nvar longestUnivaluePath = function(root) {\n \n};","lang":"JavaScript","href":"https://leetcode-cn.com/problems/longest-univalue-path/","bb":{"x":490,"y":50}}

