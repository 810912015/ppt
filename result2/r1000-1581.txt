{"ls":[{"s":"class Solution {\n    public int mergeStones(int[] stones, int K) {\n \n    }\n}","lang":"Java"},{"s":"class Solution(object):\n    def mergeStones(self, stones, K):\n        \"\"\"\n        :type stones: List[int]\n        :type K: int\n        :rtype: int\n        \"\"\"","lang":"Python"},{"s":"class Solution:\n    def mergeStones(self, stones: List[int], K: int) \n-> int:","lang":"Python3"},{"s":"int mergeStones(int* stones, int stonesSize, int K){\n \n}","lang":"C"},{"s":"public class Solution {\n    public int MergeStones(int[] stones, int K) {\n \n    }\n}","lang":"C#"},{"s":"/**\n * @param {number[]} stones\n * @param {number} K\n * @return {number}\n */\nvar mergeStones = function(stones, K) {\n \n};","lang":"JavaScript"}],"page":"1000/1581","h":"1000. 合并石头的最低成本","d":"<div class=\"notranslate\"><p>有 <code>N</code> 堆石头排成一排，第 <code>i</code> 堆中有&nbsp;<code>stones[i]</code>&nbsp;块石头。</p>\n\n<p>每次<em>移动（move）</em>需要将<strong>连续的</strong>&nbsp;<code>K</code>&nbsp;堆石头合并为一堆，而这个移动的成本为这&nbsp;<code>K</code>&nbsp;堆石头的总数。</p>\n\n<p>找出把所有石头合并成一堆的最低成本。如果不可能，返回 <code>-1</code> 。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre><strong>输入：</strong>stones = [3,2,4,1], K = 2\n<strong>输出：</strong>20\n<strong>解释：</strong>\n从 [3, 2, 4, 1] 开始。\n合并 [3, 2]，成本为 5，剩下 [5, 4, 1]。\n合并 [4, 1]，成本为 5，剩下 [5, 5]。\n合并 [5, 5]，成本为 10，剩下 [10]。\n总成本 20，这是可能的最小值。\n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre><strong>输入：</strong>stones = [3,2,4,1], K = 3\n<strong>输出：</strong>-1\n<strong>解释：</strong>任何合并操作后，都会剩下 2 堆，我们无法再进行合并。所以这项任务是不可能完成的。.\n</pre>\n\n<p><strong>示例 3：</strong></p>\n\n<pre><strong>输入：</strong>stones = [3,5,1,2,6], K = 3\n<strong>输出：</strong>25\n<strong>解释：</strong>\n从 [3, 5, 1, 2, 6] 开始。\n合并 [5, 1, 2]，成本为 8，剩下 [3, 8, 6]。\n合并 [3, 8, 6]，成本为 17，剩下 [17]。\n总成本 25，这是可能的最小值。\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= stones.length &lt;= 30</code></li>\n\t<li><code>2 &lt;= K &lt;= 30</code></li>\n\t<li><code>1 &lt;= stones[i] &lt;= 100</code></li>\n</ul>\n</div>","l":"困难","s":"/**\n * @param {number[]} stones\n * @param {number} K\n * @return {number}\n */\nvar mergeStones = function(stones, K) {\n \n};","lang":"JavaScript","href":"https://leetcode-cn.com/problems/minimum-cost-to-merge-stones/","bb":{"x":490,"y":50}}

