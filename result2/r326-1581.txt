{"ls":[{"s":"class Solution {\n    public boolean isPowerOfThree(int n) {\n \n    }\n}","lang":"Java"},{"s":"class Solution(object):\n    def isPowerOfThree(self, n):\n        \"\"\"\n        :type n: int\n        :rtype: bool\n        \"\"\"","lang":"Python"},{"s":"class Solution:\n    def isPowerOfThree(self, n: int) -> bool:","lang":"Python3"},{"s":"bool isPowerOfThree(int n){\n \n}","lang":"C"},{"s":"public class Solution {\n    public bool IsPowerOfThree(int n) {\n \n    }\n}","lang":"C#"},{"s":"/**\n * @param {number} n\n * @return {boolean}\n */\nvar isPowerOfThree = function(n) {\n \n};","lang":"JavaScript"}],"page":"326/1581","h":"326. 3的幂","d":"<div class=\"notranslate\"><p>给定一个整数，写一个函数来判断它是否是 3&nbsp;的幂次方。</p>\n\n<p><strong>示例 1:</strong></p>\n\n<pre><strong>输入:</strong> 27\n<strong>输出:</strong> true\n</pre>\n\n<p><strong>示例 2:</strong></p>\n\n<pre><strong>输入:</strong> 0\n<strong>输出:</strong> false</pre>\n\n<p><strong>示例 3:</strong></p>\n\n<pre><strong>输入:</strong> 9\n<strong>输出:</strong> true</pre>\n\n<p><strong>示例 4:</strong></p>\n\n<pre><strong>输入:</strong> 45\n<strong>输出:</strong> false</pre>\n\n<p><strong>进阶：</strong><br>\n你能不使用循环或者递归来完成本题吗？</p>\n</div>","l":"简单","s":"/**\n * @param {number} n\n * @return {boolean}\n */\nvar isPowerOfThree = function(n) {\n \n};","lang":"JavaScript","href":"https://leetcode-cn.com/problems/power-of-three/","bb":{"x":490,"y":50}}

